export const FirmwareAdrresses_F514L = `
UINT		AAR							@0x030C		
UINT		AAR_table					@0x0913		
INT		ACCPL							@0x02FF
ULONG		ABSTART_MINMOVE			@0x08C8
UINT		ACC_LIMIT					@0x02C7
UINT		ACR							@0x0912		
UINT		AD0							@0x023c		
UINT		AD0OFF						@0x0244		
UINT		AD1							@0x023d		
UINT		AD1OFF						@0x0245		
UINT		AD2							@0x023e		[V]
UINT		AD2FIL_CFG					@0x09DD
UINT		AD2FIL_VAL					@0x09DC		[V]	
UINT		AD2OFF						@0x0246	
UINT		AD3							@0x023f		
UINT		AD3OFF						@0x0247		
UINT		AD4							@0x0240		[V ]
UINT		AD4OFF						@0x0248		
UINT		AD5							@0x0241		[V]
INT		AD5OFF						@0x0249		
UINT		AD6							@0x0242		
UINT		AD6OFF						@0x024a		
UINT		AD7							@0x0243		[Â°C]
UINT		AD7OFF						@0x024b		
UINT		AD8							@0x080B		
UINT		AD9							@0x09ED		
UINT		AEI_CLKDIV					@0x0855
UINT		AEI_CMPTIME					@0x02FA
UINT		AEI_PER						@0x0854
LONG		ALPHA							@0x0296		
INT		ANALOGUEREFERENCE			@0x08AF
INT		ANGLE_INC					@0x089C
LONG		APOS							@0x0228		[rot]
LONG		APOS_LD						@0x0228		[rot]
LONG		APOS_MT						@0x0988		[rot]
LONG		APOS2							@0x081C		
LONG		APOS_MONITOR						@0xAF86
FIXED		ASPD_MONITOR						@0xAF88
FIXED		ASPD							@0x022c		[rpm]
FIXED		ASPD_LD						@0x098A		[rpm]
FIXED		ASPD_MT						@0x022c		[rpm]
INT		ASPD_BQ_INI					@0x09DE
UINT		ASR							@0x0201
UINT		ASR2							@0x02a7
UINT		ASR3							@0xAF78
LONG		ATIME							@0x02c0		[s]
UINT		AXISONACTIVE				@0x0379
LONG		BETA							@0x0293
INT		BOOST							@0x027d		
UINT		BRAKECFG						@0x0286
UINT		BRAKEDC						@0x028b		
UINT		BRAKELIM						@0x028a		
UINT		BRAKEOFF						@0x028c		
UINT		BRAKEAPPLYDELAY			@0x09F9
UINT		BRAKERELEASEDELAY			@0x09FA 
LONG		BQ1A1_F						@0xBF00
LONG		BQ1A2_F						@0xBF02
LONG		BQ1B0_F						@0xBF04
LONG		BQ1B1_F						@0xBF06
LONG		BQ1B2_F						@0xBF08
LONG		BQ2A1_F						@0xBF0C
LONG		BQ2A2_F						@0xBF0E
LONG		BQ2B0_F						@0xBF10
LONG		BQ2B1_F						@0xBF12
LONG		BQ2B2_F						@0xBF14
LONG		BQ3A1_F						@0xBF18
LONG		BQ3A2_F						@0xBF1A
LONG		BQ3B0_F						@0xBF1C
LONG		BQ3B1_F						@0xBF1E
LONG		BQ3B2_F						@0xBF20
LONG		BQ4A1_F						@0xBF24
LONG		BQ4A2_F						@0xBF26
LONG		BQ4B0_F						@0xBF28
LONG		BQ4B1_F						@0xBF2A
LONG		BQ4B2_F						@0xBF2C
LONG		BQ5A1_F						@0xBF30
LONG		BQ5A2_F						@0xBF32
LONG		BQ5B0_F						@0xBF34
LONG		BQ5B1_F						@0xBF36
LONG		BQ5B2_F						@0xBF38
LONG		BQ6A1_F						@0xBF3C
LONG		BQ6A2_F						@0xBF3E
LONG		BQ6B0_F						@0xBF40
LONG		BQ6B1_F						@0xBF42
LONG		BQ6B2_F						@0xBF44
LONG		BQ7A1_F						@0xBF48
LONG		BQ7A2_F						@0xBF4A
LONG		BQ7B0_F						@0xBF4C
LONG		BQ7B1_F						@0xBF4E
LONG		BQ7B2_F						@0xBF50
LONG		BQ8A1_F						@0xBF54
LONG		BQ8A2_F						@0xBF56
LONG		BQ8B0_F						@0xBF58
LONG		BQ8B1_F						@0xBF5A
LONG		BQ8B2_F						@0xBF5C
LONG		BQ9A1_F						@0xBF60
LONG		BQ9A2_F						@0xBF62
LONG		BQ9B0_F						@0xBF64
LONG		BQ9B1_F						@0xBF66
LONG		BQ9B2_F						@0xBF68
LONG		BQ10A1_F						@0xBF6C
LONG		BQ10A2_F						@0xBF6E
LONG		BQ10B0_F						@0xBF70
LONG		BQ10B1_F						@0xBF72
LONG		BQ10B2_F						@0xBF74
FIXED		CACC							@0x02a2		[rad/s^2]
INT			CACCDECR						@0x0807
INT		CADIN							@0x025c		
LONG		CAMOFF						@0x08D8		
INT		CAMSTART						@0x03AE		
FIXED		CAMX							@0x0904		
FIXED		CAMY							@0x0906		
LONG		CAPPOS						@0x02bc		[rot]
LONG		CAPPOS2						@0x081E		
UINT		CBR							@0x030D		
UINT		CBR_table					@0x0928		
UINT		CCR							@0x030A		
FIXED		CDEC							@0x0858		[rad/s^2]
FIXED		CDREF							@0x02a4		
UINT		CER							@0x0301		
INT		CI0							@0x028d		
INT		CIQ							@0x028e		
UINT		CLPER							@0x0250	
UINT		CONTROL_WORD				@0x09b1
UINT		CONTROL_WORD_1				@0xb981	
UINT		CopenTableAdr				@0x07FA
INT		CORDDTH						@0x028e		
INT		CORDTH						@0x028d		
INT		COSRES						@0x0227		
INT		COSTH							@0x0226		
UINT		COUNTINGDIR					@0x0805
UINT		COUNTINGDIR_MT				@0x0805
UINT		COUNTINGDIR_LD				@0x0916
LONG		CPOS							@0x029e		[rot]	%4
INT		CRTERR						@0x0231		[A]
FIXED		CSPD							@0x02a0		[rpm]
INT			CSPDDECR					@0x09E2
UINT		CSR							@0x030B		
UINT		CTIME							@0x02a6		[s]
INT		CVDC							@0x025b		
UINT		DBT							@0x0253		
INT		DBTLIM						@0x027e		
UINT		DEBUG							@0x08D0
UINT 		DEFAULT_HOME1				@0x3f0029
UINT 		DEFAULT_HOME2				@0x3f0029
UINT 		DEFAULT_HOME3				@0x3f0106
UINT 		DEFAULT_HOME4				@0x3f0106
UINT 		DEFAULT_HOME5				@0x3f0106
UINT 		DEFAULT_HOME6				@0x3f0106
UINT 		DEFAULT_HOME7				@0x3f01d0
UINT 		DEFAULT_HOME8				@0x3f02e6
UINT 		DEFAULT_HOME9				@0x3f03d8
UINT 		DEFAULT_HOME10				@0x3f01d0
UINT 		DEFAULT_HOME11				@0x3f01d0
UINT 		DEFAULT_HOME12				@0x3f02e6
UINT 		DEFAULT_HOME13				@0x3f03d8
UINT 		DEFAULT_HOME14				@0x3f01d0
UINT 		DEFAULT_HOME17				@0x3f0029
UINT 		DEFAULT_HOME18				@0x3f0029
UINT 		DEFAULT_HOME19				@0x3f0106
UINT 		DEFAULT_HOME20				@0x3f0106
UINT 		DEFAULT_HOME21				@0x3f0106
UINT 		DEFAULT_HOME22				@0x3f0106
UINT 		DEFAULT_HOME23				@0x3f01d0
UINT 		DEFAULT_HOME24				@0x3f02e6
UINT 		DEFAULT_HOME25				@0x3f03d8
UINT 		DEFAULT_HOME26				@0x3f01d0
UINT 		DEFAULT_HOME27				@0x3f01d0
UINT 		DEFAULT_HOME28				@0x3f02e6
UINT 		DEFAULT_HOME29				@0x3f03d8
UINT 		DEFAULT_HOME30				@0x3f01d0
UINT 		DEFAULT_HOME33				@0x3f04cc
UINT 		DEFAULT_HOME34				@0x3f04cc
UINT 		DEFAULT_HOME35				@0x3f0509
UINT 		DEFAULT_HOME37				@0x3f050b
UINT 		DEFAULT_HOME38				@0x3f050b
UINT 		DEFAULT_HOME39				@0x3f050b
UINT 		DEFAULT_HOME40				@0x3f050b
INT		DEFAULT_INT0				@0x3f0705
INT		DEFAULT_INT1				@0x3f0736 
INT		DEFAULT_INT10				@0x3f07d3
INT		DEFAULT_INT11				@0x3f07d4
INT		DEFAULT_INT12				@0x3f3ab0
INT		DEFAULT_INT13				@0x3f3bc0
INT		DEFAULT_INT2				@0x3f0742
INT		DEFAULT_INT3				@0x3f078f
INT		DEFAULT_INT4				@0x3f079c
INT		DEFAULT_INT5				@0x3f07ce
INT		DEFAULT_INT6				@0x3f07cf
INT		DEFAULT_INT7				@0x3f07d0
INT		DEFAULT_INT8				@0x3f07d1
INT		DEFAULT_INT9				@0x3f07d2
INT		delta_el_pos				@0x0877
INT		DELTA_THETA					@0x09da
UINT		DER							@0x03AD
UINT		DER2						@0x0305
UINT		DIGIN_ACTIVE_LEVEL		@0x090C
UINT		DIGIN_INVERSION_MASK		@0x090A
UINT		DIGIN_STATUS				@0x0908
UINT		DIGOUT_INVERSION_MASK	@0x090B
UINT		DIGOUT_STATUS				@0x09B8
UINT		DISABLE_SOL_COR				@0x096A
UINT 		DoTMLInitializations		@0x09C0
ULONG		DTMIN							@0x08B0
ULONG		DTMAX							@0x08B2
UINT		E_LEVEL_AD5					@0x0876
INT		Electric_Angle				@0x0891
UINT 		ExecuteAutotuning			@0x0998
UINT 		ExecuteMain 				@0x09BF
INT		EFLEVEL						@0x02c7		
UINT		EIR							@0x0305		
INT		ELPOS							@0x0221		
INT		ELPOSINCMPY					@0x0803
LONG		ELPOSL						@0x080e		
UINT		ELRES							@0x0279
UINT		ELRES_FRACT					@0x0856		
LONG		ELRESL						@0x0874		
INT		ENABLE_OFF					@0x0926
LONG		ENC2THL						@0x024C
UINT		ENCRES						@0x0801
UINT		ENCRES60DEG					@0x08C9
UINT		ENCRES60DEGST				@0x08CD
ULONG		ENCRESLONG					@0x084C			
LONG		EREF							@0x02a8		
LONG		EREFP							@0x02a8		[rot]
FIXED		EREFS							@0x02a8		[rpm]
INT		EREFT							@0x02a9		[A]
INT		EREFV							@0x02a9		[V]
UINT		ERRMAX						@0x02c5		[rot]
ULONG		ERRMAXL						@0x09E0		[rot]
INT		FAULT_REACTION_ACTIVE	@0x085A	
INT		FFL							@0x0223		
INT		FILTER1						@0x029d		
INT		FILTERQ						@0x0982
FIXED		FILT_A						@0x089E
FIXED		FILT_B						@0x08A0
LONG		FINAL_POS					@0x0808
INT		FLAGUV						@0x02fb
UINT 		FunctionTable_pointer 	@0x09C9
FIXED		GEAR							@0x02ac		
UINT		GEARMASTER					@0x0255		
INT		GEARSLAVE					@0x0256		
UINT	GPOUTMASK					@0xAF75
INT		GUARD							@0x027e		
UINT		GUARDTIME					@0x09F2	
INT		HALL							@0x0227		
INT		HALL30						@0x0877		
INT		HALLCASE						@0x0259		
INT		HALLDIR						@0x028f		
INT		HALLA						@0xAF0B
INT		HALLB						@0x0801
INT		HALLC						@0x0257
INT		HALLAGAIN					@0x0287
INT		HALLBGAIN					@0x028F
INT		HALLCGAIN					@0x0279
UINT		HALLAOFF						@0x024A
UINT		HALLBOFF						@0x0247
UINT		HALLCOFF						@0x0258
INT		HALLFILT						@0x0809
INT		HISTDERP		@0x0217
FIXED	HISTINTP		@0x0215
FIXED	HISTINTS		@0x0219
FIXED	HISTINTID		@0x021B
FIXED	HISTINTIQ		@0x021D
INT		HOMECRT						@0x08AC		[A]
LONG		HOMEPOS						@0x0992		[rot]
FIXED		HOMESPD						@0x0994		[rpm]
UINT		HOMETIME						@0x08AD		[s]
UINT 		HOMING_NR				  	@0x09B7
UINT		HOME_NR_6098				@0x039F
LONG		HOME_OFFSET_607C			@0x03A0
FIXED		HOME_HSPD_6099_01			@0x03A4
FIXED		HOME_LSPD_6099_02			@0x03A2
FIXED		HOME_ACC_609A				@0x03A6
INT			HOME_CRT_207B				@0x08AC
UINT		HOME_TIME_207C				@0x08AD		[s]
UINT 		HomingTable_pointer 		@0x09C1
INT		I2_FILTERED					@0x087C	
ULONG		I2TINTLIM_D					@0x0980		
ULONG		I2TINTLIM_M					@0x0814		
ULONG	I2TINT_D					@0x097A
ULONG	I2TINT_M					@0x0816	
INT		IA								@0x0239		[A]
INT		IB								@0x023a		[A]
INT		IBETA							@0x087b		[A]
INT		IC								@0x023b		[A]
UINT		ICR							@0x0304		
INT		ID								@0x0234		[A]
INT		IdFixed						@0x02A7
INT		IDMAX							@0x027b		[A]
INT		IDMIN							@0x027c		[A]
INT		IDREF							@0x0233		[A]
INT		IDRSTEP						@0x027b		[A]
INT		II2TPROT_D					@0x0986		[A]
INT		II2TPROT_M					@0x0818		[A]	
INT		IMAXP							@0x0266		
INT		IMAXPROT						@0x0295		[A]
INT		IMAXS							@0x026c		
INT		INITANGLE					@0x08A8
UINT		INSTATUS						@0x0908
INT		INTTABLE						@0x0307		
INT		ISQ							@0x087C	
INT		IQ								@0x0230		[A]
INT		IQREF							@0x022f		[A]
INT		IQREF_SLOW					@0xAF26		[A]
INT		IQREFFILTERED				@0x0987		[A]
INT		IQREF_BQ_INI				@0x080D
INT		IQRSTEP						@0x027c		[A]
UINT		ISR							@0x0306		
FIXED		JERK							@0x08D2		[rad/s^3]
INT		KDFP							@0x0264	
INT		KDFP2							@0xAF36		
INT		KDP							@0x0262		
INT		KFFA							@0x026e		
INT		KFFL							@0x026f		
INT		KFFS							@0x026d		
INT		KII							@0x0273	
INT		KINC_THETA					@0x09db	
INT		KIP							@0x0260		
INT		KIS							@0x0269		
INT		KISPDEST						@0x0953
INT		KITHT							@0x0893		
INT		KPI							@0x0271		
INT		KPP							@0x025e		
INT		KPS							@0x0267		
INT		KPSPDEST						@0x095C
INT		KPTHT							@0x0892
INT		KSLIP							@0x0279
INT		KSPDERR							@0x09C6
INT		KVOLT							@0x0279
UINT		LEVEL_AD5					@0x086f
UINT		LIFETIME						@0x09f3
UINT		LOG_PTR						@0x0365
INT		LSACTIVE						@0x0832
UINT		LSS_ACTIVE					@0x0823
INT		MASTERID						@0x0927
LONG		MASTERRES					@0x081A
UINT		MAXPWMWOB					@0x028f
INT		MAX_CURRENT					@0x089B		[A]
INT		MAXCCPS						@0x0880
INT		MAXCORRERR						@0x0804
LONG	MAXPOSRANGE						@0xAF02
UINT		MCR							@0x0309
UINT		MCR_1							@0x02B0
LONG		MECRESL						@0x024E
UINT		MER							@0x08FC
UINT		MER_MASK						@0x0965
UINT		ModesOpDisplay				@0x09b5
INT		MOTORON						@0x0312	
INT		MOVESTATE					@0x08A3
LONG	MINPOSRANGE					@0xAF00	
LONG		MPOS0							@0x02E4		
LONG		MREF							@0x02aa		
INT		MSPD							@0x0820		
UINT		MSR							@0x0308		
INT		MSTEP							@0x0807
UINT		MTSTYPE						@0x028c		
INT			NEW_SII_ELANGLE				@0xAF29	
UINT		NEWPERWOB					@0x0287		
LONG		NI2T							@0x0255		
UINT		NodeStateNMT				@0xA174
UINT		OSR							@0x0302		
UINT		PCR							@0x0303		
UINT		PFOVF							@0x029c		
INT		PHASEADV						@0x0257
INT		POS_HALL				@0xB929		
LONG		POS0							@0x02b8		
INT		POSERR						@0x022a		[rot]
LONG 		POSERRL						@0x09BA		[rot]
INT		POSINC						@0x0222		
ULONG		POSINIT						@0x02F2		[rot]
UINT		POSOKLIM						@0x036A		[rot]
UINT		POSOKLIM_FC					@0x09FC		[rot]
LONG		POSTRIGG1					@0x091A		[rot]
LONG		POSTRIGG2					@0x091C		[rot]
LONG		POSTRIGG3					@0x091E		[rot]
LONG		POSTRIGG4					@0x0920		[rot]
UINT		POSTRIG2OUT					@0xB81D
UINT		POSRANGEDEF					@0xAF04
UINT		POSOPTCODE					@0xAF05
LONG		PROBE1_POSITIVE			@0xB832		[rot]
LONG		PROBE1_NEGATIVE			@0xB834		[rot]
LONG		PROBE2_POSITIVE			@0xB836		[rot]
LONG		PROBE2_NEGATIVE			@0xB838		[rot]
LONG		PROD							@0x030e		
LONG		PRODH							@0x030f		
INT		PSFILT						@0x0288		
INT		PVTBUFBEGIN					@0x0864		
INT		PVTBUFLEN					@0x0865		
UINT		PVTMODE						@0x0869
LONG		PVTPOS0						@0x086A		
INT		PVTSENDOFF					@0x092B
UINT		PVTSTS						@0x0863		
UINT		PWMPER						@0x0252	
UINT		QUAL							@0x0806
ULONG		QUAL_ACT						@0x07F0
ULONG		QUAL_AQ1						@0x07F2
ULONG		QUAL_AQ2						@0x07F4
ULONG		QUAL_BCT						@0x07F6
ULONG		QUAL_BQ1						@0x07F8
ULONG		QUAL_BQ2						@0x0918
INT		QUICKSTOPS					@0x082f		
FIXED		REF0							@0x02a8		
FIXED		REF0_fixed					@0x02a8		
LONG		REF0_long					@0x02a8		
INT		REFTST						@0x0281		
INT		REFTST_A						@0x0281		[A]
INT		REFTST_V						@0x0281		[V]
INT		REF_INC						@0x0888
UINT		RFOFFSET						@0x0999
UINT		RFGAIN						@0x099A
INT		RINCTST						@0x0280		
INT		RINCTST_A					@0x0280		[A/s]
INT		RINCTST_V					@0x0280		[V/s]
LONG		RPOS							@0x02ba		
LONG		RTIME							@0x02c2		[s]
INT		SATID							@0x0275		
INT		SATIQ							@0x0276		
INT		SATP							@0x0265		
INT		SATPWM						@0x0254		
INT		SATS							@0x026b		
INT		SBYCRT						@0x024a		[A]
UINT		SCIBR_table					@0x098D		
INT		SCL2H							@0x0281		
UINT		SCL2L							@0x0282		
INT		SCL3							@0x0283		
INT		SCL4							@0x0286		
UINT		SCR							@0x0300		
UINT 		Select_CANmode				@0x09B9
INT		SENSE							@0x0288		
INT		SERRMAX						@0x0879		[rpm]
UINT		SETAD01						@0x024c		
UINT		SETAD23						@0x024d		
UINT		SETAD45						@0x024e		
UINT		SETAD67						@0x024f		
INT		SFI2T_D						@0x098C		
INT		SFI2T_M						@0x0819		
INT		SFTADIN						@0x025d
INT		SFTAFFW						@0x0291
INT		SFTCRT						@0x0290
UINT		SFTCWEAK						@0x0258
INT		SFTKDP						@0x0263
INT		SFTKFF						@0x0270
INT		SFTKII						@0x0274
INT		SFTKIP						@0x0261
INT		SFTKIS						@0x026a
INT		SFTKITHT						@0x0895
INT		SFTKPI						@0x0272
INT		SFTKPP						@0x025f
INT		SFTKPS						@0x0268
INT		SFTKPTHT						@0x0894
INT		SFTKSLIP						@0x027a
INT		SFTKVOLT						@0x027a
INT		SFTSCL1						@0x0280
INT		SFTSFFW						@0x0292		
UINT		SFTSP							@0x0248		
INT		SGCODTH						@0x0289		
INT		SIN2REC						@0x0287		
INT		SINCOS_FRACT				@0x08CC
INT		SINCOS_FRACT_LD				@0x0917
INT		SINRES						@0x0213		
INT		SINTH							@0x0225		
INT		SLAVEID						@0x0311		
UINT		SLPER							@0x0251		
INT		SLsyncOFFSET				@0xb872		
INT		SPDERR						@0x022e		[rpm]
FIXED		SPDERRL						@0x08C6		[rpm]
INT		SPDREF						@0x022b		[rpm]
FIXED		SPDREFL						@0x02F2		[rpm]
INT    	SPDREF_BQ_INI   			@0x080C
INT		SPICLKMODE					@0x0847
INT		SPI_IGNORE_COUNTER					@0xB9DA
INT		SPI_IGNORE_VAL					@0x09E6
ULONG		SR32							@0x090E
UINT 		SPECIAL_IOS_STATUS		@0xA100
INT		SRCOR							@0x027f		
INT		SRECTCOMP					@0x028f		
UINT		SRH							@0x090F		
UINT		SRH_MASK						@0x0963		
UINT		SRL							@0x090E		
UINT		SRL_MASK						@0x0962		
UINT		SSI_ST_bits_ign					@0xAF06
UINT		SSI_MT_bits_ign					@0xAF07
LONG		SSIABSPOS					@0x0940		[rot]
INT		SSIBR							@0x0846
INT		SSIFDBKTYPE						@0x0842
INT		SSINRPARAMS						@0x0841
INT		SSIREV							@0x0843
INT		SSISENSE						@0x0833
UINT	SSITIMEOUT						@0x09FF		[s]
INT		SSITURNS						@0x0844
INT		SSITYPE							@0x0846
INT		SSPL							@0x02fe		
LONG		START_POS					@0x08A4
INT		SMALLTIMEOUT 					@0xAF28
INT		STATE							@0x0288
UINT		STALLLIM						@0x0803
UINT		STEPRES						@0x0802	
ULONG		STEPRESLONG					@0x084A	
UINT		STOERRTIME					@0x09F8
UINT		STOLEVEL						@0xB86D
UINT		STO_LEVEL_10C				@0x0849
UINT		STS_DS402					@0x09E4
UINT		SYNCRATENOTS					@0xB859
LONG		SWNEGLS						@0x088A		[rot]
LONG		SWPOSLS						@0x088C		[rot]
UINT		T1MAXPROT					@0x0298		[Â°C]
UINT		T1ONA							@0x0284		[s]
UINT		T1ONB							@0x0285		[s]
UINT		T2MAXPROT					@0x0299		[Â°C]
FIXED		TACC							@0x02b6		[rad/s^2]
UINT		TERRMAX						@0x02c6		[s]
INT		THETA							@0x0224		[deg]
INT		THETAINC						@0x020e		[deg/s]
INT		THETA_TST					@0x0899		[deg]
INT		THETA_FILT					@0x0891		[deg]
UINT		THT_CORRECTION				@0x0833
INT		THTST							@0x0282		[deg]
UINT		TIMAXPROT					@0x02c4		[s]
LONG		TIME0							@0x02be		[s]
UINT		TIMELIM						@0x0286		[s]
UINT		TIME_LIMIT					@0x0896		[s]
UINT		TIMESBC						@0x028b		[s]		
INT		TINCTST						@0x0283		[deg/s]
LONG		TJERK							@0x08D2		[s]
UINT		TMLINTPER					@0x0983		[s]
UINT		TONPOSOK						@0x036B		[s]
UINT		TONPOSOK_FC					@0x09FD		[s]
LONG		TPOS							@0x02b2		[rot]
LONG		TPOSFAST						@0x095a		[rot]
FIXED		TRANSMISSION				@0x037C
LONG		TREF							@0x02ae		
FIXED		TREF_fixed					@0x02ae		
UINT		TRIGGERED_OUTPUTS			@0x07fe		
UINT		TSERRMAX						@0x087A		[s]
FIXED		TSPD							@0x02b4		[rpm]
INT		UAREF							@0x0236		[V]
INT		UBREF							@0x0237		[V]
INT		UCREF							@0x0238		[V]
INT		UDREF							@0x0235		[V]
UINT		UMAXPROT						@0x029a		[V ]
UINT		UMINPROT						@0x029b		[V ]
INT		UPPS							@0x0881
INT		UPGRADE						@0x0857	
ULONG		UserVar1					@0xBFF8
ULONG		UserVar2					@0xBFFA
ULONG		UserVar3					@0xBFFC
ULONG		UserVar4					@0xBFFE	
INT		UQREF							@0x0232		[V]
INT		VAR_I1						@0x0366		
UINT		VAR_U1						@0x0366		
INT		VAR_I2						@0x0367
UINT		VAR_U2						@0x0367
INT		VAR_I3						@0x0979		
UINT		VAR_U3						@0x0979		
LONG		VAR_LF						@0x0368		
FIXED		VAR_LF_fixed				@0x0368		
LONG		VAR_LF_long					@0x0368
UINT		VARFIL_CFG					@0x099C
UINT		VARFIL_ADR					@0x099D
INT		VARFIL_VAL					@0x099B			
UINT		VDCN							@0x025a		
INT		WEAKINC						@0x0259
INT		WHITE_NOISE					@0xAF25
UINT		ZAOFF							@0x0289
LONG		ZAOFFL							@0xAF98
UINT		ZEROVALOKMARGIN			@0x08CA
LONG		ZEROSPDTLIM					@0x08C0
INT		KOMEGA						@0x02FD
INT		KUPHASE						@0x02FE
INT		UOFFSET						@0x02FC
INT		USTBYCRT						@0x02FF
INT		AT_REFSTARTADDR			@0x09F6
INT		AT_REFMAXPOINTS			@0x09F7
INT		AT_REFINDX					@0x09F4
INT		ATR							@0x09F5
FIXED		DTHETA0						@0xBE80
FIXED		DTHETA_INC					@0xBE82
LONG		AMPL0						@0xBE84
LONG		AMPL_INC					@0xBE86
LONG		SIN_N						@0xBE88
INT		PHASE0						@0xBE8A
INT		FIRST_SINE					@0xBE8B
FIXED		SINE_ANGLE					@0xBE8C
FIXED		SINE_ANGLE_INC					@0xBE8E
LONG		SINEWAVE					@0xBE90
LONG		SIN_CNTR					@0xBE92
LONG		SINE_AMPL					@0xBE94
LONG		AMPL_SAT					@0xBE9A
FIXED		DTHETA_INC_SAT				@0xBE9C
INT		RSFTKIP						@0x0277
INT		RSFTKIS						@0x0278
UINT	GS_FILTER					@0xAF2F
INT		GS_INDEX	@0xB7C0
INT		GS_INDEX_1	@0xB7C1
UINT		GS_COUNTER	@0xB7C2
UINT		GS_ERR		@0xB7CA
UINT		GS_START_ADDR	@0xB7E0
INT		GS_MAX		@0xB7E1
INT		GS_WORDS	@0xB7E2
UINT		GS_TYPE		@0xB7E3
UINT		GS_MAN		@0xB7E4
UINT		GS_TIME		@0xB7E5
FIXED		GS_SPD		@0xB7CC
INT		GS_I_MIN	@0xB7D0
INT		GS_I_MAX	@0xB7D1
UINT		GS_01		@0xB7E6
UINT		GS_02		@0xB7E7
UINT		GS_03		@0xB7E8
UINT		GS_04		@0xB7E9
UINT		GS_05		@0xB7EA
UINT		GS_06		@0xB7EB
UINT		GS_07		@0xB7EC
UINT		GS_08		@0xB7ED
UINT		GS_09		@0xB7EE
UINT		GS_10		@0xB7EF
UINT		GS_11		@0xB7F0
UINT		GS_12		@0xB7F1
UINT		GS_13		@0xB7F2
UINT		GS_14		@0xB7F3
UINT		GS_15		@0xB7F4
UINT		GS_16		@0xB7F5
UINT		GS_17		@0xB7F6
UINT		GS_18		@0xB7F7
UINT		GS_19		@0xB7F8
UINT		GS_20		@0xB7F9
UINT		GS_21		@0xB7FA
UINT		GS_22		@0xB7FB
UINT		GS_23		@0xB7FC
UINT		GS_24		@0xB7FD
UINT		GS_25		@0xB7FE
UINT		GS_26		@0xB7FF
ULONG		GS_TRIG_ADDR	@0xB7D6
LONG		GS_TRIG_VAL	@0xB7D8
FIXED		GS_TRIG_VAL_F	@0xB7D8
UINT		GS_K_POSERR	@0xB7DC
UINT		BQ_MASK		@0xAF10
INT			NEWINTSAT	@0xAF11
UINT		SINOFF		@0xAF12
UINT		COSOFF		@0xAF13
UINT		SINGAIN		@0xAF14
UINT		COSGAIN		@0xAF15
INT			SIN_CORRECTED	@0xAF34
INT			COS_CORRECTED	@0xAF35
INT			SINEPS		@0xAF16
INT			COSEPS		@0xAF17
FIXED		Spd_BDAC_Max	@0xAF2C
FIXED		Spd_BDAC_Min	@0xAF2A
INT			Pos_Hall_Offset	@0xAF2E
INT			x6007				@0x09F0
UINT		x6040				@0x09b1
UINT		x6041				@0x090E
UINT		x6060				@0x09B4
UINT		x6061				@0x09B5
LONG		x6062				@0xB894
LONG		x6064				@0xB94E
ULONG		x6065				@0xB896
UINT		x6066				@0x0382		[s]
ULONG		x6067				@0xB87C
UINT		x6068				@0x0383		[s]
INT			x6077				@0xBB0A
LONG		x607A				@0x09DA
LONG		x607C				@0x03A0
UINT		x607E				@0xAF0A
FIXED		x6081				@0xB8A2
FIXED		x6083				@0xB956
FIXED		x6085				@0xB892
UINT		x6098				@0x039F
FIXED		x6099_01			@0x03A4
FIXED		x6099_02			@0x03A2
FIXED		x609A				@0x03A6
UINT		x60B8				@0xB8CD
UINT		x60B9				@0xB83D
LONG		x60BA				@0xB832
LONG		x60BB				@0xB834
LONG		x60BC				@0xB836
LONG		x60BD				@0xB838
UINT		x60C2_01			@0x097E
INT			x60C2_02			@0x097F
ULONG		x60FD				@0xB95C
ULONG		x60FE_01			@0xA718
ULONG		x60FE_02			@0xA71A
FIXED		x60FF				@0x08AA
UINT		x2000				@0x08FC
UINT		x2002				@0x03AD
UINT		x201D				@0x039D
INT			x207B				@0x08AC
UINT		x207C				@0x08AD		[s]
UINT 		HWID				@0xB8A1
UINT 		SN					@0xAF0E
FIXED		GS1_TRIG_F			@0xB000
LONG		GS1_TRIG			@0xB000
INT			KPP_GS1				@0xB002
INT			SFTKPP_GS1			@0xB003
INT			KIP_GS1				@0xB004
INT			SFTKIP_GS1			@0xB005
INT			KDP_GS1				@0xB006
INT			SFTKDP_GS1			@0xB007
INT			IMAXP_GS1			@0xB008
INT			KPS_GS1				@0xB009
INT			SFTKPS_GS1			@0xB00A
INT			KIS_GS1				@0xB00B
INT			SFTKIS_GS1			@0xB00C
INT			IMAXS_GS1			@0xB00D
FIXED		GS2_TRIG_F			@0xB00E
LONG		GS2_TRIG			@0xB00E
INT			KPP_GS2				@0xB010
INT			SFTKPP_GS2			@0xB011
INT			KIP_GS2				@0xB012
INT			SFTKIP_GS2			@0xB013
INT			KDP_GS2				@0xB014
INT			SFTKDP_GS2			@0xB015
INT			IMAXP_GS2			@0xB016
INT			KPS_GS2				@0xB017
INT			SFTKPS_GS2			@0xB018
INT			KIS_GS2				@0xB019
INT			SFTKIS_GS2			@0xB01A
INT			IMAXS_GS2			@0xB01B
FIXED		GS3_TRIG_F			@0xB01C
LONG		GS3_TRIG			@0xB01C
INT			KPP_GS3				@0xB01E
INT			SFTKPP_GS3			@0xB01F
INT			KIP_GS3				@0xB020
INT			SFTKIP_GS3			@0xB021
INT			KDP_GS3				@0xB022
INT			SFTKDP_GS3			@0xB023
INT			IMAXP_GS3			@0xB024
INT			KPS_GS3				@0xB025
INT			SFTKPS_GS3			@0xB026
INT			KIS_GS3				@0xB027
INT			SFTKIS_GS3			@0xB028
INT			IMAXS_GS3			@0xB029
UINT		DELAYLOGGER			@0xAF8B
UINT		DIG_INTCFG			@0xAF72
UINT		SSL					@0xAF4D
INT			INSLS				@0xAF4E		[A]
INT			QSFT				@0xAF4F
INT			FLUX				@0xAF50
INT			FLUXSFT				@0xAF51
INT			LGLOBAL				@0xAF52
INT			LGLOBALSFT			@0xAF53
INT			RSTATOR				@0xAF54
INT			RSTATORSFT			@0xAF55
INT			LQ					@0xAF56
INT			LQSFT				@0xAF57
INT			EMFCOEF				@0xAF58
INT			IDMAXCRT			@0xAF59
INT			KPQ					@0xAF5A
INT			KIQ					@0xAF5B
INT			SATQ				@0xAF5C
INT			KPQHS				@0xAF5D
INT			KIQHS				@0xAF5E
INT			KPQLS				@0xAF5F
INT			KIQLS				@0xAF60
INT			CSPEED				@0xAF61
INT			SPDLIM				@0xAF62
INT			SPDHIST				@0xAF63
INT			MINSPD				@0xAF64
INT			KIQCT				@0xAF65
INT			KIDCT				@0xAF66
INT			VDCCT				@0xAF67
INT			QCT					@0xAF68
INT			EMFCT				@0xAF69
INT			OMGSCT				@0xAF6A
INT			PHASEADVANCE		@0xAF6B
LONG 		SSLOWSPD			@0xAF6C
INT			KPH					@0xAF6E
INT			SATVALCMP			@0x097C
INT			OMGS				@0xBA8B
INT			QEST				@0xBA8C
INT			EMFEST				@0xBA8D
INT			EMFINST				@0xBA8E
INT			EMFCOR				@0xBA8F
INT 		IQF					@0xBA90
INT 		IDF					@0xBA91
INT			VDCF				@0xBA92
INT			QCOR				@0xBA93
INT			QINSTF				@0xBA94
INT			QESTF				@0xBA95
INT			EMFINSTF			@0xBA96
INT			EMFESTF				@0xBA97
INT			OMGSF				@0xBA98
INT			OMGSCOR				@0xBA99
INT			OMGSYNC				@0xBA9A
INT			SSLPWMDIS			@0xBA9B
INT			UDREF1				@0xBA9C
INT			UQREF1				@0xBA9D
INT			UDREFTMP			@0xBA9E
INT			UQREFTMP			@0xBA9F
LONG		QI32BITS			@0xBAA0
LONG		SATINTLONG			@0xBAA2
INT			QI16BITS			@0xBAA4
INT			QP16BITS			@0xBAA5
INT			QERR				@0xBAA6
INT			SIGNOMGS			@0xBAA7
INT			QINST				@0xBAA8
INT			KPTH				@0xAF3F
INT			KITH				@0xAF40	
INT			SFTKPTH				@0xAF42
INT			SFTKITH				@0xAF41
INT			KOMEGATH			@0xAF43
INT			THETAOFF			@0xAF44
INT			SATTHETA			@0xAF45
INT			MAXSATTHETA			@0xAF46
INT			THETAC				@0xAF47
INT			THETAFDBK			@0xAF48
INT			ENTHETASAT			@0xAF49
INT			ERRPOS				@0xAF4A	
INT			IDCMD				@0xAF4C
LONG		THETACL				@0xBA58
LONG		THETACP				@0xBA5A
LONG		THETACI				@0xBA5C
LONG		APOSFASTER			@0xBA5E
LONG		TPOSFASTER			@0xBA62
INT			ENINTQ				@0xBA64
INT			ENINTD				@0xBA65
LONG		UBREFL				@0xBA66
LONG		UAREFL				@0xBA68
LONG		UQREFL				@0xBA6A
LONG		UDREFL				@0xBA6C
LONG		LKPI				@0xBA7E
LONG		LKII				@0xBA80
LONG		QICRTQP				@0xBA82
LONG		QICRTQI				@0xBA84
LONG		QICRTDP				@0xBA86
LONG		QICRTDI				@0xBA88
INT			NEW_FREEZE			@0xAF79
INT			UQREF_FREEZE		@0xAF7A
INT			UQREF_FREEZE_LIM	@0xAF7B
UINT		POSOKLIMMAX_FC		@0xAF83
INT			UDREF_FREEZE		@0xAF8A
INT 		SFTDFFW				@0xAF7E
INT 		KFFD 				@0xAF7F
UINT		AUTORUNACTIVE		@0xAF73
UINT	BISS_CRC_5BIT_FDBK1_FDBK2	@0xAF6F
FIXED	HIGH_SPD_LIMIT		@0xAF3A	
FIXED	LOW_SPD_LIMIT		@0xAF3C	
UINT	HIGH_SPD_FILTER		@0xAF39	
UINT	LOW_SPD_FILTER		@0xAF3E	
ULONG Drive_Max_Current	@0xAF70
LONG	ErrProt_SOL_PID	@0xAF80
UINT	TonErr_SOL_PID	@0xAF82
UINT	SPDOKLIM	@0xAF9A
UINT	TONSPDOK	@0xAF9B
LONG	x6075		@0xBAB4
`;

export const FirmwareAddresses_FA00G = `
UINT		AAR						@0x030C		
UINT		AAR_table				@0x0913		
LONG		ABSPOS2					@0x0940		[rot]
LONG		ABSPOS1					@0xA3F2		[rot]
INT			ACCPL					@0x02FF
UINT		ACC_LIMIT				@0x02C7
UINT		ACR						@0x0912		
UINT		AD2						@0x023e		[V]
UINT		AD2FIL_CFG				@0x09DD
UINT		AD2FIL_VAL				@0x09DC		[V]	
UINT		AD2OFF					@0x0246	
UINT		AD3						@0xA222		
UINT		AD3OFF					@0x0247		
UINT		AD4						@0x0240		[V ]
UINT		AD4OFF					@0x0248		
UINT		AD5						@0x0241		[V]
INT			AD5OFF					@0x0249		
UINT		AD6						@0xA221		
UINT		AD6OFF					@0x024a		
UINT		AD7						@0x0243		[Â°C]
UINT		AD7OFF					@0x024b		
UINT		AD8						@0x080B		
UINT		AD9						@0x09ED	
UINT		AD10					@0x0242
UINT		AD11					@0x023F	
UINT		AEI_CLKDIV				@0x0855
UINT		AEI_CMPTIME				@0x02FA
UINT		AEI_PER					@0x0854
LONG		ALPHA					@0x0296		
INT			ANALOGUEREFERENCE		@0x08AF
INT			ANALOGUEREFERENCE_RAW	@0x0997
INT			ANGLE_INC				@0x089C
LONG		APOS					@0x0228		[rot]
LONG		APOS_LD					@0x0228		[rot]
LONG		APOS_MT					@0x0988		[rot]
LONG		APOS2					@0x081C		
FIXED		ASPD					@0x022c		[rpm]
FIXED		ASPD_LD					@0x098A		[rpm]
FIXED		ASPD_MT					@0x022c		[rpm]
INT			ASPD_BQ_INI				@0x09DE
UINT		ASR						@0x0201
UINT		ASR2					@0x02a7
LONG		ATIME					@0x02c0		[s]
UINT		AXISONACTIVE			@0x0379
LONG		BETA					@0xA130
INT			BOOST					@0x027d		
UINT		BRAKECFG				@0x0286
UINT		BRAKEDC					@0x028b		
UINT		BRAKELIM				@0x028a		
UINT		BRAKEOFF				@0x028c		
UINT		BRAKEAPPLYDELAY			@0x09F9
UINT		BRAKERELEASEDELAY		@0x09FA 
UINT		ENCPULSES_LIMIT			@0xA019
UINT		REV_SPD_AMPL			@0xA024
UINT		BQ_MASK					@0xA010
LONG		BQ1A1_F					@0xA0A6
LONG		BQ1A2_F					@0xA0A8
LONG		BQ1B0_F					@0xA0AA
LONG		BQ1B1_F					@0xA0AC
LONG		BQ1B2_F					@0xA0AE
LONG		BQ2A1_F					@0xA0B2
LONG		BQ2A2_F					@0xA0B4
LONG		BQ2B0_F					@0xA0B6
LONG		BQ2B1_F					@0xA0B8
LONG		BQ2B2_F					@0xA0BA
LONG		BQ3A1_F					@0xA0BE
LONG		BQ3A2_F					@0xA0C0
LONG		BQ3B0_F					@0xA0C2
LONG		BQ3B1_F					@0xA0C4
LONG		BQ3B2_F					@0xA0C6
LONG		BQ4A1_F					@0xA0CA
LONG		BQ4A2_F					@0xA0CC
LONG		BQ4B0_F					@0xA0CE
LONG		BQ4B1_F					@0xA0D0
LONG		BQ4B2_F					@0xA0D2
LONG		BQ5A1_F					@0xA0D6
LONG		BQ5A2_F					@0xA0D8
LONG		BQ5B0_F					@0xA0DA
LONG		BQ5B1_F					@0xA0DC
LONG		BQ5B2_F					@0xA0DE
LONG		BQ6A1_F					@0xA0E2
LONG		BQ6A2_F					@0xA0E4
LONG		BQ6B0_F					@0xA0E6
LONG		BQ6B1_F					@0xA0E8
LONG		BQ6B2_F					@0xA0EA
LONG		BQ7A1_F					@0xA0EE
LONG		BQ7A2_F					@0xA0F0
LONG		BQ7B0_F					@0xA0F2
LONG		BQ7B1_F					@0xA0F4
LONG		BQ7B2_F					@0xA0F6
LONG		BQ8A1_F					@0xA0FA
LONG		BQ8A2_F					@0xA0FC
LONG		BQ8B0_F					@0xA0FE
LONG		BQ8B1_F					@0xA100
LONG		BQ8B2_F					@0xA102
LONG		BQ9A1_F					@0xA106
LONG		BQ9A2_F					@0xA108
LONG		BQ9B0_F					@0xA10A
LONG		BQ9B1_F					@0xA10C
LONG		BQ9B2_F					@0xA10E
LONG		BQ10A1_F				@0xA112
LONG		BQ10A2_F				@0xA114
LONG		BQ10B0_F				@0xA116
LONG		BQ10B1_F				@0xA118
LONG		BQ10B2_F				@0xA11A
INT			SPD_EST_BQ_INI			@0xA018
LONG		BQSEA1_F				@0xA01A
LONG		BQSEA2_F				@0xA01C
LONG		BQSEB0_F				@0xA01E
LONG		BQSEB1_F				@0xA020
LONG		BQSEB2_F				@0xA022
FIXED		CACC					@0x02a2		[rad/s^2]
INT			CACCDECR				@0xA225
INT			CADIN					@0x025c		
LONG		CAMOFF					@0x08D8		
INT			CAMSTART				@0x03AE		
FIXED		CAMX					@0x0904		
FIXED		CAMY					@0x0906		
LONG		CAPPOS					@0x02bc		[rot]
LONG		CAPPOS2					@0x081E		
UINT		CBR						@0x030D		
UINT		CBR_table				@0x0928		
UINT		CCR						@0x030A		
FIXED		CDEC					@0x0858		[rad/s^2]
FIXED		CDREF					@0x02a4		
UINT		CER						@0x0301		
UINT		CHANGE_CONFIG			@0x0356
INT			CI0						@0x028d		
INT			CIQ						@0x028e		
UINT		CLPER					@0x0250	
UINT		CONTROL_WORD			@0x09b1
UINT		CONTROL_WORD_1			@0x09b2	
UINT		CopenTableAdr			@0xA2C4
INT			CORDDTH					@0x028e		
INT			CORDTH					@0x028d		
INT			COSRES					@0x0227		
INT			COSTH					@0x0226		
UINT		COUNTINGDIR				@0x0805
UINT		COUNTINGDIR_MT			@0x0805
UINT		COUNTINGDIR_LD			@0x0916
LONG		CPOS					@0x029e		[rot]	%4
INT			CRTERR					@0x0231		[A]
FIXED		CSPD					@0x02a0		[rpm]
INT			CSPDDECR				@0xA226
UINT		CSR						@0x030B		
UINT		CTIME					@0x02a6		[s]
INT			CVDC					@0x025b		
INT			CWEAK					@0x0257		
UINT		DBT						@0x0253		
INT			DBTLIM					@0x027e		
UINT		DEBUG					@0x08D0
INT			DEBUG_1					@0xA229
INT			DEBUG_2					@0xA22A
INT			DEBUG_3					@0xA22B
INT			DEBUG_4					@0xA22C
INT			DEBUG_5					@0xA22D
INT			DEBUG_6					@0xA22E
INT			DEBUG_7					@0xA22F
INT			DEBUG_8					@0xA230
INT			DEBUG_9					@0xA231
UINT 		DEFAULT_HOME1					@0x3f1234
UINT 		DEFAULT_HOME2					@0x3f1234
UINT 		DEFAULT_HOME3					@0x3f1234
UINT 		DEFAULT_HOME4					@0x3f1234
UINT 		DEFAULT_HOME5					@0x3f1234
UINT 		DEFAULT_HOME6					@0x3f1234
UINT 		DEFAULT_HOME7					@0x3f1234
UINT 		DEFAULT_HOME8					@0x3f1234
UINT 		DEFAULT_HOME9					@0x3f1234
UINT 		DEFAULT_HOME10					@0x3f1234
UINT 		DEFAULT_HOME11					@0x3f1234
UINT 		DEFAULT_HOME12					@0x3f1234
UINT 		DEFAULT_HOME13					@0x3f1234
UINT 		DEFAULT_HOME14					@0x3f1234
UINT 		DEFAULT_HOME17					@0x3f1234
UINT 		DEFAULT_HOME18					@0x3f1234
UINT 		DEFAULT_HOME19					@0x3f1234
UINT 		DEFAULT_HOME20					@0x3f1234
UINT 		DEFAULT_HOME21					@0x3f1234
UINT 		DEFAULT_HOME22					@0x3f1234
UINT 		DEFAULT_HOME23					@0x3f1234
UINT 		DEFAULT_HOME24					@0x3f1234
UINT 		DEFAULT_HOME25					@0x3f1234
UINT 		DEFAULT_HOME26					@0x3f1234
UINT 		DEFAULT_HOME27					@0x3f1234
UINT 		DEFAULT_HOME28					@0x3f1234
UINT 		DEFAULT_HOME29					@0x3f1234
UINT 		DEFAULT_HOME30					@0x3f1234
UINT 		DEFAULT_HOME33					@0x3f1234
UINT 		DEFAULT_HOME34					@0x3f1234
UINT 		DEFAULT_HOME35					@0x3f1234
UINT 		DEFAULT_HOME37					@0x3f1234
UINT 		DEFAULT_HOME38					@0x3f1234
UINT 		DEFAULT_HOME39					@0x3f1234
UINT 		DEFAULT_HOME40					@0x3f1234
INT			DEFAULT_INT0					@0x3f0705
INT			DEFAULT_INT1					@0x3f0735
INT			DEFAULT_INT10					@0x3f07d3
INT			DEFAULT_INT11					@0x3f07d4
INT			DEFAULT_INT12					@0x3f081e
INT			DEFAULT_INT13					@0x3f3c07
INT			DEFAULT_INT2					@0x3f0742
INT			DEFAULT_INT3					@0x3f078f
INT			DEFAULT_INT4					@0x3f079c
INT			DEFAULT_INT5					@0x3f07ce
INT			DEFAULT_INT6					@0x3f07cf
INT			DEFAULT_INT7					@0x3f07d0
INT			DEFAULT_INT8					@0x3f07d1
INT			DEFAULT_INT9					@0x3f07d2
INT			delta_el_pos			@0x0877
INT			DELTA_THETA				@0x09da
UINT		DER						@0x03AD
UINT		DER2					@0x0305
UINT		DIGIN_ACTIVE_LEVEL		@0x090C
UINT		DIGIN_INVERSION_MASK	@0x090A
UINT		DIGIN_STATUS			@0x0908
UINT		DIGOUT_INVERSION_MASK	@0x090B
UINT		DIGOUT_STATUS			@0x09B8
UINT		DISABLE_SOL_COR			@0xA13B
UINT 		DoTMLInitializations	@0x09C0
ULONG		DTMIN					@0x08B0
ULONG		DTMAX					@0x08B2
UINT		E_LEVEL_AD5				@0x0876
INT			Electric_Angle			@0x0891
UINT 		ExecuteAutotuning		@0x0998
UINT 		ExecuteMain 			@0x09BF
UINT		ECAT_SM					@0x08C2
INT			EFLEVEL					@0x02c7		
UINT		EIR						@0x0305		
INT			ELPOS					@0x0221		
INT			ELPOSINCMPY				@0x0803
LONG		ELPOSL					@0x080e		
UINT		ELRES					@0x0279
UINT		ELRES_FRACT				@0x0856		
LONG		ELRESL					@0x0874		
INT			ENABLE_OFF				@0x0926
LONG		ENC2THL					@0x024C
UINT		ENCRES					@0x0801
UINT		ENCRES60DEG				@0x08C9
UINT		ENCRES60DEGST			@0x08CD
ULONG		ENCRESLONG				@0x084C			
LONG		EREF					@0x02a8		
LONG		EREFP					@0x02a8		[rot]
FIXED		EREFS					@0x02a8		[rpm]
INT			EREFT					@0x02a9		[A]
INT			EREFV					@0x02a9		[V]
UINT		ERRMAX					@0x02c5		[rot]
ULONG		ERRMAXL					@0x09E0		[rot]
INT			FAULT_REACTION_ACTIVE	@0x085A	
INT			FFL						@0x0223		
INT			FILTER1					@0x029d		
INT			FILTERQ					@0x0982
FIXED		FILT_A					@0x089E
FIXED		FILT_B					@0x08A0
LONG		FINAL_POS				@0x0808
INT			FLAGUV					@0x02fb
UINT 		FunctionTable_pointer 	@0x09C9
FIXED		GEAR					@0x02ac		
UINT		GEARMASTER				@0x0255		
INT			GEARSLAVE				@0x0256		
INT			GUARD					@0x027e		
UINT		GUARDTIME				@0x09F2	
INT			HALL					@0x0227		
INT			HALL30					@0x0877		
INT			HALLCASE				@0x0259		
INT			HALLDIR					@0x028f		
INT			HALLB					@0x0801
INT			HALLC					@0xA00B
INT			HALLAGAIN				@0x0287
INT			HALLBGAIN				@0x028F
INT			HALLCGAIN				@0x0279
UINT		HALLAOFF				@0x024A
UINT		HALLBOFF				@0x0247
UINT		HALLCOFF				@0x0258
INT			HALLFILT				@0xA25D
FLOAT		HISTDERP				@0xA2EA
FLOAT		HISTINTP				@0xA2E8
FLOAT		HISTINTS				@0xA2E6
FLOAT		HISTINTID				@0xA2E2
FLOAT		HISTINTIQ				@0xA2E4
INT			HOMECRT					@0x08AC		[A]
LONG		HOMEPOS					@0x0992		[rot]
FIXED		HOMESPD					@0x0994		[rpm]
UINT		HOMETIME				@0x08AD		[s]
UINT 		HOMING_NR				@0x09B7
UINT		HOME_NR_6098			@0x039F
LONG		HOME_OFFSET_607C		@0x0992
FIXED		HOME_HSPD_6099_01		@0x03A4
FIXED		HOME_LSPD_6099_02		@0x03A2
FIXED		HOME_ACC_609A			@0x03A6
INT			HOME_CRT_207B			@0x08AC
UINT		HOME_TIME_207C			@0x08AD		[s]
UINT 		HomingTable_pointer 	@0x09C1
INT			I2_FILTERED				@0x087C	
ULONG		I2TINTLIM_D				@0x0980		
ULONG		I2TINTLIM_M				@0x0814		
ULONG		I2TINT_D				@0x097A
ULONG		I2TINT_M				@0x0816	
INT			IA						@0x0239		[A]
INT			IB						@0x023a		[A]
INT			IBETA					@0x087b		[A]
INT			IC						@0x023b		[A]
UINT		ICR						@0x0304		
INT			ID						@0x0234		[A]
INT			IdFixed					@0x02A7
INT			IDMAX					@0x027b		[A]
INT			IDMIN					@0x027c		[A]
INT			IDREF					@0x0233		[A]
INT			IDRSTEP					@0x027b		[A]
INT			II2TPROT_D				@0x0986		[A]
INT			II2TPROT_M				@0x0818		[A]	
INT			IMAXP					@0x0266		
INT			IMAXPROT				@0x0295		[A]
INT			IMAXS					@0x026c		
INT			INITANGLE				@0x08A8
UINT		INSTATUS				@0x0908
INT			INTTABLE				@0x0307		
INT			ISQ						@0x087C	
INT			IQ						@0x0230		[A]
INT			IQREF					@0x022f		[A]
INT			IQREFFILTERED			@0x0987		[A]
INT			IQREF_BQ_INI			@0x080D
INT			IQRSTEP					@0x027c		[A]
UINT		ISR						@0x0306		
FIXED		JERK					@0x08D2		[rad/s^3]
INT			KDFP					@0x0264		
INT			KDFP2					@0xA036	
INT			KDP						@0x0262		
INT			KFFA					@0x026e		
INT			KFFL					@0x026f		
INT			KFFS					@0x026d		
INT			KII						@0x0273	
INT			KINC_THETA				@0x09db	
INT			KIP						@0x0260		
INT			KIS						@0x0269		
INT			KISPDEST				@0x0953
INT			KITHT					@0x0893		
INT			KPI						@0x0271		
INT			KPP						@0x025e		
INT			KPS						@0x0267		
INT			KPSPDEST				@0x095C
INT			KPTHT					@0x0892
INT			KSLIP					@0x0279
UINT		KSPDERR					@0x098F
INT			KVOLT					@0x0279
UINT		LEVEL_AD5				@0x086f
UINT		LIFETIME				@0x09f3
UINT		LOG_PTR					@0x0365
INT			LSACTIVE				@0x0832
UINT		LSS_ACTIVE				@0x0823
INT			MASTERID				@0x0927
LONG		MASTERRES				@0x081A
UINT		MAXPWMWOB				@0x028f
INT			MAX_CURRENT				@0x089B		[A]
INT			MAXCCPS					@0x0880
INT			MAXCORRERR				@0x031C
LONG		MAXPOSRANGE				@0xA002
UINT		MCR						@0x0309
UINT		MCR_1					@0x02B0
LONG		MECRESL					@0x024E
UINT		MER						@0x08FC
UINT		MER_MASK				@0x0965
UINT		ModesOpDisplay			@0x09b5
INT			MOTORON					@0x0312	
INT			MOVESTATE				@0x08A3
LONG		MINPOSRANGE				@0xA000		
LONG		MPOS0					@0x02E4		
LONG		MREF					@0x02aa		
INT			MSPD					@0x0820		
UINT		MSR						@0x0308		
INT			MSTEP					@0x0807
UINT		MTSTYPE					@0x028c	
INT			NEW_SII_ELANGLE			@0xA029	
UINT		NEWPERWOB				@0x0287		
LONG		NI2T					@0x0255		
UINT		OSR						@0x0302		
UINT		PCR						@0x0303		
UINT		PFOVF					@0x029c		
INT			PHASEADV				@0x0257	
INT			POS_HALL						@0xB929	
LONG		POS0					@0x02b8		
INT			POSERR					@0x022a		[rot]
LONG 		POSERRL					@0x09BA		[rot]
INT			POSINC					@0x0222		
ULONG		POSINIT					@0x02F2		[rot]
UINT		POSOKLIM				@0x036A		[rot]
UINT		POSOKLIM_FC				@0x09FC		[rot]
LONG		POSTRIGG1				@0x091A		[rot]
LONG		POSTRIGG2				@0x091C		[rot]
LONG		POSTRIGG3				@0x091E		[rot]
LONG		POSTRIGG4				@0x0920		[rot]
UINT		POSTRIG2OUT						@0x07fe
UINT		POSRANGEDEF				@0xA004
UINT		POSOPTCODE				@0xA005
UINT		POLARITY				@0xA00A
LONG		PROBE1_POSITIVE			@0xA126		[rot]
LONG		PROBE1_NEGATIVE			@0xA128		[rot]
LONG		PROBE2_POSITIVE			@0xA12A		[rot]
LONG		PROBE2_NEGATIVE			@0xA12C		[rot]
LONG		PROD					@0x030e		
LONG		PRODH					@0x030f		
INT			PSFILT					@0x0288		
INT			PVTBUFBEGIN				@0x0864		
INT			PVTBUFLEN				@0x0865		
UINT		PVTMODE					@0x0869
LONG		PVTPOS0					@0x086A		
INT			PVTSENDOFF				@0x092B
UINT		PVTSTS					@0x0863		
UINT		PWMPER					@0x0252	
UINT		QUAL					@0x0806
ULONG		QUAL_ACT				@0x07F0
ULONG		QUAL_AQ1				@0x07F2
ULONG		QUAL_AQ2				@0x07F4
ULONG		QUAL_BCT				@0x07F6
ULONG		QUAL_BQ1				@0x07F8
ULONG		QUAL_BQ2				@0x0918
INT			QUICKSTOPS				@0x082f		
FIXED		REF0					@0x02a8		
FIXED		REF0_fixed				@0x02a8		
LONG		REF0_long				@0x02a8		
INT			REFTST					@0x0281		
INT			REFTST_A				@0x0281		[A]
INT			REFTST_V				@0x0281		[V]
INT			REF_INC					@0x0888
UINT		ADC_10REF_OFST			@0x0999
UINT		ADC_10FBK_OFST			@0x099A
INT			RINCTST					@0x0280		
INT			RINCTST_A				@0x0280		[A/s]
INT			RINCTST_V				@0x0280		[V/s]
LONG		RPOS					@0x02ba		
LONG		RTIME					@0x02c2		[s]
INT			SAMPWD					@0x0257		
INT			SATID					@0x0275		
INT			SATIQ					@0x0276		
INT			SATP					@0x0265		
INT			SATPWM					@0x0254		
INT			SATS					@0x026b		
INT			SBYCRT					@0x08A9		[A]
UINT		SCIBR_table				@0x098D		
INT			SCL2H					@0x0281		
UINT		SCL2L					@0x0282		
INT			SCL3					@0x0283		
INT			SCL4					@0x0286		
UINT		SCR						@0x0300		
UINT 		Select_CANmode			@0x09B9
INT			SENSE					@0x0288		
INT			SERRMAX					@0x0879		[rpm]
UINT		SETAD01					@0x024c		
UINT		SETAD23					@0x024d		
UINT		SETAD45					@0x024e		
UINT		SETAD67					@0x024f		
INT			SFI2T_D					@0x098C		
INT			SFI2T_M					@0x0819		
INT			SFTADIN					@0x025d
INT			SFTAFFW					@0x0291
INT			SFTCRT					@0x0290
UINT		SFTCWEAK				@0x0258
INT			SFTKDP					@0x0263
INT			SFTKFF					@0x0270
INT			SFTKII					@0x0274
INT			SFTKIP					@0x0261
INT			SFTKIS					@0x026a
INT			SFTKITHT				@0x0895
INT			SFTKPI					@0x0272
INT			SFTKPP					@0x025f
INT			SFTKPS					@0x0268
INT			SFTKPTHT				@0x0894
INT			SFTKSLIP				@0x027a
INT			SFTKVOLT				@0x027a
INT			SFTSCL1					@0x0280
INT			SFTSFFW					@0x0292		
UINT		SFTSP					@0x0248		
INT			SGCODTH					@0x0289		
INT			SIN2REC					@0x0287		
INT			SINCOS_FRACT			@0x08CC
INT			SINCOS_FRACT_LD			@0x0917
INT			SINRES					@0x0213		
INT			SINTH					@0x0225		
INT			SLAVEID					@0x0311		
UINT		SLPER					@0x0251		
INT			SLsyncOFFSET			@0x0947		
INT			SPDERR					@0x022e		[rpm]
FIXED		SPDERRL					@0x08C6		[rpm]
INT			SPDREF					@0x022b		[rpm]
FIXED		SPDREFL					@0x02F2		[rpm]
INT    		SPDREF_BQ_INI   		@0x080C
INT			SPICLKMODE				@0x0847
INT			SPI_IGNORE_COUNTER				@0xB9B5
INT			SPI_IGNORE_VAL			@0x09E6
ULONG		SR32					@0x090E
UINT 		SPECIAL_IOS_STATUS		@0xA03F
INT			SRCOR					@0x027f		
INT			SRECTCOMP				@0x028f		
UINT		SRH						@0x090F		
UINT		SRH_MASK				@0x0963		
UINT		SRL						@0x090E		
UINT		SRL_MASK				@0xA3CD		
UINT		SSI_ST_bits_ign			@0xA006
UINT		SSI_MT_bits_ign			@0xA007
LONG		SSIABSPOS				@0x0940		[rot]
INT			SSIBR					@0x0846
INT			SSIFDBKTYPE				@0x0842
INT			SSINRPARAMS				@0x0841
INT			SSIREV					@0x0843
INT			SSISENSE				@0x02F9
UINT		SSITIMEOUT				@0x09FF		[s]
INT			SSITURNS				@0x0844
INT			SSITYPE					@0x0846
INT			SSPL					@0x02fe		
LONG		START_POS				@0x08A4
INT			SMALLTIMEOUT 			@0xA028
INT			STATE					@0x0288
UINT		STALLLIM				@0x02EE
UINT		STEPRES					@0x0802	
ULONG		STEPRESLONG				@0x084A	
UINT		STOERRTIME				@0x09F8
UINT		STOLEVEL				@0xA25F
UINT		STO_LEVEL_10C			@0x0849
UINT		STS_DS402				@0x09E4
LONG		SWNEGLS					@0x088A		[rot]
LONG		SWPOSLS					@0x088C		[rot]
UINT		SYNCONFASTLOOP			@0x0948
UINT		T1MAXPROT				@0x0298		[Â°C]
UINT		T1ONA					@0x0284		[s]
UINT		T1ONB					@0x0285		[s]
UINT		T2MAXPROT				@0x0299		[Â°C]
FIXED		TACC					@0x02b6		[rad/s^2]
UINT		TERRMAX					@0x02c6		[s]
INT			THETA					@0x0224		[deg]
INT			THETAINC				@0x020e		[deg/s]
INT			THETA_TST				@0x0899		[deg]
INT			THETA_FILT				@0x0891		[deg]
UINT		THT_CORRECTION			@0x0833
INT			THTST					@0x0282		[deg]
UINT		TIMAXPROT				@0x02c4		[s]
LONG		TIME0					@0x02be		[s]
UINT		TIMELIM					@0x0286		[s]
UINT		TIME_LIMIT				@0x0896		[s]
UINT		TIMESBC					@0x028b		[s]		
INT			TINCTST					@0x0283		[deg/s]
LONG		TJERK					@0x08D2		[s]
UINT		TMLINTPER				@0x0983		[s]
UINT		TONPOSOK				@0x036B		[s]
UINT		TONPOSOK_FC				@0x09FD		[s]
LONG		TPOS					@0x02b2		[rot]
LONG		TPOSFAST				@0x095a		[rot]
FIXED		TRANSMISSION			@0x037C
LONG		TREF					@0x02ae		
FIXED		TREF_fixed				@0x02ae		
UINT		TRIGGERED_OUTPUTS		@0x07fe		
UINT		TSERRMAX				@0x087A		[s]
FIXED		TSPD					@0x02b4		[rpm]
INT			UAREF					@0x0236		[V]
INT			UBREF					@0x0237		[V]
INT			UCREF					@0x0238		[V]
INT			UDREF					@0x0235		[V]
UINT		UMAXPROT				@0x029a		[V ]
UINT		UMINPROT				@0x029b		[V ]
INT			UPPS					@0x0881
INT			UPGRADE					@0x0857
ULONG		UserVar1				@0xA11E
ULONG		UserVar2				@0xA120
ULONG		UserVar3				@0xA122
ULONG		UserVar4				@0xA124			
INT			UQREF					@0x0232		[V]
INT			VAR_I1					@0x0366		
UINT		VAR_U1					@0x0366		
INT			VAR_I2					@0x0367
UINT		VAR_U2					@0x0367
INT			VAR_I3					@0x0979		
UINT		VAR_U3					@0x0979		
LONG		VAR_LF					@0x0368		
FIXED		VAR_LF_fixed			@0x0368		
LONG		VAR_LF_long				@0x0368
UINT		VARFIL_CFG				@0x099C
UINT		VARFIL_ADR				@0x099D
INT			VARFIL_VAL				@0x099B			
UINT		VDCN					@0x025a		
INT			WEAKINC					@0x0259		
UINT		ZAOFF					@0x0289
UINT		ZEROVALOKMARGIN			@0x08CA
LONG		ZEROSPDTLIM				@0x08C0
INT			KOMEGA					@0x0890
INT			KUPHASE					@0x0969
INT			UOFFSET					@0x02FC
INT			USTBYCRT				@0x02FF
INT			AT_REFSTARTADDR			@0x09F6
INT			AT_REFMAXPOINTS			@0x09F7
INT			AT_REFINDX				@0x09F4
INT			ATR						@0x09F5
FIXED		DTHETA0					@0xA080
FIXED		DTHETA_INC				@0xA082
LONG		AMPL0					@0xA084
LONG		AMPL_INC				@0xA086
LONG		SIN_N					@0xA088
INT			PHASE0					@0xA08A
INT			FIRST_SINE				@0xA08B
FIXED		SINE_ANGLE				@0xA08C
FIXED		SINE_ANGLE_INC			@0xA08E
LONG		SINEWAVE				@0xA090
LONG		SIN_CNTR				@0xA092
LONG		SINE_AMPL				@0xA094
INT			RSFTKIP					@0x0277
INT			RSFTKIS					@0x0278
UINT		GS_K_POSERR				@0xA05C
UINT		GS_FILTER				@0xA02F
INT			GS_INDEX				@0xA040
INT			GS_INDEX_1				@0xA041
UINT		GS_COUNTER				@0xA042
UINT		GS_ERR					@0xA04A
UINT		GS_START_ADDR			@0xA060
INT			GS_MAX					@0xA061
INT			GS_WORDS				@0xA062
UINT		GS_TYPE					@0xA063
UINT		GS_MAN					@0xA064
UINT		GS_TIME					@0xA065
FIXED		GS_SPD					@0xA04C
INT			GS_I_MIN				@0xA050
INT			GS_I_MAX				@0xA051
UINT		GS_01					@0xA066
UINT		GS_02					@0xA067
UINT		GS_03					@0xA068
UINT		GS_04					@0xA069
UINT		GS_05					@0xA06A
UINT		GS_06					@0xA06B
UINT		GS_07					@0xA06C
UINT		GS_08					@0xA06D
UINT		GS_09					@0xA06E
UINT		GS_10					@0xA06F
UINT		GS_11					@0xA070
UINT		GS_12					@0xA071
UINT		GS_13					@0xA072
UINT		GS_14					@0xA073
UINT		GS_15					@0xA074
UINT		GS_16					@0xA075
UINT		GS_17					@0xA076
UINT		GS_18					@0xA077
UINT		GS_19					@0xA078
UINT		GS_20					@0xA079
UINT		GS_21					@0xA07A
UINT		GS_22					@0xA07B
UINT		GS_23					@0xA07C
UINT		GS_24					@0xA07D
UINT		GS_25					@0xA07E
UINT		GS_26					@0xA07F
ULONG		GS_TRIG_ADDR			@0xA056
LONG		GS_TRIG_VAL				@0xA058
FIXED		GS_TRIG_VAL_F			@0xA058
FIXED		Spd_BDAC_Max			@0xA02C
FIXED		Spd_BDAC_Min			@0xA02A
INT			Pos_Hall_Offset			@0xA02E
UINT		SINOFF					@0xA012
UINT		COSOFF					@0xA013
UINT		SINGAIN					@0xA014
UINT		COSGAIN					@0xA015
INT			SIN_CORRECTED			@0xA034
INT			COS_CORRECTED			@0xA035
INT			SINEPS					@0xA016
INT			COSEPS					@0xA017
ULONG		IOREG_00				@0xA140
ULONG		IOREG_01				@0xA142
ULONG		IOREG_02				@0xA144
ULONG		IOREG_03				@0xA146
ULONG		IOREG_04				@0xA148
ULONG		IOREG_05				@0xA14A
ULONG		IOREG_06				@0xA14C
ULONG		IOREG_07				@0xA14E
ULONG		IOREG_08				@0xA150
ULONG		IOREG_09				@0xA152
ULONG		IOREG_10				@0xA154
ULONG		IOREG_11				@0xA156
ULONG		IOREG_12				@0xA158
ULONG		IOREG_13				@0xA15A
ULONG		IOREG_14				@0xA15C
ULONG		IOREG_15				@0xA15E
ULONG		IOREG_16				@0xA160
ULONG		IOREG_17				@0xA162
ULONG		IOREG_18				@0xA164
ULONG		IOREG_19				@0xA166
ULONG		IOREG_20				@0xA168
ULONG		IOREG_21				@0xA16A
ULONG		IOREG_22				@0xA16C
ULONG		IOREG_23				@0xA16E
ULONG		IOREG_24				@0xA170
ULONG		IOREG_25				@0xA172
ULONG		IOREG_26				@0xA174
ULONG		IOREG_27				@0xA176
ULONG		IOREG_28				@0xA178
ULONG		IOREG_29				@0xA17A
ULONG		IOREG_30				@0xA17C
ULONG		IOREG_31				@0xA17E
ULONG		IOREG_32				@0xA180
ULONG		IOREG_33				@0xA182
ULONG		IOREG_34				@0xA184
ULONG		IOREG_35				@0xA186
ULONG		IOREG_36				@0xA188
ULONG		IOREG_37				@0xA18A
ULONG		IOREG_38				@0xA18C
ULONG		IOREG_39				@0xA18E
ULONG		IOREG_40				@0xA190
ULONG		IOREG_41				@0xA192
ULONG		IOREG_42				@0xA194
ULONG		IOREG_43				@0xA196
ULONG		IOREG_44				@0xA198
ULONG		IOREG_45				@0xA19A
ULONG		IOREG_46				@0xA19C
ULONG		IOREG_47				@0xA19E
ULONG		IOREG_48				@0xA1A0
ULONG		IOREG_49				@0xA1A2
ULONG		IOREG_50				@0xA1A4
ULONG		IOREG_51				@0xA1A6
ULONG		IOREG_52				@0xA1A8
ULONG		IOREG_53				@0xA1AA
ULONG		IOREG_54				@0xA1AC
ULONG		IOREG_55				@0xA1AE
ULONG		IOREG_56				@0xA1B0
ULONG		IOREG_57				@0xA1B2
ULONG		IOREG_58				@0xA1B4
ULONG		IOREG_59				@0xA1B6
ULONG		IOREG_60				@0xA1B8
ULONG		IOREG_61				@0xA1BA
ULONG		IOREG_62				@0xA1BC
ULONG		IOREG_63				@0xA1BE
UINT		IOREG_IN_OFST			@0xA1C0
UINT		IOREG_OUT_OFST			@0xA1C1
ULONG		DEFAULT_IO_FCN			@0x0354
INT			x6007					@0x09F0
UINT		x603F					@0xA2FB
UINT		x6040					@0x09b1
UINT		x6041					@0x090E
INT			x605A					@0xA29F
INT			x605B					@0xA2A0
INT			x605C					@0xA2A1
INT			x605D					@0xA2A2
INT			x605E					@0x09F1
UINT		x6060					@0x09B4
UINT		x6061					@0x09B5
LONG		x6062					@0xA131
LONG		x6063					@0x0228
LONG		x6064					@0x09E2
ULONG		x6065					@0xA133
UINT		x6066					@0x0382		[s]
ULONG		x6067					@0xA2F2
UINT		x6068					@0x0383		[s]
FIXED		x6069					@0x098A
LONG		x606B					@0xA2F4
LONG		x606C					@0xA2F6
INT			x606D					@0xA2F8
UINT		x606E					@0xA2F9
UINT		x606F					@0xA2A3
INT			x6071					@0xA2A4
LONG		x607A					@0x09DA
LONG		x607B_01				@0xA2FC
LONG		x607B_02				@0xA2FE
LONG		x607C					@0x03A0
LONG		x607D_01				@0xA300
LONG		x607D_02				@0xA302
UINT		x607E					@0xA00A
FIXED		x6081					@0xA136
FIXED		x6083					@0xA304
FIXED		x6085					@0x09F2
INT			x6086					@0x09BC
ULONG		x608F_01				@0x0396
ULONG		x608F_02				@0x0398
ULONG		x6091_01				@0xA271
ULONG		x6091_02				@0xA273
ULONG		x6092_01				@0x039A
ULONG		x6092_02				@0xA26F
ULONG		x6093_01				@0x0386
ULONG		x6093_02				@0x0388
ULONG		x6094_01				@0xA27D
ULONG		x6094_02				@0xA27F
ULONG		x6096_01				@0x038A
ULONG		x6096_02				@0x038C
ULONG		x6097_01				@0x038E
ULONG		x6097_02				@0x0390
UINT		x6098					@0x039F
FIXED		x6099_01				@0x03A4
FIXED		x6099_02				@0x03A2
FIXED		x609A					@0x03A6
ULONG		x60A2_01				@0xA285
ULONG		x60A2_02				@0xA287
ULONG		x60A8					@0xA275
ULONG		x60A9					@0xA277
ULONG		x60AA					@0xA279
ULONG		x60AB					@0xA27B
UINT		x60B8					@0xA12E
UINT		x60B9					@0xA12F
LONG		x60BA					@0xA126
LONG		x60BB					@0xA128
LONG		x60BC					@0xA12A
LONG		x60BD					@0xA12C
INT			x60C0					@0x09E7
ULONG		x60C1_01				@0xA2A5
ULONG		x60C1_02				@0xA2A7
UINT		x60C2_01				@0x097E
INT			x60C2_02				@0x097F
UINT		x60F2					@0xA005
LONG		x60F4					@0xA306
LONG		x60F8					@0xA308
LONG		x60FC					@0xA008
ULONG		x60FD					@0xA138
ULONG		x60FE_01				@0xA13C
ULONG		x60FE_02				@0xA13E
FIXED		x60FF					@0x09EA
UINT		x2000					@0x08FC
UINT		x2001					@0x0965
UINT		x2002					@0x03AD
UINT		x2003					@0x0301
UINT		x2005					@0x0385
UINT		x2006					@0x09b0
UINT		x2009					@0x0305
ULONG		x2012					@0x081a
INT			x2013_01				@0x0256
UINT		x2013_02				@0x0255
LONG		x2017					@0x02aa
INT			x2018					@0x0820
UINT		x2019					@0x09bd
UINT		x201A					@0x03AE
ULONG		x201B					@0xA05D
LONG		x201C					@0x02a8
UINT		x201D					@0x039D
LONG		x201E					@0xA130
INT			x2022					@0x022f
UINT		x2023					@0x0384
INT			x2025					@0x027b
INT			x2026					@0x08A9
UINT		x2027					@0x028b
UINT		x2045					@0x09b8
UINT		x2046					@0x0241
UINT		x2047					@0x023e
UINT		x2050					@0x0295
UINT		x2051					@0xA05f
UINT		x2052					@0x0818
ULONG		x2053					@0x0814
UINT		x2054					@0x0819
UINT		x2055					@0x0240		[V]
UINT		x2058					@0x0243		[Â°C]
ULONG		x2060					@0x09c2
ULONG		x2064					@0x09a8
ULONG		x2065					@0x09aa
ULONG		x2066					@0x09ac
ULONG		x2067					@0x09ae
ULONG		x2069					@0x09a0
UINT		x206A					@0x099f
ULONG		x206B					@0x0904
ULONG		x206C					@0x0906
UINT		x206F					@0x0381
UINT		x2070					@0x0380
ULONG		x2071_01				@0x0392
ULONG		x2071_02				@0x0394
UINT		x2072					@0x0863
UINT		x2073					@0xA135
UINT		x2074					@0xA28D
LONG		x2075_01				@0x091A
LONG		x2075_02				@0x091C
LONG		x2075_03				@0x091E
LONG		x2075_04				@0x0920
UINT		x2076					@0x039E
LONG		x2079					@0xA30A
UINT		x207A					@0xA28E
INT			x207B					@0x08AC
UINT		x207C					@0x08AD
UINT		x207D					@0xA28F
UINT		x207F					@0xA30C
LONG		x2081					@0xA30E
LONG		x2083					@0x084C
LONG		x2084					@0x084A
UINT		x2085					@0xA290
INT			x2086					@0xA30D
FIXED		x2087					@0x022c		[rpm]
LONG		x2088					@0x0988		[rot]
INT			x2089					@0x0293
INT			x208B					@0x0848
INT			x208C					@0x084e
LONG		x208D					@0x081C		[rot]
UINT		x208E					@0xA310
UINT		x208F_01				@0xA311
UINT		x208F_02				@0xA312
UINT		x2090_01				@0xA313
UINT		x2090_02				@0xA314
ULONG		x2092_01				@0xA11E
ULONG		x2092_02				@0xA120
ULONG		x2092_03				@0xA122
ULONG		x2092_04				@0xA124
ULONG		x20A0_01				@0x09E5
ULONG		x20A0_02				@0x096E
FIXED		x20A0_03				@0x0970
INT			x2100					@0xA315
INT			x2101					@0xA316
UINT		x2102					@0xA317
LONG		x2103					@0xA318
UINT		x2104					@0xA291
UINT		x2105					@0xA31A
LONG		x2106					@0xA292		[rot]
LONG		x2107					@0xA294		[rot]
UINT		x2108_01				@0x099D
UINT		x2108_02				@0x099C
INT			x2108_03				@0x099B
UINT		x2109					@0x0947
INT			x210A					@0x0932
UINT		x210B					@0xA31B
INT			x210C					@0xA1C2
UINT		x210D_01				@0xA296
UINT		x210D_02				@0xA297
UINT		x210D_03				@0xA298
ULONG		x210E_01				@0xA299
ULONG		x210E_02				@0xA29B
ULONG		x210E_03				@0xA29D
ULONG		x210F_01				@0xA281
ULONG		x210F_02				@0xA283
ULONG		x2110_01				@0xA289
ULONG		x2110_02				@0xA28B
UINT		x2111					@0xA31C
UINT		x2113_01				@0xA3DE
UINT		x2113_03				@0xA3DF
UINT		x2113_04				@0xA3E0
UINT		x2113_07				@0xA3E3
UINT		x2113_08				@0xA3E1
UINT		x2113_09				@0xA3E2
UINT		x2113_10				@0xA3E4
UINT		x2113_11				@0xA3E5
UINT		x2113_12				@0xA3E6
UINT		x2113_13				@0xA3E7
UINT		x2113_15				@0xA3E8
UINT		x2114					@0xA3F6
UINT 		HWID					@0xA13A
ULONG 		SN						@0xA00E
FLOAT		ADC_IA_GAIN				@0xA1C3
INT			ADC_IA_OFST				@0xA1C5
FLOAT		ADC_IB_GAIN				@0xA1C6
INT			ADC_IB_OFST				@0xA1C8
FLOAT		ADC_IC_GAIN				@0xA1C9
INT			ADC_IC_OFST				@0xA1CB
FLOAT		ADC_ID_GAIN				@0xA1CC
INT			ADC_ID_OFST				@0xA1CE
FLOAT		ADC_LH1_GAIN			@0xA1CF
INT			ADC_LH1_OFST			@0xA1D1
FLOAT		ADC_LH2_GAIN			@0xA1D2
INT			ADC_LH2_OFST			@0xA1D4
FLOAT		ADC_LH3_GAIN			@0xA1D5
INT			ADC_LH3_OFST			@0xA1D7
FLOAT		ADC_SIN_GAIN			@0xA1D8
INT			ADC_SIN_OFST			@0xA1DA
FLOAT		ADC_COS_GAIN			@0xA1DB
INT			ADC_COS_OFST			@0xA1DD
FLOAT		ADC_REF_GAIN			@0xA1DE
INT			ADC_REF_OFST			@0xA1E0
FLOAT		ADC_FBK_GAIN			@0xA1E1
INT			ADC_FBK_OFST			@0xA1E3
FLOAT		ADC_VLOG_GAIN			@0xA1E4
INT			ADC_VLOG_OFST			@0xA1E6
FLOAT		ADC_VMOT_GAIN			@0xA1E7
INT			ADC_VMOT_OFST			@0xA1E9
FLOAT		ADC_TDRV_GAIN			@0xA1EA
INT			ADC_TDRV_OFST			@0xA1EC
FLOAT		ADC_TMOT_GAIN			@0xA1ED
INT			ADC_TMOT_OFST			@0xA1EF
FLOAT		ADC_STO_GAIN			@0xA1F0
INT			ADC_STO_OFST			@0xA1F2
INT			HALL_A_FILT				@0xA215
INT			HALL_B_FILT				@0xA216
INT			HALL_C_FILT				@0xA217
INT			HALLA					@0x0800
UINT		AD_SIN					@0x023F
UINT		AD_COS					@0x0242
UINT		SINCOS_OVRS				@0x08F1
UINT		LINHALL_OVRS			@0x08F2
UINT		CURRENT_OVRS			@0x08F3
UINT		MOTOR_DIG_HALLS			@0x08F4
UINT		CMPA					@0x08F8
UINT		CMPB					@0x08F9
UINT		CMPC					@0x08FA
UINT		CMPD					@0x08FB
UINT		ADC_SHUNTS				@0xA213
UINT		CRT_SCALE				@0x09B6
INT			ADC_TRIG_OFST			@0x08F5
UINT		CVDC_INDEX				@0x0216
ULONG		BOOT0_VER				@0xA260
ULONG		BOOT1_VER				@0xA262
UINT		ASR3					@0xA264
UINT		TML_PRIORITY			@0xA2C3
UINT		MASTER_OFF				@0xA2C3
FLOAT		ADC_10REF_GAIN			@0xA2D1
FLOAT		ADC_10FBK_GAIN			@0xA2D3
LONG		RAM_POINTER				@0xA2DD
LONG		RAM_VALUE				@0xA2DF
FIXED		GS1_TRIG_F			    @0xB000
LONG		GS1_TRIG			    @0xB000
INT			KPP_GS1				    @0xB002
INT			SFTKPP_GS1			    @0xB003
INT			KIP_GS1				    @0xB004
INT			SFTKIP_GS1			    @0xB005
INT			KDP_GS1				    @0xB006
INT			SFTKDP_GS1			    @0xB007
INT			IMAXP_GS1			    @0xB008
INT			KPS_GS1				    @0xB009
INT			SFTKPS_GS1			    @0xB00A
INT			KIS_GS1				    @0xB00B
INT			SFTKIS_GS1			    @0xB00C
INT			IMAXS_GS1			    @0xB00D
FIXED		GS2_TRIG_F			    @0xB00E
LONG		GS2_TRIG			    @0xB00E
INT			KPP_GS2				    @0xB010
INT			SFTKPP_GS2			    @0xB011
INT			KIP_GS2				    @0xB012
INT			SFTKIP_GS2			    @0xB013
INT			KDP_GS2				    @0xB014
INT			SFTKDP_GS2			    @0xB015
INT			IMAXP_GS2			    @0xB016
INT			KPS_GS2				    @0xB017
INT			SFTKPS_GS2			    @0xB018
INT			KIS_GS2				    @0xB019
INT			SFTKIS_GS2			    @0xB01A
INT			IMAXS_GS2			    @0xB01B
FIXED		GS3_TRIG_F			    @0xB01C
LONG		GS3_TRIG			    @0xB01C
INT			KPP_GS3				    @0xB01E
INT			SFTKPP_GS3			    @0xB01F
INT			KIP_GS3				    @0xB020
INT			SFTKIP_GS3			    @0xB021
INT			KDP_GS3				    @0xB022
INT			SFTKDP_GS3			    @0xB023
INT			IMAXP_GS3			    @0xB024
INT			KPS_GS3				    @0xB025
INT			SFTKPS_GS3			    @0xB026
INT			KIS_GS3				    @0xB027
INT			SFTKIS_GS3			    @0xB028
INT			IMAXS_GS3			    @0xB029
INT			SFTDFFW				    @0xA2EC
INT			KFFD				    @0xA2ED
FIXED		HIGH_SPD_LIMIT		    @0xA03A
FIXED		LOW_SPD_LIMIT		    @0xA03C
UINT		HIGH_SPD_FILTER		    @0xA039
UINT		LOW_SPD_FILTER		    @0xA03E
LONG		MONITOR_POSITION	    @0x09E5
LONG		APOS_MONITOR		    @0x096E
FIXED		ASPD_MONITOR		    @0x0970
UINT		AUTORUNACTIVE		    @0xA2B1
ULONG		ABSTART_MINMOVE		    @0x08C8
UINT		ABSTART_MODE		    @0xA2EE
UINT		ABSTART_RETRIES		    @0xA2EF
ULONG		ABSTART_MAXMOVE		    @0xA2F0
UINT		DIG_INTCFG			    @0xA326
LONG 		SYNC_ERROR			    @0x092E
INT			SYNC_MARGIN			    @0x0931
INT			SYNC_RATE			    @0x0932
UINT 		DELAYLOGGER 		    @0xA345
FIXED    	TSPD_BRUT     		    @0xA346
FIXED    	TACC_BRUT     		    @0xA348
FIXED    	TACC_NOFILT     	    @0xA34A
LONG		TSPDA1_F 			    @0xA34C
LONG		TSPDB0_F 			    @0xA34E
LONG		TACCA1_F 			    @0xA350
LONG		TACCB0_F 			    @0xA352
UINT    	TACCFILTER_OPTION       @0xA354
UINT		WAIT_TSPD_0			    @0xA355
FIXED		TACC_THRESHOLD_POS	    @0xA356
FIXED		TACC_THRESHOLD_NEG      @0xA358
LONG		FIRST_POSITION 		    @0x08A6
INT			NEW_FREEZE			    @0xA342
INT			UQREF_FREEZE		    @0xA340
INT			UQREF_FREEZE_LIM	    @0xA341
UINT		POSOKLIMMAX_FC		    @0xA343
INT			UDREF_FREEZE		    @0xA344
UINT		SPDOKLIM			    @0xA2F8	
UINT		TONSPDOK			    @0xA2F9
INT			VarFilter			    @0xC999	
UINT		VarFilterVariable	    @0xC998	
DOUBLE		VarFilterF			    @0xC997	 [Hz]
LONG 		VAR_BQ_FILTERED 	    @0xA380
UINT		BQ_VAR_ADR			    @0xA382	
UINT		BQ_VAR_TYPE			    @0xA383	
LONG		VAR_BQ_A1			    @0xA384	
LONG		VAR_BQ_B0			    @0xA386	
UINT	    ENC_FIL_FDBK1           @0xA367
UINT	    ENC_FIL_FDBK2           @0xA368
LONG	    TIME_LIM_HALLS			@0xA362	
FIXED	    CHANGE_ALGH_THRESHOLD	@0xA364
LONG	    TORQUE_SLOPE			@0xA360
LONG	    x6075					@0xA35E
LONG	    DRIVE_MAX_CURRENT 		@0xA35C
FIXED	    MAXMOTORSPEED 			@0xA36A	
INT		    ENDAT_ADD_CLOCK	        @0xA394
INT 	    ENDAT_ADD_OPTION        @0xA395
LONG 	    REVNR 					@0xA38C
LONG 	    PRODCODE 				@0xA38E
UINT 	    BISS_OPTION_READING 	@0xA390
UINT        DER2_MASK               @0xA3D2
INT		    KPTH				    @0xA397
INT		    KITH				    @0xA398
INT		    SFTKITH				    @0xA399	
INT		    SFTKPTH				    @0xA39A
INT		    KOMEGATH			    @0xA39B
INT		    THETAOFF			    @0xA39C
INT		    SATTHETA			    @0xA39D
INT		    MAXSATTHETA			    @0xA39E
INT		    THETAC				    @0xA39F
INT		    THETAFDBK			    @0xA3A0
INT		    ENTHETASAT			    @0xA3A1
INT		    ERRPOS				    @0xA3A2	
INT		    IDCMD				    @0xA3A3
INT		    ENINTQ				    @0xA3A4
INT		    ENINTD				    @0xA3A5
LONG		THETACL				    @0xA3A6
LONG		THETACP				    @0xA3A8
LONG		THETACI				    @0xA3AA
LONG		APOSFASTER			    @0xA3AC
LONG		TPOSFASTER			    @0xA3B0
LONG		UBREFL				    @0xA3B2
LONG		UAREFL				    @0xA3B4
LONG		UQREFL				    @0xA3B6
LONG		UDREFL				    @0xA3B8
LONG		LKPI				    @0xA3BA
LONG		LKII				    @0xA3BC
LONG		QICRTQP				    @0xA3BE
LONG		QICRTQI				    @0xA3C0
LONG		QICRTDP				    @0xA3C2
LONG		QICRTDI				    @0xA3C4
INT		    SPDFAST				    @0xA3C6
LONG		MDELTHPOS			    @0xA3CA
UINT	    CRT_SCALE_AMP           @0xA3D3
ULONG	    MOTOR_NOM_CRT	        @0xA35E	
ULONG	    ASR4                    @0xA3C8	
FIXED	    SOL_THETA_INC 			@0xA3D7
LONG        ERRPROT_SOL_PID         @0xA3D5
UINT        TONERR_SOL_PID          @0xA3D4
INT			x6077					@0xA3C7
UINT 		FDBK_IGNORE_ERR 		@0x0976
LONG 		ZAOFFL					@0xA3DC
LONG        P_RAM_ADR_MC5			@0xA31E
LONG        RAM_VALUE_RD_MC5		@0xA320
LONG        RAM_VALUE_WR_MC5		@0xA322
UINT        WR_REQ_MC5				@0xA324
UINT		IAOFF_H					@0xA3E9
UINT		IBOFF_H					@0xA3EA
UINT		ICOFF_H					@0xA3EB
UINT		IDOFF_H					@0xA3EC
UINT		IAOFF_L					@0xA3ED
UINT		IBOFF_L					@0xA3EE
UINT		ICOFF_L					@0xA3EF
UINT		IDOFF_L					@0xA3F0
ULONG		FDBK1_BUFFER_LSB		@0xA3F8
ULONG		FDBK1_BUFFER_MSB		@0xA3FA
ULONG		FDBK2_BUFFER_LSB		@0xA3FC
ULONG		FDBK2_BUFFER_MSB		@0xA3FE
UINT		FDBK1_CRC_COMPUTED		@0xA404
UINT		FDBK1_CRC_RECEIVE		@0xA405
UINT		FDBK2_CRC_COMPUTED		@0xA406
UINT		FDBK2_CRC_RECEIVE		@0xA407
UINT		FDBK1_LEADING_ZEROS		@0xA400
UINT		FDBK2_LEADING_ZEROS		@0xA401
UINT		FDBK1_TRAILING_BITS_SFT	@0xA402
UINT		FDBK2_TRAILING_BITS_SFT	@0xA403
UINT 		FAULT_REACTION_PDPINT	@0XA3DE
UINT 		FAULT_REACTION_CTRL_ERR	@0XA3DF
UINT 		FAULT_REACTION_COMM		@0XA3E0
UINT 		FAULT_REACTION_OVERCRT	@0XA3E1
UINT 		FAULT_REACTION_I2T		@0XA3E2
UINT 		FAULT_REACTION_I2T_DRIVE	@0XA3E3
UINT 		FAULT_REACTION_MOTOR_TEMP	@0XA3E4
UINT 		FAULT_REACTION_DRIVE_TEMP	@0XA3E5
UINT 		FAULT_REACTION_OVERVOLTAGE	@0XA3E6
UINT 		FAULT_REACTION_UNDERVOLTAGE	@0XA3E7
UINT 		FAULT_REACTION_ENA		@0XA3E8 
UINT 		FAULT_REACTION_OVERRIDE	@0xA3F6 
UINT 		HALLACOEFF				@0xA21B
UINT 		HALLBCOEFF				@0xA21C
UINT 		HALLCCOEFF				@0x0853
UINT 		HALLAMIN				@0x02FD
UINT 		HALLBMIN				@0xA218
UINT 		HALLCMIN				@0x0852
UINT 		HALLAMAX				@0x028D
UINT 		HALLBMAX				@0x02FE
UINT 		HALLCMAX				@0xA219

`;

export const FW_actualAddresses_FA00G = `

{
	/*================================================================
	 * Motion Control Variables. Internal use. Part 1.
	 *============================================================= */
	LSW_ADDRESS_OF(number_of_drive_inputs),		// [0x200]
	LSW_ADDRESS_OF(asr),						// [0x201]
	LSW_ADDRESS_OF(fast_loop_counter),			// [0x202]
	LSW_ADDRESS_OF(slow_loop_counter),			// [0x203]
	LSW_ADDRESS_OF(number_of_drive_outputs),	// [0x204]
	LSW_ADDRESS_OF(tmp_slow[0]),				// [0x205]
	LSW_ADDRESS_OF(tmp_slow[1]),				// [0x206]
	LSW_ADDRESS_OF(tmp_slow[2]),				// [0x207]
	LSW_ADDRESS_OF(tmp_slow[3]),				// [0x208]
	LSW_ADDRESS_OF(tmp_fast[0]),				// [0x209]
	LSW_ADDRESS_OF(tmp_fast[1]),				// [0x20a]
	LSW_ADDRESS_OF(tmp_fast[2]),				// [0x20b]
	LSW_ADDRESS_OF(tmp_fast[3]),				// [0x20c]
	LSW_ADDRESS_OF(new_actr_value_or_time_0),	// [0x20d]
	MSW_ADDRESS_OF(stepper_sol_dtheta_fast),	// [0x20e]
	LSW_ADDRESS_OF(theta_fract_sol),			// [0x20f]
	LSW_ADDRESS_OF(fdbk1_new_position),			// [0x210]
	LSW_ADDRESS_OF(fdbk1_old_position),			// [0x211]
	LSW_ADDRESS_OF(pos_2theta_1),				// [0x212]
	LSW_ADDRESS_OF(hall_1),						// [0x213]	// _sin_theta_resolver
	LSW_ADDRESS_OF(pos_err_1),					// [0x214]
	LSW_ADDRESS_OF(current_id),					// [0x215]
	LSW_ADDRESS_OF(cvdc_table_index),			// [0x216]
	LSW_ADDRESS_OF(fdbk1_encoder_baudrate),		// [0x217]
	LSW_ADDRESS_OF(fdbk1_bits_st),				// [0x218]
	LSW_ADDRESS_OF(fdbk1_bits_mt),				// [0x219]
	LSW_ADDRESS_OF(fdbk1_bits_ign_st),			// [0x21a]
	LSW_ADDRESS_OF(fdbk1_bits_ign_mt),			// [0x21b]
	LSW_ADDRESS_OF(fdbk1_powerup_timeout),		// [0x21c]
	LSW_ADDRESS_OF(fdbk1_is_gray_coded),		// [0x21d]
	LSW_ADDRESS_OF(null_padding_variable),		// [0x21e]
	LSW_ADDRESS_OF(sat_out_spd_1),				// [0x21f]
	LSW_ADDRESS_OF(pos_inc),					// [0x220]
	LSW_ADDRESS_OF(electric_position),			// [0x221]	// _sin_coeff_temp / _res_ex2
	/*================================================================
	 * Motion Control Variables. User has read access for data logging
	 *============================================================= */
	LSW_ADDRESS_OF(pos_2theta),					// [0x222]
	LSW_ADDRESS_OF(load),						// [0x223]	// _theta_t
	LSW_ADDRESS_OF(theta),						// [0x224]
	LSW_ADDRESS_OF(sin_theta),					// [0x225]
	LSW_ADDRESS_OF(cos_theta),					// [0x226]
	LSW_ADDRESS_OF(hall),						// [0x227]	// _cos_theta_resolver / _omgs
	LSW_ADDRESS_OF(apos_load),					// [0x228]
	MSW_ADDRESS_OF(apos_load),					// [0x229]
	LSW_ADDRESS_OF(pos_err),					// [0x22a]
	LSW_ADDRESS_OF(spd_ref),					// [0x22b]
	LSW_ADDRESS_OF(motor_speed),				// [0x22c]
	MSW_ADDRESS_OF(motor_speed),				// [0x22d]
	LSW_ADDRESS_OF(spd_err),					// [0x22e]
	LSW_ADDRESS_OF(i_q_ref),					// [0x22f]
	LSW_ADDRESS_OF(i_q),						// [0x230]
	LSW_ADDRESS_OF(crt_err),					// [0x231]
	LSW_ADDRESS_OF(u_q_ref),					// [0x232]
	LSW_ADDRESS_OF(i_d_ref),					// [0x233]
	LSW_ADDRESS_OF(i_d),						// [0x234]
	LSW_ADDRESS_OF(u_d_ref),					// [0x235]
	LSW_ADDRESS_OF(u_a_ref),					// [0x236]
	LSW_ADDRESS_OF(u_b_ref),					// [0x237]
	LSW_ADDRESS_OF(u_c_ref),					// [0x238]
	LSW_ADDRESS_OF(current_ia),					// [0x239]
	LSW_ADDRESS_OF(current_ib),					// [0x23a]
	LSW_ADDRESS_OF(current_ic),					// [0x23b]
	LSW_ADDRESS_OF(ad_res_0),					// [0x23c]
	LSW_ADDRESS_OF(ad_res_1),					// [0x23d]
	LSW_ADDRESS_OF(adc_feedback_unfiltered),	// [0x23e]
	LSW_ADDRESS_OF(adc_encoder_sin),			// [0x23f]
	LSW_ADDRESS_OF(v_mot),						// [0x240]		//DC supply motor
	LSW_ADDRESS_OF(adc_reference),				// [0x241]
	LSW_ADDRESS_OF(adc_encoder_cos),			// [0x242]
	LSW_ADDRESS_OF(t_drive),					// [0x243]		//ad_res_7
	/*================================================================
	 * Motion Control Parameters. Part 1.
	 *============================================================= */
	LSW_ADDRESS_OF(offset_ad0_v),				// [0x244]
	LSW_ADDRESS_OF(offset_ad1_v),				// [0x245]
	LSW_ADDRESS_OF(offset_ad2_p),				// [0x246]
	LSW_ADDRESS_OF(linear_hall_2_offset),		// [0x247]
	LSW_ADDRESS_OF(offset_ad4_p),				// [0x248]
	LSW_ADDRESS_OF(offset_ad5_p),				// [0x249]
	LSW_ADDRESS_OF(linear_hall_1_offset),		// [0x24a]
	LSW_ADDRESS_OF(offset_ad7_p),				// [0x24b]
	LSW_ADDRESS_OF(cqep2theta_long),			// [0x24c]			// cqep2theta_long / pos_brut32 / adchannel01
	MSW_ADDRESS_OF(cqep2theta_long),			// [0x24d]	// adchannel23
	LSW_ADDRESS_OF(nlines_el_rev_long),			// [0x24e]	// nlines_el_rev_long / pos_brut32_1 / adchannel45
	MSW_ADDRESS_OF(nlines_el_rev_long),			// [0x24f]	// adchannel67
	LSW_ADDRESS_OF(fast_max_counts),			// [0x250]
	LSW_ADDRESS_OF(slow_max_counts),			// [0x251]
	LSW_ADDRESS_OF(pwm_period),					// [0x252]
	LSW_ADDRESS_OF(dbt),						// [0x253]
	LSW_ADDRESS_OF(u_sat_pwm),					// [0x254]
	LSW_ADDRESS_OF(gear_master),				// [0x255]	// _nnn
	LSW_ADDRESS_OF(gear_slave),					// [0x256]	//  MSB_ADDRESS_OF(gear_master)
	LSW_ADDRESS_OF(phase_adv),					// [0x257]	// hall_io_add_or_c_weak
	LSW_ADDRESS_OF(linear_hall_3_offset),		// [0x258]
	LSW_ADDRESS_OF(hall_config_or_theta_inc_weak),	// [0x259]
	LSW_ADDRESS_OF(v_dc_nominal),				// [0x25a]
	LSW_ADDRESS_OF(c_v_dc),						// [0x25b]
	LSW_ADDRESS_OF(c_analogue_in),				// [0x25c]
	LSW_ADDRESS_OF(sh_c_analogue_in),			// [0x25d]
	LSW_ADDRESS_OF(kp_pos),						// [0x25e]
	LSW_ADDRESS_OF(sh_p_pos),					// [0x25f]
	LSW_ADDRESS_OF(ki_pos),						// [0x260]
	LSW_ADDRESS_OF(sh_i_pos),					// [0x261]
	LSW_ADDRESS_OF(kd_pos),						// [0x262]
	LSW_ADDRESS_OF(sh_d_pos),					// [0x263]
	LSW_ADDRESS_OF(kdf_pos),					// [0x264]
	LSW_ADDRESS_OF(sat_out_pos),				// [0x265]
	LSW_ADDRESS_OF(sat_int_pos),				// [0x266]
	LSW_ADDRESS_OF(kp_spd),						// [0x267]
	LSW_ADDRESS_OF(sh_p_spd),					// [0x268]
	LSW_ADDRESS_OF(ki_spd),						// [0x269]
	LSW_ADDRESS_OF(sh_i_spd),					// [0x26a]
	LSW_ADDRESS_OF(sat_out_spd),				// [0x26b]
	LSW_ADDRESS_OF(sat_int_spd),				// [0x26c]
	LSW_ADDRESS_OF(kff_spd),					// [0x26d]
	LSW_ADDRESS_OF(kff_acc),					// [0x26e]
	LSW_ADDRESS_OF(kff_load),					// [0x26f]
	LSW_ADDRESS_OF(sh_kff),						// [0x270]
	LSW_ADDRESS_OF(kp_crt),						// [0x271]
	LSW_ADDRESS_OF(sh_p_crt),					// [0x272]
	LSW_ADDRESS_OF(ki_crt),						// [0x273]
	LSW_ADDRESS_OF(sh_i_crt),					// [0x274]
	LSW_ADDRESS_OF(sat_out_crtd),				// [0x275]
	LSW_ADDRESS_OF(sat_out_crtq),				// [0x276]
	LSW_ADDRESS_OF(nlines_el_rev_or_c_spd),		// [0x277]
	LSW_ADDRESS_OF(cqep2theta_or_sh_c_spd),		// [0x278]	// flag_correction
	LSW_ADDRESS_OF(linear_hall_3_gain),			// [0x279]
	LSW_ADDRESS_OF(homopolar_comp),				// [0x27a]
	LSW_ADDRESS_OF(i_d_ref_max),				// [0x27b]
	LSW_ADDRESS_OF(i_d_ref_min),				// [0x27c]
	LSW_ADDRESS_OF(boost_voltage),				// [0x27d]
	LSW_ADDRESS_OF(filter_coeficient),			// [0x27e] // filter_coefficient
	LSW_ADDRESS_OF(linear_hall_interpolation),	// [0x27f] // n2
	/*================================================================
	 * Motion Control Parameters. Part 2.
	 *============================================================= */
	LSW_ADDRESS_OF(increment_ref_test),			// [0x280]
	LSW_ADDRESS_OF(reference_test),				// [0x281]
	LSW_ADDRESS_OF(theta_test),					// [0x282]
	LSW_ADDRESS_OF(theta_inc_test_or_ho),		// [0x283]
	LSW_ADDRESS_OF(time_a),						// [0x284]
	LSW_ADDRESS_OF(time_b),						// [0x285]
	LSW_ADDRESS_OF(brake_control_register),		// [0x286]	// time_max
	LSW_ADDRESS_OF(linear_hall_1_gain),			// [0x287]	// pos_trigger / sin_coeff
	LSW_ADDRESS_OF(pos_long_compensation),		// [0x288]	//cos_coeff_temp  / start_sense
	LSW_ADDRESS_OF(exotic_position_offset),		// [0x289]	// offset_aphase
	LSW_ADDRESS_OF(level_brake_on),				// [0x28a]
	LSW_ADDRESS_OF(brake_duty_cycle),			// [0x28b]
	LSW_ADDRESS_OF(brake_off_level),			// [0x28c]
	LSW_ADDRESS_OF(linear_hall_1_max),			// [0x28d]	// sin_theta_max
	LSW_ADDRESS_OF(k_i_q),						// [0x28e]
	LSW_ADDRESS_OF(linear_hall_2_gain),			// [0x28f]
	LSW_ADDRESS_OF(sft_current),				// [0x290]
	LSW_ADDRESS_OF(sh_t_ai),					// [0x291]
	LSW_ADDRESS_OF(sh_t_si),					// [0x292]
	/*================================================================
	 * Protection Parameters.
	 *============================================================= */
	LSW_ADDRESS_OF(beta),						// [0x293]
	MSW_ADDRESS_OF(beta),						// [0x294]
	LSW_ADDRESS_OF(imax),						// [0x295]
	LSW_ADDRESS_OF(alpha),						// [0x296]
	MSW_ADDRESS_OF(alpha),						// [0x297]
	LSW_ADDRESS_OF(t1max),						// [0x298]
	LSW_ADDRESS_OF(t2max),						// [0x299]
	LSW_ADDRESS_OF(umax),						// [0x29a]
	LSW_ADDRESS_OF(umin),						// [0x29b]
	LSW_ADDRESS_OF(n_max),						// [0x29c]
	LSW_ADDRESS_OF(filter_1),					// [0x29d]
	/*================================================================
	 * ReferenceGenerator Inputs. Command parameters.
	 *============================================================= */
	LSW_ADDRESS_OF(c_pos),						// [0x29e]
	MSW_ADDRESS_OF(c_pos),						// [0x29f]
	LSW_ADDRESS_OF(c_spd),						// [0x2a0]
	MSW_ADDRESS_OF(c_spd),						// [0x2a1]
	LSW_ADDRESS_OF(c_acc),						// [0x2a2]
	MSW_ADDRESS_OF(c_acc),						// [0x2a3]
	LSW_ADDRESS_OF(c_dref),						// [0x2a4]
	(int32_t*)MSB_ADDRESS_OF(c_dref),			// [0x2a5]
	LSW_ADDRESS_OF(c_time),						// [0x2a6]
	LSW_ADDRESS_OF(asr2),						// [0x2a7]	// lsw_stop
	LSW_ADDRESS_OF(c_ref),						// [0x2a8]
	MSW_ADDRESS_OF(c_ref),						// [0x2a9]
	LSW_ADDRESS_OF(m_ref),						// [0x2aa]	//m_ref
	MSW_ADDRESS_OF(m_ref),						// [0x2ab]	//m_ref
	LSW_ADDRESS_OF(eg_ratio),					// [0x2ac]
	MSW_ADDRESS_OF(eg_ratio),					// [0x2ad]
	/*================================================================
	 * ReferenceGenerator Outputs. Read-only computed parameters.
	 *============================================================= */
	LSW_ADDRESS_OF(ref),						// [0x2ae]
	MSW_ADDRESS_OF(ref),						// [0x2af]
	LSW_ADDRESS_OF(mcr_1),						// [0x2b0]
	LSW_ADDRESS_OF(t_pif),						// [0x2b1]
	LSW_ADDRESS_OF(t_pi),						// [0x2b2]
	MSW_ADDRESS_OF(t_pi),						// [0x2b3]
	LSW_ADDRESS_OF(t_si),						// [0x2b4]
	MSW_ADDRESS_OF(t_si),						// [0x2b5]
	LSW_ADDRESS_OF(t_ai),						// [0x2b6]
	MSW_ADDRESS_OF(t_ai),						// [0x2b7]
	/*================================================================
	 * Other ML parameters.
	 *============================================================= */
	LSW_ADDRESS_OF(pos0),						// [0x2b8]
	MSW_ADDRESS_OF(pos0),						// [0x2b9]
	LSW_ADDRESS_OF(pos_rel),					// [0x2ba]
	MSW_ADDRESS_OF(pos_rel),					// [0x2bb]
	LSW_ADDRESS_OF(cap_pos),					// [0x2bc]
	MSW_ADDRESS_OF(cap_pos),					// [0x2bd]
	LSW_ADDRESS_OF(ml_time0),					// [0x2be]
	MSW_ADDRESS_OF(ml_time0),					// [0x2bf]
	LSW_ADDRESS_OF(ml_time),					// [0x2c0]
	MSW_ADDRESS_OF(ml_time),					// [0x2c1]
	LSW_ADDRESS_OF(ml_rtime),					// [0x2c2]
	MSW_ADDRESS_OF(ml_rtime),					// [0x2c3]
	/*================================================================
	 * Motion Control Parameters. Part 3.
	 *============================================================= */
	LSW_ADDRESS_OF(tonimax),					// [0x2c4]
	LSW_ADDRESS_OF(errprot),					// [0x2c5]
	LSW_ADDRESS_OF(tonerr),						// [0x2c6]
	LSW_ADDRESS_OF(spd_ref_lim),				// [0x2c7]	// spd_ref_lim //earth_fault_level
	/*================================================================
	 * ReferenceGenerator Variables. Internal use.
	 *============================================================= */
	LSW_ADDRESS_OF(c_a),						// [0x2c8]
	MSW_ADDRESS_OF(c_a),						// [0x2c9]
	LSW_ADDRESS_OF(c_1a),						// [0x2ca]
	MSW_ADDRESS_OF(c_1a),						// [0x2cb]
	LSW_ADDRESS_OF(dref),						// [0x2cc]	// _dref
	MSW_ADDRESS_OF(dref),						// [0x2cd]	// _dref
	LSW_ADDRESS_OF(rg_p),						// [0x2ce]	// rg_p
	MSW_ADDRESS_OF(rg_p),						// [0x2cf]	// rg_p
	LSW_ADDRESS_OF(rg_ss),						// [0x2d0]	// rg_ss
	MSW_ADDRESS_OF(rg_ss),						// [0x2d1]	// rg_ss
	LSW_ADDRESS_OF(rg_js),						// [0x2d2]	// t_aif_sc
	MSW_ADDRESS_OF(rg_js),						// [0x2d3]	// t_sif_sc
	LSW_ADDRESS_OF(rg_a),						// [0x2d4]	// t_pif_sc
	MSW_ADDRESS_OF(rg_a),						// [0x2d5]	// sc_seg_no / counter_pvt
	LSW_ADDRESS_OF(rg_1a),						// [0x2d6]	// counter_sc / a_pvt_a_int
	(uint32_t*)MSB_ADDRESS_OF(rg_1a),			// [0x2d7]
	LSW_ADDRESS_OF(rg_s),						// [0x2d8]	// a_pvt_a_fr / jerki_fr
	MSW_ADDRESS_OF(rg_s),						// [0x2d9]
	LSW_ADDRESS_OF(rg_ti),						// [0x2da]	// jerki_int
	LSW_ADDRESS_OF(rg_p0if),					// [0x2db]	// jerki2_int
	LSW_ADDRESS_OF(rg_p0i),						// [0x2dc]	// jerki2_fr
	MSW_ADDRESS_OF(rg_p0i),						// [0x2dd]
	LSW_ADDRESS_OF(rg_pdi),						// [0x2de]	// jerki6_fr
	MSW_ADDRESS_OF(rg_pdi),						// [0x2df]
	LSW_ADDRESS_OF(t_dpi),						// [0x2e0]
	MSW_ADDRESS_OF(t_dpi),						// [0x2e1]
	LSW_ADDRESS_OF(t_si1),						// [0x2e2]
	MSW_ADDRESS_OF(t_si1),						// [0x2e3]
	LSW_ADDRESS_OF(m_ref1),						// [0x2e4]
	MSW_ADDRESS_OF(m_ref1),						// [0x2e5]
	LSW_ADDRESS_OF(rg_temp1),					// [0x2e6]	// cam_temp
	MSW_ADDRESS_OF(rg_temp1),					// [0x2e7]
	LSW_ADDRESS_OF(rg_temp2),					// [0x2e8]	// cam_ind
	MSW_ADDRESS_OF(rg_temp2),					// [0x2e9]	// cam_rem
	LSW_ADDRESS_OF(rg_pdif),					// [0x2ea]	// jerki6_int
	LSW_ADDRESS_OF(rg_temp3f),					// [0x2eb]	// cam_step
	LSW_ADDRESS_OF(rg_temp3),					// [0x2ec]	// cam_masterrelpos
	MSW_ADDRESS_OF(rg_temp3),					// [0x2ed]
	/*================================================================
	 * Motion Control Variables. Internal use. Part 2.
	 *============================================================= */
	LSW_ADDRESS_OF(stall_lim),					// [0x2ee]	// contor_1
	LSW_ADDRESS_OF(ref_high),					// [0x2ef]
	LSW_ADDRESS_OF(sign),						// [0x2f0]	// gm_send_bsy
	LSW_ADDRESS_OF(eg_init),					// [0x2f1]
	LSW_ADDRESS_OF(spd_ref_long),				// [0x2f2]	// _btimeout / position_zero_ssi
	MSW_ADDRESS_OF(spd_ref_long),				// [0x2f3]	// posspd_init
	LSW_ADDRESS_OF(fdbk1_encoder_sense),		// [0x2f4]
	LSW_ADDRESS_OF(comm_channel_type),			// [0x2f5]
	LSW_ADDRESS_OF(flag_t_undflw),				// [0x2f6]
	LSW_ADDRESS_OF(pos_2theta_filtered),		// [0x2f7]	// pos_2theta_filtered / pwm_pooling_adc
	LSW_ADDRESS_OF(pos_2theta_filtered_integral),	// [0x2f8]	// pos_2theta_filtered_integral / random_number
	LSW_ADDRESS_OF(fdbk2_encoder_sense),		// [0x2f9]	// ssi_sense / pos_delta_apos / flag_speed_too_low
	LSW_ADDRESS_OF(t_prescaler),				// [0x2fa]	// _mult / exotic_feedback_cmp / pos_delta_apos_1
	LSW_ADDRESS_OF(flag_uv),					// [0x2fb]
	LSW_ADDRESS_OF(u_offset),					// [0x2fc]	// t_con_value / pos_brut_32_rest
	LSW_ADDRESS_OF(linear_hall_1_min),			// [0x2fd]	// k_omega / sin_theta_min
	LSW_ADDRESS_OF(linear_hall_2_max),			// [0x2fe]	// cos_theta_max / k_uphase
	LSW_ADDRESS_OF(u_stbycrt),					// [0x2ff]	// acceleration / resolver_amplitude
	/*================================================================
	 * Motion Language Kernel and TIMC Registers
	 *============================================================= */
	LSW_ADDRESS_OF(scr),						// [0x300]
	LSW_ADDRESS_OF(cer),						// [0x301]
	LSW_ADDRESS_OF(osr),						// [0x302]
	LSW_ADDRESS_OF(pcr),						// [0x303]
	LSW_ADDRESS_OF(icr),						// [0x304]
	LSW_ADDRESS_OF(der2),						// [0x305]		// pcr_1
	LSW_ADDRESS_OF(isr),						// [0x306]
	LSW_ADDRESS_OF(p_int_table),				// [0x307]		//TML interrupt table address
	LSW_ADDRESS_OF(msr),						// [0x308]
	LSW_ADDRESS_OF(mcr),						// [0x309]
	LSW_ADDRESS_OF(ccr),						// [0x30a]
	LSW_ADDRESS_OF(csr),						// [0x30b]
	LSW_ADDRESS_OF(aar),						// [0x30c]
	LSW_ADDRESS_OF(cbr),						// [0x30d]
	LSW_ADDRESS_OF(ml_p[0]),					// [0x30e]
	LSW_ADDRESS_OF(ml_p[1]),					// [0x30f]
	LSW_ADDRESS_OF(ml_p[2]),					// [0x310]
	LSW_ADDRESS_OF(gearslave_id),				// [0x311]
	LSW_ADDRESS_OF(motor_on),					// [0x312]
	LSW_ADDRESS_OF(pp_ip1_break),				// [0x313]
	LSW_ADDRESS_OF(pp_ip2_break),				// [0x314]
	LSW_ADDRESS_OF(p_ip),						// [0x315]
	LSW_ADDRESS_OF(p_ip_sw),					// [0x316]
	LSW_ADDRESS_OF(p_ip_prog),					// [0x317]
	LSW_ADDRESS_OF(restore_ip),					// [0x318]
	LSW_ADDRESS_OF(p_ip_break),					// [0x319]
	LSW_ADDRESS_OF(pp_stack_pointer),			// [0x31a]
	LSW_ADDRESS_OF(mli_code),					// [0x31b]
	LSW_ADDRESS_OF(max_cor_err),				// [0x31c]
	LSW_ADDRESS_OF(mli_temp_0),					// [0x31d]
	LSW_ADDRESS_OF(mli_temp_1),					// [0x31e]
	LSW_ADDRESS_OF(ml_data[0]),					// [0x31f]
	LSW_ADDRESS_OF(ml_data[1]),					// [0x320]
	LSW_ADDRESS_OF(ml_data[2]),					// [0x321]
	LSW_ADDRESS_OF(ml_data[3]),					// [0x322]
	LSW_ADDRESS_OF(ml_comp_l),					// [0x323]
	LSW_ADDRESS_OF(ml_event_reg),				// [0x324]
	MSW_ADDRESS_OF(ml_event_reg),				// [0x325]
	LSW_ADDRESS_OF(ml_comp_r),					// [0x326]
	LSW_ADDRESS_OF(ml_event_mask),				// [0x327]
	LSW_ADDRESS_OF(drive_disabled),				// [0x328]
	LSW_ADDRESS_OF(mer_mask_1),					// [0x329]	// _crc
	LSW_ADDRESS_OF(index_value),				// [0x32a]
	/*================================================================
	 * Communication variables.
	 *============================================================= */
	LSW_ADDRESS_OF(download_count),				// [0x32b]
	LSW_ADDRESS_OF(data_length),				// [0x32c]
	LSW_ADDRESS_OF(timeout),					// [0x32d]
	LSW_ADDRESS_OF(p_ml_kernel_buffer),			// [0x32e]
	LSW_ADDRESS_OF(message_buffer[0].m_length),	// [0x32f]
	LSW_ADDRESS_OF(message_buffer[0].m_address),// [0x330]
	LSW_ADDRESS_OF(message_buffer[0].m_opcode),	// [0x331]
	LSW_ADDRESS_OF(message_buffer[0].m_data[0]),// [0x332]
	LSW_ADDRESS_OF(message_buffer[0].m_data[1]),// [0x333]
	LSW_ADDRESS_OF(message_buffer[0].m_data[2]),// [0x334]
	LSW_ADDRESS_OF(message_buffer[0].m_data[3]),// [0x335]
	LSW_ADDRESS_OF(message_buffer[1].m_length),	// [0x336]
	LSW_ADDRESS_OF(message_buffer[1].m_address),// [0x337]
	LSW_ADDRESS_OF(message_buffer[1].m_opcode),	// [0x338]
	LSW_ADDRESS_OF(message_buffer[1].m_data[0]),// [0x339]
	LSW_ADDRESS_OF(message_buffer[1].m_data[1]),// [0x33a]
	LSW_ADDRESS_OF(message_buffer[1].m_data[2]),// [0x33b]
	LSW_ADDRESS_OF(message_buffer[1].m_data[3]),// [0x33c]
	LSW_ADDRESS_OF(message_buffer[2].m_length),	// [0x33d]
	LSW_ADDRESS_OF(message_buffer[2].m_address),// [0x33e]
	LSW_ADDRESS_OF(message_buffer[2].m_opcode),	// [0x33f]
	LSW_ADDRESS_OF(message_buffer[2].m_data[0]),// [0x340]
	LSW_ADDRESS_OF(message_buffer[2].m_data[1]),// [0x341]
	LSW_ADDRESS_OF(message_buffer[2].m_data[2]),// [0x342]
	LSW_ADDRESS_OF(message_buffer[2].m_data[3]),// [0x343]
	LSW_ADDRESS_OF(message_buffer[3].m_length),	// [0x344]
	LSW_ADDRESS_OF(message_buffer[3].m_address),// [0x345]
	LSW_ADDRESS_OF(message_buffer[3].m_opcode),	// [0x346]
	LSW_ADDRESS_OF(message_buffer[3].m_data[0]),// [0x347]
	LSW_ADDRESS_OF(message_buffer[3].m_data[1]),// [0x348]
	LSW_ADDRESS_OF(message_buffer[3].m_data[2]),// [0x349]
	LSW_ADDRESS_OF(message_buffer[3].m_data[3]),// [0x34a]
	LSW_ADDRESS_OF(data_buffer[0]),				// [0x34b]
	LSW_ADDRESS_OF(data_buffer[1]),				// [0x34c]
	LSW_ADDRESS_OF(data_buffer[2]),				// [0x34d]
	LSW_ADDRESS_OF(takedata_timeout),			// [0x34e]
	/*================================================================
	 * SCI Variables.
	 *============================================================= */
	LSW_ADDRESS_OF(n_new_baudrate),				// [0x34f]
	LSW_ADDRESS_OF(p_rx_buffer),				// [0x350]
	MSW_ADDRESS_OF(p_rx_buffer),				// [0x351]
	LSW_ADDRESS_OF(p_tx_buffer),				// [0x352]
	MSW_ADDRESS_OF(p_tx_buffer),				// [0x353]
	LSW_ADDRESS_OF(default_io_fcn_register),	// [0x354]
	MSW_ADDRESS_OF(default_io_fcn_register),	// [0x355]
	LSW_ADDRESS_OF(is_forced_transition_2),		// [0x356]
	LSW_ADDRESS_OF(initial_alignment_performed),// [0x357]
	LSW_ADDRESS_OF(p_rx_pointer),				// [0x358]
	MSW_ADDRESS_OF(p_rx_pointer),				// [0x359]
	LSW_ADDRESS_OF(p_tx_pointer),				// [0x35a]
	MSW_ADDRESS_OF(p_tx_pointer),				// [0x35b]
	LSW_ADDRESS_OF(sci_tmprx),					// [0x35c]
	LSW_ADDRESS_OF(sci_tmptx),					// [0x35d]
	LSW_ADDRESS_OF(p_switch_rx_buffer),			// [0x35e]
	MSW_ADDRESS_OF(p_switch_rx_buffer),			// [0x35f]
	LSW_ADDRESS_OF(ad_filt),					// [0x360]
	MSW_ADDRESS_OF(ad_filt),					// [0x361]
	LSW_ADDRESS_OF(contor_imax),				// [0x362]
	LSW_ADDRESS_OF(contor_err),					// [0x363]
	LSW_ADDRESS_OF(contor_2),					// [0x364]
	LSW_ADDRESS_OF(log_ptr),					// [0x365]
	LSW_ADDRESS_OF(var_i1),						// [0x366]
	LSW_ADDRESS_OF(var_i2),						// [0x367]
	LSW_ADDRESS_OF(var_lf),						// [0x368]
	MSW_ADDRESS_OF(var_lf),						// [0x369]
	LSW_ADDRESS_OF(err_min),					// [0x36a]
	LSW_ADDRESS_OF(ton_err_min),				// [0x36b]
	LSW_ADDRESS_OF(contor_err_min),				// [0x36c]
	LSW_ADDRESS_OF(ml_stack[0]),				// [0x36d]
	LSW_ADDRESS_OF(ml_stack[1]),				// [0x36e]
	LSW_ADDRESS_OF(ml_stack[2]),				// [0x36f]
	LSW_ADDRESS_OF(ml_stack[3]),				// [0x370]
	LSW_ADDRESS_OF(ml_stack[4]),				// [0x371]
	LSW_ADDRESS_OF(ml_stack[5]),				// [0x372]
	LSW_ADDRESS_OF(ml_stack[6]),				// [0x373]
	LSW_ADDRESS_OF(ml_stack[7]),				// [0x374]
	LSW_ADDRESS_OF(ml_stack[8]),				// [0x375]
	LSW_ADDRESS_OF(ml_stack[9]),				// [0x376]
	LSW_ADDRESS_OF(ml_stack[10]),				// [0x377]
	LSW_ADDRESS_OF(tml_int_time0),				// [0x378]
	LSW_ADDRESS_OF(tml_inactive),				// [0x379]
	LSW_ADDRESS_OF(speed_halls),				// [0x37a] p_txbuf_rd TODO restore
	MSW_ADDRESS_OF(speed_halls),				// [0x37b]
	LSW_ADDRESS_OF(transmission),				// [0x37c]	// [_transmition]
	MSW_ADDRESS_OF(transmission),				// [0x37d]
	LSW_ADDRESS_OF(aspd_mt_temp),				// [0x37e]
	MSW_ADDRESS_OF(aspd_mt_temp),				// [0x37f]
	/*================================================================
	 * CAN Variables.
	 *============================================================= */
	LSW_ADDRESS_OF(time_dimension_index),			// [0x380]		// time_dimension_index
	LSW_ADDRESS_OF(time_notation_index),			// [0x381]
	LSW_ADDRESS_OF(real_tonerr),					// [0x382]
	LSW_ADDRESS_OF(real_tonerrmin),					// [0x383]
	LSW_ADDRESS_OF(real_time_jerk),					// [0x384]
	LSW_ADDRESS_OF(real_spdtonerr),					// [0x385]
	LSW_ADDRESS_OF(position_factor.numerator),		// [0x386]
	MSW_ADDRESS_OF(position_factor.numerator),		// [0x387]
	LSW_ADDRESS_OF(position_factor.divisor),		// [0x388]
	MSW_ADDRESS_OF(position_factor.divisor),		// [0x389]
	LSW_ADDRESS_OF(velocity_factor.numerator),		// [0x38a]
	MSW_ADDRESS_OF(velocity_factor.numerator),		// [0x38b]
	LSW_ADDRESS_OF(velocity_factor.divisor),		// [0x38c]
	MSW_ADDRESS_OF(velocity_factor.divisor),		// [0x38d]
	LSW_ADDRESS_OF(acceleration_factor.numerator),	// [0x38e]
	MSW_ADDRESS_OF(acceleration_factor.numerator),	// [0x38f]
	LSW_ADDRESS_OF(acceleration_factor.divisor),	// [0x390]
	MSW_ADDRESS_OF(acceleration_factor.divisor),	// [0x391]
	LSW_ADDRESS_OF(time_factor.numerator),			// [0x392]
	MSW_ADDRESS_OF(time_factor.numerator),			// [0x393]
	LSW_ADDRESS_OF(time_factor.divisor),			// [0x394]
	MSW_ADDRESS_OF(time_factor.divisor),			// [0x395]
	LSW_ADDRESS_OF(pos_encoder.encoder_increments),	// [0x396]
	MSW_ADDRESS_OF(pos_encoder.encoder_increments),	// [0x397]
	LSW_ADDRESS_OF(pos_encoder.motor_revolutions),	// [0x398]
	MSW_ADDRESS_OF(pos_encoder.motor_revolutions),	// [0x399]
	LSW_ADDRESS_OF(feed_constant.numerator),		// [0x39a]
	MSW_ADDRESS_OF(feed_constant.numerator),		// [0x39b]
	LSW_ADDRESS_OF(master_settings),				// [0x39c]
	LSW_ADDRESS_OF(ext_ref_selection),				// [0x39d]
	LSW_ADDRESS_OF(save_config),					// [0x39e]
	LSW_ADDRESS_OF(homing_method),					// [0x39f]
	LSW_ADDRESS_OF(real_home_offset),				// [0x3a0]
	MSW_ADDRESS_OF(real_home_offset),				// [0x3a1]
	LSW_ADDRESS_OF(real_low_speed),					// [0x3a2]
	MSW_ADDRESS_OF(real_low_speed),					// [0x3a3]
	LSW_ADDRESS_OF(real_high_speed),				// [0x3a4]
	MSW_ADDRESS_OF(real_high_speed),				// [0x3a5]
	LSW_ADDRESS_OF(home_c_acc),						// [0x3a6]
	MSW_ADDRESS_OF(home_c_acc),						// [0x3a7]
	LSW_ADDRESS_OF(fdbk1_time_tr_txrx),				// [0x3a8]
	LSW_ADDRESS_OF(fdbk1_time_tr_rxtx),				// [0x3a9]
	LSW_ADDRESS_OF(fdbk2_time_tr_txrx),				// [0x3aa]
	LSW_ADDRESS_OF(fdbk2_time_tr_rxtx),				// [0x3ab]
	LSW_ADDRESS_OF(w_flag_can_buff),				// [0x3ac]
	LSW_ADDRESS_OF(der),							// [0x3ad]
	LSW_ADDRESS_OF(cam_ram_add),					// [0x3ae]
	LSW_ADDRESS_OF(cam_ram_st_add)					// [0x3af]
};

//#else MSB_ADDRESS_OF
/*************************************************************************
*	LEGACY MEMORY PAGE @ 800h
*************************************************************************/
void *p_tml_data_pg800[TML_DATA_TABLE_SIZE_PG800] __attribute__ ((aligned (4))) =
{
	LSW_ADDRESS_OF(linear_hall_1_raw),			// [0x800]
	LSW_ADDRESS_OF(linear_hall_2_raw),			// [0x801]
	LSW_ADDRESS_OF(t_rectangle),				// [0x802]
	LSW_ADDRESS_OF(hall_a_filt),				// [0x803]	// pos_comp_inc_mpy
	LSW_ADDRESS_OF(hall_b_filt),				// [0x804]
	LSW_ADDRESS_OF(fdbk1_qep_rev_counting),		// [0x805]	// kpq_low_speed
	LSW_ADDRESS_OF(kiq_low_speed),				// [0x806]
	LSW_ADDRESS_OF(pos_comp_inc),				// [0x807]	// counter_etod motionless_step
	LSW_ADDRESS_OF(final_position),				// [0x808]	//  cos_theta_min
	MSW_ADDRESS_OF(final_position),				// [0x809]
	LSW_ADDRESS_OF(final_angle),				// [0x80a]	// copy_of_nr_a
	LSW_ADDRESS_OF(t_mot),						// [0x80b]
	LSW_ADDRESS_OF(spdref_bq_ini),				// [0x80c]
	LSW_ADDRESS_OF(iqref_bq_ini),				// [0x80d]
	LSW_ADDRESS_OF(electric_pos_long),			// [0x80e]
	MSW_ADDRESS_OF(electric_pos_long),			// [0x80f]
	LSW_ADDRESS_OF(electric_pos_long_th),		// [0x810]
	MSW_ADDRESS_OF(electric_pos_long_th),		// [0x811]
	LSW_ADDRESS_OF(fdbk2_new_position),			// [0x812]
	LSW_ADDRESS_OF(fdbk2_old_position),			// [0x813]
	LSW_ADDRESS_OF(i2t_integral_limit),			// [0x814]
	MSW_ADDRESS_OF(i2t_integral_limit),			// [0x815]
	LSW_ADDRESS_OF(i2t_integral),				// [0x816]
	MSW_ADDRESS_OF(i2t_integral),				// [0x817]
	LSW_ADDRESS_OF(i_i2t_prot),					// [0x818]
	LSW_ADDRESS_OF(sf_i2t),						// [0x819]
	LSW_ADDRESS_OF(master_resolution),			// [0x81a]
	MSW_ADDRESS_OF(master_resolution),			// [0x81b]
	LSW_ADDRESS_OF(pos2),						// [0x81c]
	MSW_ADDRESS_OF(pos2),						// [0x81d]
	LSW_ADDRESS_OF(cap_pos2),					// [0x81e]
	MSW_ADDRESS_OF(cap_pos2),					// [0x81f]
	LSW_ADDRESS_OF(mspd),						// [0x820]
	LSW_ADDRESS_OF(pos2_inc),					// [0x821]
	LSW_ADDRESS_OF(lss_aar),					// [0x822]
	LSW_ADDRESS_OF(lss_active),					// [0x823]
	LSW_ADDRESS_OF(scibr_init),					// [0x824]
	LSW_ADDRESS_OF(tx_buf_free_index),			// [0x825]
	LSW_ADDRESS_OF(eg_correction),				// [0x826]
	MSW_ADDRESS_OF(eg_correction),				// [0x827]
	LSW_ADDRESS_OF(sum_eg_corr),				// [0x828]
	MSW_ADDRESS_OF(sum_eg_corr),				// [0x829]
	LSW_ADDRESS_OF(minc),						// [0x82a]
	MSW_ADDRESS_OF(minc),						// [0x82b]
	LSW_ADDRESS_OF(sinc),						// [0x82c]		|---- ---- ---- ----|---- ---- ---- ----|XXXX XXXX XXXX XXXX|
	(int32_t*)MSB_ADDRESS_OF(sinc),				// [0x82d]		|XXXX XXXX XXXX XXXX|XXXX XXXX XXXX XXXX|---- ---- ---- ----|
	(int16_t*)(MSB_ADDRESS_OF(sinc) + SIZEOF16),// [0x82e]		|XXXX XXXX XXXX XXXX|---- ---- ---- ----|---- ---- ---- ----|
	LSW_ADDRESS_OF(quick_stop_status),			// [0x82f]
	LSW_ADDRESS_OF(t_pi1),						// [0x830]
	MSW_ADDRESS_OF(t_pi1),						// [0x831]
	LSW_ADDRESS_OF(ls_active),					// [0x832]
	LSW_ADDRESS_OF(alpha2),						// [0x833]
	LSW_ADDRESS_OF(apos_rec),					// [0x834]
	MSW_ADDRESS_OF(apos_rec),					// [0x835]
	LSW_ADDRESS_OF(lsn_state),					// [0x836]
	LSW_ADDRESS_OF(lsp_state),					// [0x837]
	LSW_ADDRESS_OF(tpos_old),					// [0x838]
	MSW_ADDRESS_OF(tpos_old),					// [0x839]
	LSW_ADDRESS_OF(y_first),					// [0x83a]
	MSW_ADDRESS_OF(y_first),					// [0x83b]
	LSW_ADDRESS_OF(y_last),						// [0x83c]
	MSW_ADDRESS_OF(y_last),						// [0x83d]
	LSW_ADDRESS_OF(x1_1),						// [0x83e]
	MSW_ADDRESS_OF(x1_1),						// [0x83f]
	LSW_ADDRESS_OF(cam_flag),					// [0x840]
	LSW_ADDRESS_OF(ssi_nr_of_params),			// [0x841]
	LSW_ADDRESS_OF(ssi_type_of_fdbk),			// [0x842]	/* SSI = 1; BiSS = 2*/
	LSW_ADDRESS_OF(fdbk2_bits_st),				// [0x843]
	LSW_ADDRESS_OF(fdbk2_bits_mt),				// [0x844]
	LSW_ADDRESS_OF(fdbk2_is_gray_coded),		// [0x845]
	LSW_ADDRESS_OF(fdbk2_encoder_baudrate),		// [0x846]
	LSW_ADDRESS_OF(offset_pos_delta),			// [0x847]
	LSW_ADDRESS_OF(sin_speed_acq),				// [0x848]
	LSW_ADDRESS_OF(ssi_ccr_ini),				// [0x849]
	LSW_ADDRESS_OF(step_resolution_long),		// [0x84a]
	MSW_ADDRESS_OF(step_resolution_long),		// [0x84b]
	LSW_ADDRESS_OF(encoder_resolution_long),	// [0x84c]
	MSW_ADDRESS_OF(encoder_resolution_long),	// [0x84d]
	LSW_ADDRESS_OF(cos_speed_acq),				// [0x84e]
	LSW_ADDRESS_OF(u_a_ref_bkp),				// [0x84f]
	LSW_ADDRESS_OF(u_b_ref_bkp),				// [0x850]
	LSW_ADDRESS_OF(u_c_ref_bkp),				// [0x851]
	LSW_ADDRESS_OF(linear_hall_3_min),			// [0x852]
	LSW_ADDRESS_OF(linear_hall_3_coeff),		// [0x853]
	LSW_ADDRESS_OF(linear_hall_1_amplitude),	// [0x854]
	LSW_ADDRESS_OF(linear_hall_2_amplitude),	// [0x855]
	LSW_ADDRESS_OF(el_angle_fract),				// [0x856]
	LSW_ADDRESS_OF(upgrade),					// [0x857]	upgrade REGISTER
	LSW_ADDRESS_OF(c_dec),						// [0x858]
	MSW_ADDRESS_OF(c_dec),						// [0x859]
	LSW_ADDRESS_OF(cntrl_mode),					// [0x85a]
	LSW_ADDRESS_OF(write_index),				// [0x85b]
	LSW_ADDRESS_OF(read_index),					// [0x85c]
	LSW_ADDRESS_OF(free_index),					// [0x85d]
	LSW_ADDRESS_OF(first_pvt_point),			// [0x85e]
	LSW_ADDRESS_OF(cyclic_interpolation_active),// [0x85f]
	LSW_ADDRESS_OF(pvt_spd_1),					// [0x860]
	MSW_ADDRESS_OF(pvt_spd_1),					// [0x861]
	LSW_ADDRESS_OF(pvt_intgr_counter),			// [0x862]
	LSW_ADDRESS_OF(pvt_status),					// [0x863]
	LSW_ADDRESS_OF(pvt_buf_st_addr),			// [0x864]
	LSW_ADDRESS_OF(pvt_buf_len),				// [0x865]
	LSW_ADDRESS_OF(pvt_buf_rd),					// [0x866]
	LSW_ADDRESS_OF(pvt_buf_wr),					// [0x867]
	LSW_ADDRESS_OF(pvt_buf_crt_len),			// [0x868]
	LSW_ADDRESS_OF(pvt_setpvt_value),			// [0x869]
	LSW_ADDRESS_OF(pvt_pos0),					// [0x86a]
	MSW_ADDRESS_OF(pvt_pos0),					// [0x86b]
	LSW_ADDRESS_OF(pvt_pos1),					// [0x86c]
	MSW_ADDRESS_OF(pvt_pos1),					// [0x86d]
	LSW_ADDRESS_OF(pvt_n_buf_low),				// [0x86e]
	LSW_ADDRESS_OF(level_ad5),					// [0x86f]
	LSW_ADDRESS_OF(m_ref2),						// [0x870]
	MSW_ADDRESS_OF(m_ref2),						// [0x871]
	LSW_ADDRESS_OF(m_ref_1),					// [0x872]
	MSW_ADDRESS_OF(m_ref_1),					// [0x873]
	LSW_ADDRESS_OF(elpos_long),					// [0x874]
	MSW_ADDRESS_OF(elpos_long),					// [0x875]
	LSW_ADDRESS_OF(e_level_ad5),				// [0x876]
	LSW_ADDRESS_OF(delta_el_pos),				// [0x877]
	LSW_ADDRESS_OF(registration_active),		// [0x878]
	LSW_ADDRESS_OF(spd_err_prot),				// [0x879]
	LSW_ADDRESS_OF(spd_ton_err),				// [0x87a]
	LSW_ADDRESS_OF(i_beta),						// [0x87b]
	LSW_ADDRESS_OF(i2_filtered),				// [0x87c]
	LSW_ADDRESS_OF(adoffset_active),			// [0x87d]
	LSW_ADDRESS_OF(reg_dref),					// [0x87e]
	MSW_ADDRESS_OF(reg_dref),					// [0x87f]
	LSW_ADDRESS_OF(max_presc_val),				// [0x880]
	LSW_ADDRESS_OF(no_pulses),					// [0x881]	// hall_tr1
	LSW_ADDRESS_OF(hall_tr2),					// [0x882]	// hall_tr2
	LSW_ADDRESS_OF(qep_count_init),				// [0x883]
	LSW_ADDRESS_OF(read_pos_value),				// [0x884]
	LSW_ADDRESS_OF(change_spdctrl_lim),			// [0x885]
	LSW_ADDRESS_OF(time_old[0]),				// [0x886]
	LSW_ADDRESS_OF(time_old[1]),				// [0x887]
	LSW_ADDRESS_OF(ref_inc),					// [0x888]
	LSW_ADDRESS_OF(neg_mult_res),				// [0x889]
	LSW_ADDRESS_OF(sw_lim_neg),					// [0x88a]
	MSW_ADDRESS_OF(sw_lim_neg),					// [0x88b]
	LSW_ADDRESS_OF(sw_lim_pos),					// [0x88c]
	MSW_ADDRESS_OF(sw_lim_pos),					// [0x88d]
	LSW_ADDRESS_OF(ml_event_mask_2),			// [0x88e]
	LSW_ADDRESS_OF(slave_position),				// [0x88f]
	LSW_ADDRESS_OF(k_omega),					// [0x890]
	LSW_ADDRESS_OF(theta_filtered),				// [0x891]
	LSW_ADDRESS_OF(kp_tht),						// [0x892]
	LSW_ADDRESS_OF(ki_tht),						// [0x893]
	LSW_ADDRESS_OF(sh_p_tht),					// [0x894]
	LSW_ADDRESS_OF(sh_i_tht),					// [0x895]
	LSW_ADDRESS_OF(time_limit),					// [0x896]
	LSW_ADDRESS_OF(i_tht_l),					// [0x897]
	LSW_ADDRESS_OF(i_tht_h),					// [0x898]
	LSW_ADDRESS_OF(theta_tst),					// [0x899]
	LSW_ADDRESS_OF(execute_t_mode),				// [0x89a]
	LSW_ADDRESS_OF(i_q_test),					// [0x89b]
	LSW_ADDRESS_OF(angle_inc),					// [0x89c]
	LSW_ADDRESS_OF(time_elapsed),				// [0x89d]
	LSW_ADDRESS_OF(filt_a),						// [0x89e]
	MSW_ADDRESS_OF(filt_a),						// [0x89f]
	LSW_ADDRESS_OF(filt_b),						// [0x8a0]
	MSW_ADDRESS_OF(filt_b),						// [0x8a1]
	LSW_ADDRESS_OF(master_id2),					// [0x8a2]
	LSW_ADDRESS_OF(move_state),					// [0x8a3]
	LSW_ADDRESS_OF(start_position),				// [0x8a4]
	MSW_ADDRESS_OF(start_position),				// [0x8a5]
	LSW_ADDRESS_OF(first_position),				// [0x8a6]
	MSW_ADDRESS_OF(first_position),				// [0x8a7]
	LSW_ADDRESS_OF(init_angle),					// [0x8a8]
	LSW_ADDRESS_OF(stepper_standby_current),	// [0x8a9]
	LSW_ADDRESS_OF(digin_mask_long),			// [0x8aa]
	MSW_ADDRESS_OF(digin_mask_long),			// [0x8ab]
	LSW_ADDRESS_OF(homing_current),				// [0x8ac]
	LSW_ADDRESS_OF(homing_time),				// [0x8ad]
	LSW_ADDRESS_OF(ena_pin_info),				// [0x8ae]
	LSW_ADDRESS_OF(analogue_reference),			// [0x8af]
	LSW_ADDRESS_OF(dtmin),						// [0x8b0]
	MSW_ADDRESS_OF(dtmin),						// [0x8b1]
	LSW_ADDRESS_OF(dtmax),						// [0x8b2]
	MSW_ADDRESS_OF(dtmax),						// [0x8b3]
	LSW_ADDRESS_OF(speed_scaling_factor),		// [0x8b4]
	MSW_ADDRESS_OF(speed_scaling_factor),		// [0x8b5]
	LSW_ADDRESS_OF(endat_temp2),				// [0x8b6]
	MSW_ADDRESS_OF(endat_temp2),				// [0x8b7]
	LSW_ADDRESS_OF(spd_est),					// [0x8b8]
	LSW_ADDRESS_OF(vm_temp2),					// [0x8b9]
	LSW_ADDRESS_OF(endat_temp),					// [0x8ba]
	LSW_ADDRESS_OF(host_address),				// [0x8bb]
	LSW_ADDRESS_OF(r_shift),					// [0x8bc]
	LSW_ADDRESS_OF(u_ri_scaling),				// [0x8bd]
	LSW_ADDRESS_OF(u_ri_shift),					// [0x8be]
	LSW_ADDRESS_OF(speed_u_ri),					// [0x8bf]
	LSW_ADDRESS_OF(time_lim),					// [0x8c0]
	LSW_ADDRESS_OF(speed_ns),					// [0x8c1]
	LSW_ADDRESS_OF(al_status),					// [0x8c2]
	LSW_ADDRESS_OF(d_i_q),						// [0x8c3]
	LSW_ADDRESS_OF(l_scaling),					// [0x8c4]
	LSW_ADDRESS_OF(l_shift),					// [0x8c5]
	LSW_ADDRESS_OF(spd_err_long),				// [0x8c6]
	MSW_ADDRESS_OF(spd_err_long),				// [0x8c7]
	LSW_ADDRESS_OF(enc_margin),					// [0x8c8]		// theta_hall
	MSW_ADDRESS_OF(enc_margin),					// [0x8c9]		// theta_inc_hall
	LSW_ADDRESS_OF(endat_no_rev),				// [0x8ca]
	LSW_ADDRESS_OF(bldc_sin),					// [0x8cb]
	LSW_ADDRESS_OF(endat_fract),				// [0x8cc]
	LSW_ADDRESS_OF(endat_res),					// [0x8cd]
	LSW_ADDRESS_OF(pos_delta_t),				// [0x8ce]
	LSW_ADDRESS_OF(offset_detect),				// [0x8cf]
	LSW_ADDRESS_OF(debug),						// [0x8d0]
	LSW_ADDRESS_OF(jerk0_int),					// [0x8d1]
	LSW_ADDRESS_OF(time_jerk),					// [0x8d2]
	MSW_ADDRESS_OF(time_jerk),					// [0x8d3]
	LSW_ADDRESS_OF(time_2),						// [0x8d4]
	MSW_ADDRESS_OF(time_2),						// [0x8d5]
	LSW_ADDRESS_OF(time_4),						// [0x8d6]
	MSW_ADDRESS_OF(time_4),						// [0x8d7]
	LSW_ADDRESS_OF(nlines_el_rev),				// [0x8d8]		//nlines_el_rev_or_c_spd_t
	LSW_ADDRESS_OF(cqep2theta),					// [0x8d9]		//cqep2theta_or_sh_c_spd_t
	(double*)&sc_acc,							// [0x8da]
	(double*)&sc_acc,							// [0x8db]
	(double*)&sc_spd,							// [0x8dc]
	(double*)&sc_spd,							// [0x8dd]
	LSW_ADDRESS_OF(c_ref_final),				// [0x8de]
	MSW_ADDRESS_OF(c_ref_final),				// [0x8df]
	LSW_ADDRESS_OF(interpolation_counter),		// [0x8e0]
	MSW_ADDRESS_OF(interpolation_counter),		// [0x8e1]
	LSW_ADDRESS_OF(interpolation_period),		// [0x8e2]
	MSW_ADDRESS_OF(interpolation_period),		// [0x8e3]
	LSW_ADDRESS_OF(jerk_int),					// [0x8e4]
	LSW_ADDRESS_OF(jerk2_int),					// [0x8e5]
	LSW_ADDRESS_OF(c_ref_1),					// [0x8e6]
	MSW_ADDRESS_OF(c_ref_1),					// [0x8e7]
	LSW_ADDRESS_OF(jerk6_fr),					// [0x8e8]
	MSW_ADDRESS_OF(jerk6_fr),					// [0x8e9]
	LSW_ADDRESS_OF(sc_seg_time),				// [0x8ea]
	MSW_ADDRESS_OF(sc_seg_time),				// [0x8eb]
	LSW_ADDRESS_OF(const_1_6),					// [0x8ec]
	MSW_ADDRESS_OF(const_1_6),					// [0x8ed]
	LSW_ADDRESS_OF(sc_c_pos),					// [0x8ee]
	MSW_ADDRESS_OF(sc_c_pos),					// [0x8ef]
	LSW_ADDRESS_OF(jerk6_int),					// [0x8f0]
	LSW_ADDRESS_OF(sincos_oversampling),		// [0x8f1]
	LSW_ADDRESS_OF(linhalls_oversampling),		// [0x8f2]
	LSW_ADDRESS_OF(currents_oversampling),		// [0x8f3]
	LSW_ADDRESS_OF(motor_digital_halls),		// [0x8f4]
	LSW_ADDRESS_OF(adc_trigger_offset),			// [0x8f5]
	LSW_ADDRESS_OF(value_ram),					// [0x8f6]
	LSW_ADDRESS_OF(size_eng),					// [0x8f7]
	LSW_ADDRESS_OF(cmpa),						// [0x8f8]	//checksum_st
	LSW_ADDRESS_OF(cmpb),						// [0x8f9]	//valid_table
	LSW_ADDRESS_OF(cmpc),						// [0x8fa]	//table_sa
	LSW_ADDRESS_OF(cmpd),						// [0x8fb]	//checksum_e2rom
	LSW_ADDRESS_OF(mer),						// [0x8fc]
	LSW_ADDRESS_OF(reg_t_pif),					// [0x8fd]
	LSW_ADDRESS_OF(reg_t_pi),					// [0x8fe]
	MSW_ADDRESS_OF(reg_t_pi),					// [0x8ff]
	LSW_ADDRESS_OF(wd_reset),					// [0x900]
	LSW_ADDRESS_OF(dref_fr),					// [0x901]
	LSW_ADDRESS_OF(cam_input),					// [0x902]
	MSW_ADDRESS_OF(cam_input),					// [0x903]
	LSW_ADDRESS_OF(cam_x_scf),					// [0x904]
	MSW_ADDRESS_OF(cam_x_scf),					// [0x905]
	LSW_ADDRESS_OF(cam_y_scf),					// [0x906]
	MSW_ADDRESS_OF(cam_y_scf),					// [0x907]
	LSW_ADDRESS_OF(digin_status),				// [0x908]
	LSW_ADDRESS_OF(srl_1),						// [0x909]
	LSW_ADDRESS_OF(digin_inversion_mask),		// [0x90a]
	LSW_ADDRESS_OF(digout_inversion_mask),		// [0x90b]
	LSW_ADDRESS_OF(digin_active_level),			// [0x90c]
	LSW_ADDRESS_OF(first_start_bldc),			// [0x90d]
	LSW_ADDRESS_OF(srl),						// [0x90e]
	LSW_ADDRESS_OF(srh),						// [0x90f]
	LSW_ADDRESS_OF(inside_pos_window),			// [0x910]
	LSW_ADDRESS_OF(srh_int),					// [0x911]
	LSW_ADDRESS_OF(acr),						// [0x912]
	LSW_ADDRESS_OF(aar_table),					// [0x913]
	LSW_ADDRESS_OF(flag_tml_instruction),		// [0x914]
	LSW_ADDRESS_OF(sat_val_cmp_ini),			// [0x915]
	LSW_ADDRESS_OF(fdbk2_qep_rev_counting),		// [0x916]
	LSW_ADDRESS_OF(sincos_fract_ld),			// [0x917]
	LSW_ADDRESS_OF(qual_bq2),					// [0x918]
	MSW_ADDRESS_OF(qual_bq2),					// [0x919]
	LSW_ADDRESS_OF(postrigg_1),					// [0x91a]
	MSW_ADDRESS_OF(postrigg_1),					// [0x91b]
	LSW_ADDRESS_OF(postrigg_2),					// [0x91c]
	MSW_ADDRESS_OF(postrigg_2),					// [0x91d]
	LSW_ADDRESS_OF(postrigg_3),					// [0x91e]
	MSW_ADDRESS_OF(postrigg_3),					// [0x91f]
	LSW_ADDRESS_OF(postrigg_4),					// [0x920]
	MSW_ADDRESS_OF(postrigg_4),					// [0x921]
	LSW_ADDRESS_OF(cmpb_inin),					// [0x922]
	LSW_ADDRESS_OF(checksum_eng_for_save),		// [0x923]
	LSW_ADDRESS_OF(table_configuration_id),		// [0x924]
	LSW_ADDRESS_OF(checksum_save),				// [0x925]
	LSW_ADDRESS_OF(enable_off),					// [0x926]
	LSW_ADDRESS_OF(master_id),					// [0x927]
	LSW_ADDRESS_OF(cbr_table),					// [0x928]
	LSW_ADDRESS_OF(flag_msg_send),				// [0x929]
	LSW_ADDRESS_OF(send_ack),					// [0x92a]
	LSW_ADDRESS_OF(disable_send_pvtsts),		// [0x92b]
	LSW_ADDRESS_OF(crt_seg_pvt_spd),			// [0x92c]
	MSW_ADDRESS_OF(crt_seg_pvt_spd),			// [0x92d]
	LSW_ADDRESS_OF(sync_error),					// [0x92e]
	MSW_ADDRESS_OF(sync_error),					// [0x92f]
	LSW_ADDRESS_OF(original_pwm_period),		// [0x930]
	LSW_ADDRESS_OF(sync_margin),				// [0x931]
	LSW_ADDRESS_OF(sync_rate),					// [0x932]
	LSW_ADDRESS_OF(sync_increment),				// [0x933]
	LSW_ADDRESS_OF(master_time),				// [0x934]
	MSW_ADDRESS_OF(master_time),				// [0x935]
	LSW_ADDRESS_OF(master_time_1),				// [0x936]
	MSW_ADDRESS_OF(master_time_1),				// [0x937]
	LSW_ADDRESS_OF(master_offset_time),			// [0x938]
	MSW_ADDRESS_OF(master_offset_time),			// [0x939]
	LSW_ADDRESS_OF(slave_offset_time),			// [0x93a]
	MSW_ADDRESS_OF(slave_offset_time),			// [0x93b]
	LSW_ADDRESS_OF(slave_base_time),			// [0x93c]
	MSW_ADDRESS_OF(slave_base_time),			// [0x93d]
	LSW_ADDRESS_OF(t1pr_old),					// [0x93e]
	LSW_ADDRESS_OF(sync_status),				// [0x93f]
	LSW_ADDRESS_OF(absolute_position_fdbk2),	// [0x940]
	MSW_ADDRESS_OF(absolute_position_fdbk2),	// [0x941]
	LSW_ADDRESS_OF(master_offset_modulo),		// [0x942]
	MSW_ADDRESS_OF(master_offset_modulo),		// [0x943]
	LSW_ADDRESS_OF(rg_sampling),				// [0x944]
	MSW_ADDRESS_OF(rg_sampling),				// [0x945]
	LSW_ADDRESS_OF(t1cnt_buf),					// [0x946]
	LSW_ADDRESS_OF(offset_sync),				// [0x947]
	LSW_ADDRESS_OF(sync_on_fast),				// [0x948]
	LSW_ADDRESS_OF(absolute_time_rem),			// [0x949]
	LSW_ADDRESS_OF(slave_base_time_stop),		// [0x94a]
	MSW_ADDRESS_OF(slave_base_time_stop),		// [0x94b]
	LSW_ADDRESS_OF(axis_absolute_time),			// [0x94c]
	MSW_ADDRESS_OF(axis_absolute_time), 		// [0x94d]
	LSW_ADDRESS_OF(sync_cycle),					// [0x94e]
	MSW_ADDRESS_OF(sync_cycle),					// [0x94f]
	LSW_ADDRESS_OF(ml_time_sync),				// [0x950]
	MSW_ADDRESS_OF(ml_time_sync),				// [0x951]
	LSW_ADDRESS_OF(send_master_offset),			// [0x952]
	LSW_ADDRESS_OF(ki_spd_est),					// [0x953]
	LSW_ADDRESS_OF(master_increment_inst),		// [0x954]
	MSW_ADDRESS_OF(master_increment_inst),		// [0x955]
	LSW_ADDRESS_OF(pos_2theta_filt),			// [0x956]
	MSW_ADDRESS_OF(pos_2theta_filt),			// [0x957]
	LSW_ADDRESS_OF(target_position_1),			// [0x958]
	MSW_ADDRESS_OF(target_position_1),			// [0x959]
	LSW_ADDRESS_OF(target_position_fast),		// [0x95a]
	MSW_ADDRESS_OF(target_position_fast),		// [0x95b]
	LSW_ADDRESS_OF(kp_spd_est),					// [0x95c]
	LSW_ADDRESS_OF(est_spd),					// [0x95d]
	LSW_ADDRESS_OF(int_spd_est),				// [0x95e]
	MSW_ADDRESS_OF(int_spd_est),				// [0x95f]
	LSW_ADDRESS_OF(pos_2theta_p),				// [0x960]
	LSW_ADDRESS_OF(pulse_dir_initialized),		// [0x961]
	LSW_ADDRESS_OF(srlh_mask),					// [0x962]
	LSW_ADDRESS_OF(srh_mask),					// [0x963]
	LSW_ADDRESS_OF(mer_1),						// [0x964]
	LSW_ADDRESS_OF(mer_mask),					// [0x965]
	LSW_ADDRESS_OF(digin_status_1),				// [0x966]
	LSW_ADDRESS_OF(digin_status_mask),			// [0x967]
	LSW_ADDRESS_OF(srh_1),						// [0x968]
	LSW_ADDRESS_OF(k_uphase),					// [0x969]
	LSW_ADDRESS_OF(disable_sol_cor),			// [0x96a]
	LSW_ADDRESS_OF(timeout_reached),			// [0x96b]
	LSW_ADDRESS_OF(wait_time32),				// [0x96c]
	MSW_ADDRESS_OF(wait_time32),				// [0x96d]
	LSW_ADDRESS_OF(apos_monitor),				// [0x96e]
	MSW_ADDRESS_OF(apos_monitor),				// [0x96f]
	LSW_ADDRESS_OF(monitor_speed),				// [0x970]
	MSW_ADDRESS_OF(monitor_speed),				// [0x971]
	LSW_ADDRESS_OF(time_1),						// [0x972]
	MSW_ADDRESS_OF(time_1),						// [0x973]
	LSW_ADDRESS_OF(time_2),						// [0x974]
	MSW_ADDRESS_OF(time_2),						// [0x975]
	LSW_ADDRESS_OF(feedback_error_register),	// [0x976]
	LSW_ADDRESS_OF(skip_can_msg),				// [0x977]
	LSW_ADDRESS_OF(skip_can_msg_value),			// [0x978]
	LSW_ADDRESS_OF(var_i3),						// [0x979]
	LSW_ADDRESS_OF(i2t_integral_drive),			// [0x97a]
	MSW_ADDRESS_OF(i2t_integral_drive),			// [0x97b]
	LSW_ADDRESS_OF(i2t_integral_warning_drive),	// [0x97c]
	LSW_ADDRESS_OF(port_iocr),					// [0x97d]		
	LSW_ADDRESS_OF(interpolation_time_val),		// [0x97e]
	LSW_ADDRESS_OF(interpolation_time_index),	// [0x97f]
	LSW_ADDRESS_OF(i2t_integral_limit_drive),	// [0x980]
	MSW_ADDRESS_OF(i2t_integral_limit_drive),	// [0x981]
	LSW_ADDRESS_OF(i_q_ref_filt_ct),			// [0x982]
	LSW_ADDRESS_OF(tml_int_period),				// [0x983]
	LSW_ADDRESS_OF(ecam_init_pos),				// [0x984]
	MSW_ADDRESS_OF(ecam_init_pos),				// [0x985]
	LSW_ADDRESS_OF(i_i2tprot_drive),			// [0x986]
	LSW_ADDRESS_OF(i_q_ref_filtered),			// [0x987]
	LSW_ADDRESS_OF(apos_mot),					// [0x988]
	MSW_ADDRESS_OF(apos_mot),					// [0x989]
	LSW_ADDRESS_OF(load_speed),					// [0x98a]
	MSW_ADDRESS_OF(load_speed),					// [0x98b]
	LSW_ADDRESS_OF(sf_i2t_drive),				// [0x98c]
	LSW_ADDRESS_OF(v_log),						// [0x98d]		//DC logic supply
	LSW_ADDRESS_OF(i_q_ref_temp),				// [0x98e]
	LSW_ADDRESS_OF(k_spd_err),					// [0x98f]
	LSW_ADDRESS_OF(fdbk1_missing_threshold),		// [0x990]
	LSW_ADDRESS_OF(fdbk2_missing_threshold),		// [0x991]
	LSW_ADDRESS_OF(homepos),					// [0x992]
	MSW_ADDRESS_OF(homepos),					// [0x993]
	LSW_ADDRESS_OF(homespd),					// [0x994]
	MSW_ADDRESS_OF(homespd),					// [0x995]
	LSW_ADDRESS_OF(flag_ping),					// [0x996]
	LSW_ADDRESS_OF(adc_reference_unfiltered),	// [0x997]
	LSW_ADDRESS_OF(execute_autotuning_st_addr),	// [0x998]
	LSW_ADDRESS_OF(adc_10reference_offset),		// [0x999]
	LSW_ADDRESS_OF(adc_10feedback_offset),		// [0x99a]
	LSW_ADDRESS_OF(var_filtered),				// [0x99b]
	LSW_ADDRESS_OF(var_filt_ct),				// [0x99c]
	LSW_ADDRESS_OF(p_plot_var),					// [0x99d]
	LSW_ADDRESS_OF(avg_refhigh_value),			// [0x99e]		XXX free spot NOT USED
	LSW_ADDRESS_OF(checksum_read),				// [0x99f]
	LSW_ADDRESS_OF(checksum_address),			// [0x9a0]
	MSW_ADDRESS_OF(checksum_address),			// [0x9a1]
	LSW_ADDRESS_OF(encoder_type_motor),			// [0x9a2]
	LSW_ADDRESS_OF(encoder_type_load),			// [0x9a3]
	LSW_ADDRESS_OF(encoder_status_fdbk1),		// [0x9a4]
	LSW_ADDRESS_OF(encoder_status_fdbk2),		// [0x9a5]
	LSW_ADDRESS_OF(encoder_command_fdbk1),		// [0x9a6]
	LSW_ADDRESS_OF(encoder_command_fdbk2),		// [0x9a7]
	LSW_ADDRESS_OF(rw_config_register),			// [0x9a8]
	MSW_ADDRESS_OF(rw_config_register),			// [0x9a9]
	LSW_ADDRESS_OF(data_to_write),				// [0x9aa]
	MSW_ADDRESS_OF(data_to_write),				// [0x9ab]
	LSW_ADDRESS_OF(data_to_read),				// [0x9ac]
	MSW_ADDRESS_OF(data_to_read),				// [0x9ad]
	LSW_ADDRESS_OF(write_data_address),			// [0x9ae]
	MSW_ADDRESS_OF(write_data_address),			// [0x9af]
	LSW_ADDRESS_OF(tml_fct),					// [0x9b0]
	LSW_ADDRESS_OF(x6040_control_word),			// [0x9b1]		// former control_word
	LSW_ADDRESS_OF(x6040_control_word_1),		// [0x9b2]
	LSW_ADDRESS_OF(tml_tr),						// [0x9b3]		XXX free spot NOT USED
	LSW_ADDRESS_OF(modes_of_operation),			// [0x9b4]
	LSW_ADDRESS_OF(modes_of_operation_display),	// [0x9b5]
	LSW_ADDRESS_OF(current_scale_type),			// [0x9b6]
	LSW_ADDRESS_OF(homing_nr),					// [0x9b7]
	LSW_ADDRESS_OF(digout_status),				// [0x9b8]
	LSW_ADDRESS_OF(select_can_mode),			// [0x9b9]
	LSW_ADDRESS_OF(pos_err_long),				// [0x9ba]
	MSW_ADDRESS_OF(pos_err_long),				// [0x9bb]
	LSW_ADDRESS_OF(motion_profile_type),		// [0x9bc]
	LSW_ADDRESS_OF(cam_e2rom_load_address),		// [0x9bd]
	LSW_ADDRESS_OF(non_compare_event_ctrl),		// [0x9be]		XXX free spot NOT USED
	LSW_ADDRESS_OF(execute_main_tml),			// [0x9bf]
	LSW_ADDRESS_OF(init_tables_p),				// [0x9c0]
	LSW_ADDRESS_OF(start_address_h),			// [0x9c1]
	LSW_ADDRESS_OF(tml_sw_ver),					// [0x9c2]
	MSW_ADDRESS_OF(tml_sw_ver),					// [0x9c3]
	LSW_ADDRESS_OF(copy_of_digin_status),		// [0x9c4]
	LSW_ADDRESS_OF(copy_of_mer),				// [0x9c5]
	LSW_ADDRESS_OF(status_ds402_2),				// [0x9c6]
	LSW_ADDRESS_OF(cop_1s_timer),				// [0x9c7]
	LSW_ADDRESS_OF(start_address_tr),			// [0x9c8]
	LSW_ADDRESS_OF(start_address_fct),			// [0x9c9]
	LSW_ADDRESS_OF(input_cfg_3_0[0]),			// [0x9ca]		XXX free spot NOT USED
	MSW_ADDRESS_OF(input_cfg_3_0[0]),			// [0x9cb]		XXX free spot NOT USED
	LSW_ADDRESS_OF(input_cfg_7_4),				// [0x9cc]		XXX free spot NOT USED
	MSW_ADDRESS_OF(input_cfg_7_4),				// [0x9cd]		XXX free spot NOT USED
	LSW_ADDRESS_OF(input_cfg_11_8),				// [0x9ce]		XXX free spot NOT USED
	MSW_ADDRESS_OF(input_cfg_11_8),				// [0x9cf]		XXX free spot NOT USED
	LSW_ADDRESS_OF(input_cfg_15_12),			// [0x9d0]		XXX free spot NOT USED
	MSW_ADDRESS_OF(input_cfg_15_12),			// [0x9d1]		XXX free spot NOT USED
	LSW_ADDRESS_OF(output_cfg_3_0),				// [0x9d2]		XXX free spot NOT USED
	MSW_ADDRESS_OF(output_cfg_3_0),				// [0x9d3]		XXX free spot NOT USED
	LSW_ADDRESS_OF(output_cfg_7_4),				// [0x9d4]		XXX free spot NOT USED
	MSW_ADDRESS_OF(output_cfg_7_4),				// [0x9d5]		XXX free spot NOT USED
	LSW_ADDRESS_OF(output_cfg_11_8),			// [0x9d6]		XXX free spot NOT USED
	MSW_ADDRESS_OF(output_cfg_11_8),			// [0x9d7]		XXX free spot NOT USED
	LSW_ADDRESS_OF(output_cfg_15_12),			// [0x9d8]		XXX free spot NOT USED
	MSW_ADDRESS_OF(output_cfg_15_12),			// [0x9d9]		XXX free spot NOT USED
	LSW_ADDRESS_OF(real_c_pos),					// [0x9da]
	MSW_ADDRESS_OF(real_c_pos),					// [0x9db]
	LSW_ADDRESS_OF(adc_feedback),				// [0x9dc]
	LSW_ADDRESS_OF(ad2_filt_ct),				// [0x9dd]
	LSW_ADDRESS_OF(aspd_bq_ini),				// [0x9de]
	MSW_ADDRESS_OF(null_padding_variable),		// [0x9df]		XXX free spot
	LSW_ADDRESS_OF(err_prot_long),				// [0x9e0]
	MSW_ADDRESS_OF(err_prot_long),				// [0x9e1]
	LSW_ADDRESS_OF(real_pos),					// [0x9e2]
	MSW_ADDRESS_OF(real_pos),					// [0x9e3]
	LSW_ADDRESS_OF(status_ds402),				// [0x9e4]
	LSW_ADDRESS_OF(monitor_new_position),		// [0x9e5]
	MSW_ADDRESS_OF(monitor_new_position),		// [0x9e6]
	LSW_ADDRESS_OF(interpolation_submode_select),// [0x9e7]
	LSW_ADDRESS_OF(status_ds402_1),				// [0x9e8]
	LSW_ADDRESS_OF(special_ios_position),		// [0x9e9]		XXX free spot NOT USED
	LSW_ADDRESS_OF(target_c_spd),				// [0x9ea]
	MSW_ADDRESS_OF(target_c_spd),				// [0x9eb]
	LSW_ADDRESS_OF(flag_stop_pvt_pt),			// [0x9ec]
	LSW_ADDRESS_OF(adc_linear_hall_3),			// [0x9ed]
	LSW_ADDRESS_OF(srh_srl),					// [0x9ee]
	MSW_ADDRESS_OF(srh_srl),					// [0x9ef]
	LSW_ADDRESS_OF(comm_error_option_code),		// [0x9f0]
	LSW_ADDRESS_OF(fault_reaction_option_code),	// [0x9f1]
	LSW_ADDRESS_OF(real_c_dec),					// [0x9f2]
	MSW_ADDRESS_OF(real_c_dec),					// [0x9f3]
	LSW_ADDRESS_OF(at_ref_index),				// [0x9f4]
	LSW_ADDRESS_OF(atr),						// [0x9f5]
	LSW_ADDRESS_OF(at_ref_start_addr),			// [0x9f6]
	LSW_ADDRESS_OF(at_ref_max_points),			// [0x9f7]
	LSW_ADDRESS_OF(sto_hw_err_timeout),			// [0x9f8]
	LSW_ADDRESS_OF(brake_apply_delay),			// [0x9f9]
	LSW_ADDRESS_OF(brake_release_delay),		// [0x9fa]
	LSW_ADDRESS_OF(apply_torque),				// [0x9fb]
	LSW_ADDRESS_OF(err_min_fc),					// [0x9fc]
	LSW_ADDRESS_OF(ton_err_min_fc),				// [0x9fd]
	LSW_ADDRESS_OF(contor_err_min_fc),			// [0x9fe]
	LSW_ADDRESS_OF(fdbk2_powerup_timeout)		// [0x9ff]
};



/*************************************************************************
*	MC5 MEMORY PAGE @ A000h
*************************************************************************/
void *p_tml_data_pga000[TML_DATA_TABLE_SIZE_PGA000] __attribute__ ((aligned (4))) =
{
		LSW_ADDRESS_OF(min_pos_range),				// [0xA000]	//AF00
		MSW_ADDRESS_OF(min_pos_range),				// [0xA001]
		LSW_ADDRESS_OF(max_pos_range),				// [0xA002]
		MSW_ADDRESS_OF(max_pos_range),				// [0xA003]
		LSW_ADDRESS_OF(pos_range_defined),			// [0xA004]
		LSW_ADDRESS_OF(pos_opt_code),				// [0xA005]
		LSW_ADDRESS_OF(fdbk2_bits_ign_st),			// [0xA006]
		LSW_ADDRESS_OF(fdbk2_bits_ign_mt),			// [0xA007]
		LSW_ADDRESS_OF(target_position_4_plot),		// [0xA008]
		MSW_ADDRESS_OF(target_position_4_plot),		// [0xA009]
		LSW_ADDRESS_OF(polarity),					// [0xA00A]
		LSW_ADDRESS_OF(linear_hall_3_raw),			// [0xA00B]
		LSW_ADDRESS_OF(device_identity.firmware_name),	// [0xA00C]
		MSW_ADDRESS_OF(device_identity.firmware_name),	// [0xA00D]
		LSW_ADDRESS_OF(serial_number),				// [0xA00E]
		MSW_ADDRESS_OF(serial_number),				// [0xA00F]
		LSW_ADDRESS_OF(bq_mask),					// [0xA010]
		LSW_ADDRESS_OF(new_int_sat),				// [0xA011]
		LSW_ADDRESS_OF(sin_offset),					// [0xA012]
		LSW_ADDRESS_OF(cos_offset),					// [0xA013]
		LSW_ADDRESS_OF(sin_gain),					// [0xA014]
		LSW_ADDRESS_OF(cos_gain),					// [0xA015]
		LSW_ADDRESS_OF(sineps),						// [0xA016]
		LSW_ADDRESS_OF(coseps),						// [0xA017]
		LSW_ADDRESS_OF(flag_filt),					// [0xA018]
		LSW_ADDRESS_OF(encpulses_limit),			// [0xA019]
		LSW_ADDRESS_OF(a1_spd_est_bq_f),			// [0xA01A]
		MSW_ADDRESS_OF(a1_spd_est_bq_f),			// [0xA01B]
		LSW_ADDRESS_OF(a2_spd_est_bq_f),			// [0xA01C]
		MSW_ADDRESS_OF(a2_spd_est_bq_f),			// [0xA01D]
		LSW_ADDRESS_OF(b0_spd_est_bq_f),			// [0xA01E]
		MSW_ADDRESS_OF(b0_spd_est_bq_f),			// [0xA01F]
		LSW_ADDRESS_OF(b1_spd_est_bq_f),			// [0xA020]
		MSW_ADDRESS_OF(b1_spd_est_bq_f),			// [0xA021]
		LSW_ADDRESS_OF(b2_spd_est_bq_f),			// [0xA022]
		MSW_ADDRESS_OF(b2_spd_est_bq_f),			// [0xA023]
		LSW_ADDRESS_OF(rev_spd_ampl),				// [0xA024]
		LSW_ADDRESS_OF(white_noise),				// [0xA025]
		LSW_ADDRESS_OF(i_q_ref_slow),				// [0xA026]
		LSW_ADDRESS_OF(pos_err_abs_val),			// [0xA027]
		LSW_ADDRESS_OF(biss_small_timeout),			// [0xA028]
		LSW_ADDRESS_OF(new_impl_pos_ssi),			// [0xA029]
		LSW_ADDRESS_OF(spd_bdac_min),				// [0xA02A]
		MSW_ADDRESS_OF(spd_bdac_min),				// [0xA02B]
		LSW_ADDRESS_OF(spd_bdac_max),				// [0xA02C]
		MSW_ADDRESS_OF(spd_bdac_max),				// [0xA02D]
		LSW_ADDRESS_OF(pos_hall_off_temp),			// [0xA02E]
		LSW_ADDRESS_OF(gs_index_ct),				// [0xA02F] //AF2F
		LSW_ADDRESS_OF(gs_index_filt),				// [0xA030]
		LSW_ADDRESS_OF(gs_index_no_filt),			// [0xA031]
		LSW_ADDRESS_OF(pos_bldc),					// [0xA032]
		MSW_ADDRESS_OF(pos_bldc),					// [0xA033]
		LSW_ADDRESS_OF(spdsinacqslow_corrected),	// [0xA034]
		LSW_ADDRESS_OF(spdcosacqslow_corrected),	// [0xA035]
		LSW_ADDRESS_OF(coeff_d_pos),				// [0xA036]
		LSW_ADDRESS_OF(max_spd_dualuse),			// [0xA037]
		LSW_ADDRESS_OF(hall_max_spd_dualuse),		// [0xA038]
		LSW_ADDRESS_OF(high_spd_loop_counter),		// [0xA039]
		LSW_ADDRESS_OF(high_Spd_limit),				// [0xA03A]
		MSW_ADDRESS_OF(high_Spd_limit),				// [0xA03B]
		LSW_ADDRESS_OF(low_Spd_limit),				// [0xA03C]
		MSW_ADDRESS_OF(low_Spd_limit),				// [0xA03D]
		LSW_ADDRESS_OF(low_spd_loop_counter),		// [0xA03E]
		LSW_ADDRESS_OF(special_ios_status),			// [0xA03F]	//AF3F
		LSW_ADDRESS_OF(gs_index),					// [0xA040]	//B7C0
		LSW_ADDRESS_OF(gs_index_1),					// [0xA041]
		LSW_ADDRESS_OF(gs_counter),					// [0xA042]
		LSW_ADDRESS_OF(gs_crt_addr),				// [0xA043]
		LSW_ADDRESS_OF(p_gs_param),					// [0xA044]
		MSW_ADDRESS_OF(p_gs_param),					// [0xA045]
		LSW_ADDRESS_OF(p_gs_data),					// [0xA046]
		MSW_ADDRESS_OF(p_gs_data),					// [0xA047]
		LSW_ADDRESS_OF(p_gs_table),					// [0xA048]
		MSW_ADDRESS_OF(p_gs_table),					// [0xA049]
		LSW_ADDRESS_OF(gs_error),					// [0xA04A]
		LSW_ADDRESS_OF(gs_best_settling_type),		// [0xA04B]
		LSW_ADDRESS_OF(gs_speed),					// [0xA04C]
		MSW_ADDRESS_OF(gs_speed),					// [0xA04D]
		LSW_ADDRESS_OF(p_gs_trig),					// [0xA04E]
		MSW_ADDRESS_OF(p_gs_trig),					// [0xA04F]
		LSW_ADDRESS_OF(gs_i_min),					// [0xA050]
		LSW_ADDRESS_OF(gs_i_max),					// [0xA051]
		LSW_ADDRESS_OF(gs_value_1),					// [0xA052]
		MSW_ADDRESS_OF(gs_value_1),					// [0xA053]
		LSW_ADDRESS_OF(gs_steps),					// [0xA054]
		LSW_ADDRESS_OF(gs_man_1),					// [0xA055]
		LSW_ADDRESS_OF(null_padding_variable),		// [0xA056]
		LSW_ADDRESS_OF(gs_trig_addr),				// [0xA057]
		LSW_ADDRESS_OF(gs_trig_value),				// [0xA058]
		MSW_ADDRESS_OF(gs_trig_value),				// [0xA059]
		LSW_ADDRESS_OF(gs_trig_value_1),			// [0xA05A]
		MSW_ADDRESS_OF(gs_trig_value_1),			// [0xA05B]
		LSW_ADDRESS_OF(gs_k_poserr),				// [0xA05C]
		LSW_ADDRESS_OF(cam_offset),					// [0xA05D]
		MSW_ADDRESS_OF(cam_offset),					// [0xA05E]
		LSW_ADDRESS_OF(real_tonimax),				// [0xA05F]
		LSW_ADDRESS_OF(gs_start_addr),				// [0xA060]
		LSW_ADDRESS_OF(gs_max_elem),				// [0xA061]
		LSW_ADDRESS_OF(gs_words),					// [0xA062]
		LSW_ADDRESS_OF(gs_type),					// [0xA063]
		LSW_ADDRESS_OF(gs_man),						// [0xA064]
		LSW_ADDRESS_OF(gs_time),					// [0xA065]
		LSW_ADDRESS_OF(gs_param[0]),						// [0xA066]
		LSW_ADDRESS_OF(gs_param[1]),						// [0xA067]
		LSW_ADDRESS_OF(gs_param[2]),						// [0xA068]
		LSW_ADDRESS_OF(gs_param[3]),						// [0xA069]
		LSW_ADDRESS_OF(gs_param[4]),						// [0xA06A]
		LSW_ADDRESS_OF(gs_param[5]),						// [0xA06B]
		LSW_ADDRESS_OF(gs_param[6]),						// [0xA06C]
		LSW_ADDRESS_OF(gs_param[7]),						// [0xA06D]
		LSW_ADDRESS_OF(gs_param[8]),						// [0xA06E]
		LSW_ADDRESS_OF(gs_param[9]),						// [0xA06F]
		LSW_ADDRESS_OF(gs_param[10]),						// [0xA070]
		LSW_ADDRESS_OF(gs_param[11]),						// [0xA071]
		LSW_ADDRESS_OF(gs_param[12]),						// [0xA072]
		LSW_ADDRESS_OF(gs_param[13]),						// [0xA073]
		LSW_ADDRESS_OF(gs_param[14]),						// [0xA074]
		LSW_ADDRESS_OF(gs_param[15]),						// [0xA075]
		LSW_ADDRESS_OF(gs_param[16]),						// [0xA076]
		LSW_ADDRESS_OF(gs_param[17]),						// [0xA077]
		LSW_ADDRESS_OF(gs_param[18]),						// [0xA078]
		LSW_ADDRESS_OF(gs_param[19]),						// [0xA079]
		LSW_ADDRESS_OF(gs_param[20]),						// [0xA07A]
		LSW_ADDRESS_OF(gs_param[21]),						// [0xA07B]
		LSW_ADDRESS_OF(gs_param[22]),						// [0xA07C]
		LSW_ADDRESS_OF(gs_param[23]),						// [0xA07D]
		LSW_ADDRESS_OF(gs_param[24]),						// [0xA07E]
		LSW_ADDRESS_OF(gs_param[25]),						// [0xA07F]	//B7FF
		LSW_ADDRESS_OF(dtheta0),					// [0xA080]	//BE80
		MSW_ADDRESS_OF(dtheta0),					// [0xA081]
		LSW_ADDRESS_OF(dtheta_inc),					// [0xA082]
		MSW_ADDRESS_OF(dtheta_inc),					// [0xA083]
		LSW_ADDRESS_OF(ampl0),						// [0xA084]
		MSW_ADDRESS_OF(ampl0),						// [0xA085]
		LSW_ADDRESS_OF(ampl_inc),					// [0xA086]
		MSW_ADDRESS_OF(ampl_inc),					// [0xA087]
		LSW_ADDRESS_OF(sin_n),						// [0xA088]
		MSW_ADDRESS_OF(sin_n),						// [0xA089]
		LSW_ADDRESS_OF(phase0),						// [0xA08A]
		LSW_ADDRESS_OF(first_sine),					// [0xA08B]
		LSW_ADDRESS_OF(sin_angle),					// [0xA08C]
		MSW_ADDRESS_OF(sin_angle),					// [0xA08D]
		LSW_ADDRESS_OF(sin_angle_inc),				// [0xA08E]
		MSW_ADDRESS_OF(sin_angle_inc),				// [0xA08F]
		LSW_ADDRESS_OF(sine_wave),					// [0xA090]
		MSW_ADDRESS_OF(sine_wave),					// [0xA091]
		LSW_ADDRESS_OF(sin_cntr),					// [0xA092]
		MSW_ADDRESS_OF(sin_cntr),					// [0xA093]
		LSW_ADDRESS_OF(sin_a),						// [0xA094]
		MSW_ADDRESS_OF(sin_a),						// [0xA095]
		LSW_ADDRESS_OF(sine_wave_1),				// [0xA096]
		MSW_ADDRESS_OF(sine_wave_1),				// [0xA097]
		LSW_ADDRESS_OF(sin_n_rg),					// [0xA098]
		MSW_ADDRESS_OF(sin_n_rg),					// [0xA099]
		LSW_ADDRESS_OF(ampl_sat),					// [0xA09A]
		MSW_ADDRESS_OF(ampl_sat),					// [0xA09B]
		LSW_ADDRESS_OF(dtheta_inc_sat),				// [0xA09C]
		MSW_ADDRESS_OF(dtheta_inc_sat),				// [0xA09D]
		LSW_ADDRESS_OF(sin_a_sat),					// [0xA09E]
		MSW_ADDRESS_OF(sin_a_sat),					// [0xA09F]
		LSW_ADDRESS_OF(sin_angle_inc_sat),			// [0xA0A0]
		MSW_ADDRESS_OF(sin_angle_inc_sat),			// [0xA0A1]
		LSW_ADDRESS_OF(sin_angle_inc_rg),			// [0xA0A2]
		MSW_ADDRESS_OF(sin_angle_inc_rg),			// [0xA0A3]
		LSW_ADDRESS_OF(sin_a_inc),					// [0xA0A4]
		MSW_ADDRESS_OF(sin_a_inc),					// [0xA0A5]	//BEA5
		LSW_ADDRESS_OF(bq_f_coeff[0].a1),			// [0xA0A6]	//BF00
		MSW_ADDRESS_OF(bq_f_coeff[0].a1),			// [0xA0A7]
		LSW_ADDRESS_OF(bq_f_coeff[0].a2),			// [0xA0A8]
		MSW_ADDRESS_OF(bq_f_coeff[0].a2),			// [0xA0A9]
		LSW_ADDRESS_OF(bq_f_coeff[0].b0),			// [0xA0AA]
		MSW_ADDRESS_OF(bq_f_coeff[0].b0),			// [0xA0AB]
		LSW_ADDRESS_OF(bq_f_coeff[0].b1),			// [0xA0AC]
		MSW_ADDRESS_OF(bq_f_coeff[0].b1),			// [0xA0AD]
		LSW_ADDRESS_OF(bq_f_coeff[0].b2),			// [0xA0AE]
		MSW_ADDRESS_OF(bq_f_coeff[0].b2),			// [0xA0AF]
		LSW_ADDRESS_OF(bq_f_coeff[0].gain),			// [0xA0B0]
		MSW_ADDRESS_OF(bq_f_coeff[0].gain),			// [0xA0B1]
		LSW_ADDRESS_OF(bq_f_coeff[1].a1),			// [0xA0B2]
		MSW_ADDRESS_OF(bq_f_coeff[1].a1),			// [0xA0B3]
		LSW_ADDRESS_OF(bq_f_coeff[1].a2),			// [0xA0B4]
		MSW_ADDRESS_OF(bq_f_coeff[1].a2),			// [0xA0B5]
		LSW_ADDRESS_OF(bq_f_coeff[1].b0),			// [0xA0B6]
		MSW_ADDRESS_OF(bq_f_coeff[1].b0),			// [0xA0B7]
		LSW_ADDRESS_OF(bq_f_coeff[1].b1),			// [0xA0B8]
		MSW_ADDRESS_OF(bq_f_coeff[1].b1),			// [0xA0B9]
		LSW_ADDRESS_OF(bq_f_coeff[1].b2),			// [0xA0BA]
		MSW_ADDRESS_OF(bq_f_coeff[1].b2),			// [0xA0BB]
		LSW_ADDRESS_OF(bq_f_coeff[1].gain),			// [0xA0BC]
		MSW_ADDRESS_OF(bq_f_coeff[1].gain),			// [0xA0BD]
		LSW_ADDRESS_OF(bq_f_coeff[2].a1),			// [0xA0BE]
		MSW_ADDRESS_OF(bq_f_coeff[2].a1),			// [0xA0BF]
		LSW_ADDRESS_OF(bq_f_coeff[2].a2),			// [0xA0C0]
		MSW_ADDRESS_OF(bq_f_coeff[2].a2),			// [0xA0C1]
		LSW_ADDRESS_OF(bq_f_coeff[2].b0),			// [0xA0C2]
		MSW_ADDRESS_OF(bq_f_coeff[2].b0),			// [0xA0C3]
		LSW_ADDRESS_OF(bq_f_coeff[2].b1),			// [0xA0C4]
		MSW_ADDRESS_OF(bq_f_coeff[2].b1),			// [0xA0C5]
		LSW_ADDRESS_OF(bq_f_coeff[2].b2),			// [0xA0C6]
		MSW_ADDRESS_OF(bq_f_coeff[2].b2),			// [0xA0C7]
		LSW_ADDRESS_OF(bq_f_coeff[2].gain),			// [0xA0C8]
		MSW_ADDRESS_OF(bq_f_coeff[2].gain),			// [0xA0C9]
		LSW_ADDRESS_OF(bq_f_coeff[3].a1),			// [0xA0CA]
		MSW_ADDRESS_OF(bq_f_coeff[3].a1),			// [0xA0CB]
		LSW_ADDRESS_OF(bq_f_coeff[3].a2),			// [0xA0CC]
		MSW_ADDRESS_OF(bq_f_coeff[3].a2),			// [0xA0CD]
		LSW_ADDRESS_OF(bq_f_coeff[3].b0),			// [0xA0CE]
		MSW_ADDRESS_OF(bq_f_coeff[3].b0),			// [0xA0CF]
		LSW_ADDRESS_OF(bq_f_coeff[3].b1),			// [0xA0D0]
		MSW_ADDRESS_OF(bq_f_coeff[3].b1),			// [0xA0D1]
		LSW_ADDRESS_OF(bq_f_coeff[3].b2),			// [0xA0D2]
		MSW_ADDRESS_OF(bq_f_coeff[3].b2),			// [0xA0D3]
		LSW_ADDRESS_OF(bq_f_coeff[3].gain),			// [0xA0D4]
		MSW_ADDRESS_OF(bq_f_coeff[3].gain),			// [0xA0D5]
		LSW_ADDRESS_OF(bq_f_coeff[4].a1),			// [0xA0D6]
		MSW_ADDRESS_OF(bq_f_coeff[4].a1),			// [0xA0D7]
		LSW_ADDRESS_OF(bq_f_coeff[4].a2),			// [0xA0D8]
		MSW_ADDRESS_OF(bq_f_coeff[4].a2),			// [0xA0D9]
		LSW_ADDRESS_OF(bq_f_coeff[4].b0),			// [0xA0DA]
		MSW_ADDRESS_OF(bq_f_coeff[4].b0),			// [0xA0DB]
		LSW_ADDRESS_OF(bq_f_coeff[4].b1),			// [0xA0DC]
		MSW_ADDRESS_OF(bq_f_coeff[4].b1),			// [0xA0DD]
		LSW_ADDRESS_OF(bq_f_coeff[4].b2),			// [0xA0DE]
		MSW_ADDRESS_OF(bq_f_coeff[4].b2),			// [0xA0DF]
		LSW_ADDRESS_OF(bq_f_coeff[4].gain),			// [0xA0E0]
		MSW_ADDRESS_OF(bq_f_coeff[4].gain),			// [0xA0E1]
		LSW_ADDRESS_OF(bq_f_coeff[5].a1),			// [0xA0E2]
		MSW_ADDRESS_OF(bq_f_coeff[5].a1),			// [0xA0E3]
		LSW_ADDRESS_OF(bq_f_coeff[5].a2),			// [0xA0E4]
		MSW_ADDRESS_OF(bq_f_coeff[5].a2),			// [0xA0E5]
		LSW_ADDRESS_OF(bq_f_coeff[5].b0),			// [0xA0E6]
		MSW_ADDRESS_OF(bq_f_coeff[5].b0),			// [0xA0E7]
		LSW_ADDRESS_OF(bq_f_coeff[5].b1),			// [0xA0E8]
		MSW_ADDRESS_OF(bq_f_coeff[5].b1),			// [0xA0E9]
		LSW_ADDRESS_OF(bq_f_coeff[5].b2),			// [0xA0EA]
		MSW_ADDRESS_OF(bq_f_coeff[5].b2),			// [0xA0EB]
		LSW_ADDRESS_OF(bq_f_coeff[5].gain),			// [0xA0EC]
		MSW_ADDRESS_OF(bq_f_coeff[5].gain),			// [0xA0ED]
		LSW_ADDRESS_OF(bq_f_coeff[6].a1),			// [0xA0EE]
		MSW_ADDRESS_OF(bq_f_coeff[6].a1),			// [0xA0EF]
		LSW_ADDRESS_OF(bq_f_coeff[6].a2),			// [0xA0F0]
		MSW_ADDRESS_OF(bq_f_coeff[6].a2),			// [0xA0F1]
		LSW_ADDRESS_OF(bq_f_coeff[6].b0),			// [0xA0F2]
		MSW_ADDRESS_OF(bq_f_coeff[6].b0),			// [0xA0F3]
		LSW_ADDRESS_OF(bq_f_coeff[6].b1),			// [0xA0F4]
		MSW_ADDRESS_OF(bq_f_coeff[6].b1),			// [0xA0F5]
		LSW_ADDRESS_OF(bq_f_coeff[6].b2),			// [0xA0F6]
		MSW_ADDRESS_OF(bq_f_coeff[6].b2),			// [0xA0F7]
		LSW_ADDRESS_OF(bq_f_coeff[6].gain),			// [0xA0F8]
		MSW_ADDRESS_OF(bq_f_coeff[6].gain),			// [0xA0F9]
		LSW_ADDRESS_OF(bq_f_coeff[7].a1),			// [0xA0FA]
		MSW_ADDRESS_OF(bq_f_coeff[7].a1),			// [0xA0FB]
		LSW_ADDRESS_OF(bq_f_coeff[7].a2),			// [0xA0FC]
		MSW_ADDRESS_OF(bq_f_coeff[7].a2),			// [0xA0FD]
		LSW_ADDRESS_OF(bq_f_coeff[7].b0),			// [0xA0FE]
		MSW_ADDRESS_OF(bq_f_coeff[7].b0),			// [0xA0FF]
		LSW_ADDRESS_OF(bq_f_coeff[7].b1),			// [0xA100]
		MSW_ADDRESS_OF(bq_f_coeff[7].b1),			// [0xA101]
		LSW_ADDRESS_OF(bq_f_coeff[7].b2),			// [0xA102]
		MSW_ADDRESS_OF(bq_f_coeff[7].b2),			// [0xA103]
		LSW_ADDRESS_OF(bq_f_coeff[7].gain),			// [0xA104]
		MSW_ADDRESS_OF(bq_f_coeff[7].gain),			// [0xA105]
		LSW_ADDRESS_OF(bq_f_coeff[8].a1),			// [0xA106]
		MSW_ADDRESS_OF(bq_f_coeff[8].a1),			// [0xA107]
		LSW_ADDRESS_OF(bq_f_coeff[8].a2),			// [0xA108]
		MSW_ADDRESS_OF(bq_f_coeff[8].a2),			// [0xA109]
		LSW_ADDRESS_OF(bq_f_coeff[8].b0),			// [0xA10A]
		MSW_ADDRESS_OF(bq_f_coeff[8].b0),			// [0xA10B]
		LSW_ADDRESS_OF(bq_f_coeff[8].b1),			// [0xA10C]
		MSW_ADDRESS_OF(bq_f_coeff[8].b1),			// [0xA10D]
		LSW_ADDRESS_OF(bq_f_coeff[8].b2),			// [0xA10E]
		MSW_ADDRESS_OF(bq_f_coeff[8].b2),			// [0xA10F]
		LSW_ADDRESS_OF(bq_f_coeff[8].gain),			// [0xA110]
		MSW_ADDRESS_OF(bq_f_coeff[8].gain),			// [0xA111]
		LSW_ADDRESS_OF(bq_f_coeff[9].a1),			// [0xA112]
		MSW_ADDRESS_OF(bq_f_coeff[9].a1),			// [0xA113]
		LSW_ADDRESS_OF(bq_f_coeff[9].a2),			// [0xA114]
		MSW_ADDRESS_OF(bq_f_coeff[9].a2),			// [0xA115]
		LSW_ADDRESS_OF(bq_f_coeff[9].b0),			// [0xA116]
		MSW_ADDRESS_OF(bq_f_coeff[9].b0),			// [0xA117]
		LSW_ADDRESS_OF(bq_f_coeff[9].b1),			// [0xA118]
		MSW_ADDRESS_OF(bq_f_coeff[9].b1),			// [0xA119]
		LSW_ADDRESS_OF(bq_f_coeff[9].b2),			// [0xA11A]
		MSW_ADDRESS_OF(bq_f_coeff[9].b2),			// [0xA11B]
		LSW_ADDRESS_OF(bq_f_coeff[9].gain),			// [0xA11C]
		MSW_ADDRESS_OF(bq_f_coeff[9].gain),			// [0xA11D]
		LSW_ADDRESS_OF(l_user_var1),				// [0xA11E]
		MSW_ADDRESS_OF(l_user_var1),				// [0xA11F]
		LSW_ADDRESS_OF(l_user_var2),				// [0xA120]
		MSW_ADDRESS_OF(l_user_var2),				// [0xA121]
		LSW_ADDRESS_OF(l_user_var3),				// [0xA122]
		MSW_ADDRESS_OF(l_user_var3),				// [0xA123]
		LSW_ADDRESS_OF(l_user_var4),				// [0xA124]
		MSW_ADDRESS_OF(l_user_var4),				// [0xA125]
		LSW_ADDRESS_OF(touch_probe_1_pos_edge),		// [0xA126]
		MSW_ADDRESS_OF(touch_probe_1_pos_edge),		// [0xA127]
		LSW_ADDRESS_OF(touch_probe_1_neg_edge),		// [0xA128]
		MSW_ADDRESS_OF(touch_probe_1_neg_edge),		// [0xA129]
		LSW_ADDRESS_OF(touch_probe_2_pos_edge),		// [0xA12A]
		MSW_ADDRESS_OF(touch_probe_2_pos_edge),		// [0xA12B]
		LSW_ADDRESS_OF(touch_probe_2_neg_edge),		// [0xA12C]
		MSW_ADDRESS_OF(touch_probe_2_neg_edge),		// [0xA12D]
		LSW_ADDRESS_OF(capture_configuration),		// [0xA12E]
		LSW_ADDRESS_OF(capture_status),				// [0xA12F]
		LSW_ADDRESS_OF(configreg_sync),				// [0xA130]
		LSW_ADDRESS_OF(real_t_pos),					// [0xA131]
		MSW_ADDRESS_OF(real_t_pos),					// [0xA132]
		LSW_ADDRESS_OF(real_err_prot),				// [0xA133]
		MSW_ADDRESS_OF(real_err_prot),				// [0xA134]
		LSW_ADDRESS_OF(buffer_clear),				// [0xA135]
		LSW_ADDRESS_OF(real_c_spd),					// [0xA136]
		MSW_ADDRESS_OF(real_c_spd),					// [0xA137]
		LSW_ADDRESS_OF(digin_status_ds402),			// [0xA138]
		MSW_ADDRESS_OF(digin_status_ds402),			// [0xA139]
		LSW_ADDRESS_OF(device_identity.hardware_id),// [0xA13A]
		LSW_ADDRESS_OF(disable_sol_cor),				// [0xA13B]
		LSW_ADDRESS_OF(outputs_config_buffer.first),	// [0xA13C]
		MSW_ADDRESS_OF(outputs_config_buffer.first),	// [0xA13D]
		LSW_ADDRESS_OF(outputs_config_buffer.second),	// [0xA13E]
		MSW_ADDRESS_OF(outputs_config_buffer.second),	// [0xA13F]
		LSW_ADDRESS_OF(io_register[0]),				// [0xA140]
		MSW_ADDRESS_OF(io_register[0]),				// [0xA141]
		LSW_ADDRESS_OF(io_register[1]),				// [0xA142]
		MSW_ADDRESS_OF(io_register[1]),				// [0xA143]
		LSW_ADDRESS_OF(io_register[2]),				// [0xA144]
		MSW_ADDRESS_OF(io_register[2]),				// [0xA145]
		LSW_ADDRESS_OF(io_register[3]),				// [0xA146]
		MSW_ADDRESS_OF(io_register[3]),				// [0xA147]
		LSW_ADDRESS_OF(io_register[4]),				// [0xA148]
		MSW_ADDRESS_OF(io_register[4]),				// [0xA149]
		LSW_ADDRESS_OF(io_register[5]),				// [0xA14A]
		MSW_ADDRESS_OF(io_register[5]),				// [0xA14B]
		LSW_ADDRESS_OF(io_register[6]),				// [0xA14C]
		MSW_ADDRESS_OF(io_register[6]),				// [0xA14D]
		LSW_ADDRESS_OF(io_register[7]),				// [0xA14E]
		MSW_ADDRESS_OF(io_register[7]),				// [0xA14F]
		LSW_ADDRESS_OF(io_register[8]),				// [0xA150]
		MSW_ADDRESS_OF(io_register[8]),				// [0xA151]
		LSW_ADDRESS_OF(io_register[9]),				// [0xA152]
		MSW_ADDRESS_OF(io_register[9]),				// [0xA153]
		LSW_ADDRESS_OF(io_register[10]),			// [0xA154]
		MSW_ADDRESS_OF(io_register[10]),			// [0xA155]
		LSW_ADDRESS_OF(io_register[11]),			// [0xA156]
		MSW_ADDRESS_OF(io_register[11]),			// [0xA157]
		LSW_ADDRESS_OF(io_register[12]),			// [0xA158]
		MSW_ADDRESS_OF(io_register[12]),			// [0xA159]
		LSW_ADDRESS_OF(io_register[13]),			// [0xA15A]
		MSW_ADDRESS_OF(io_register[13]),			// [0xA15B]
		LSW_ADDRESS_OF(io_register[14]),			// [0xA15C]
		MSW_ADDRESS_OF(io_register[14]),			// [0xA15D]
		LSW_ADDRESS_OF(io_register[15]),			// [0xA15E]
		MSW_ADDRESS_OF(io_register[15]),			// [0xA15F]
		LSW_ADDRESS_OF(io_register[16]),			// [0xA160]
		MSW_ADDRESS_OF(io_register[16]),			// [0xA161]
		LSW_ADDRESS_OF(io_register[17]),			// [0xA162]
		MSW_ADDRESS_OF(io_register[17]),			// [0xA163]
		LSW_ADDRESS_OF(io_register[18]),			// [0xA164]
		MSW_ADDRESS_OF(io_register[18]),			// [0xA165]
		LSW_ADDRESS_OF(io_register[19]),			// [0xA166]
		MSW_ADDRESS_OF(io_register[19]),			// [0xA167]
		LSW_ADDRESS_OF(io_register[20]),			// [0xA168]
		MSW_ADDRESS_OF(io_register[20]),			// [0xA169]
		LSW_ADDRESS_OF(io_register[21]),			// [0xA16A]
		MSW_ADDRESS_OF(io_register[21]),			// [0xA16B]
		LSW_ADDRESS_OF(io_register[22]),			// [0xA16C]
		MSW_ADDRESS_OF(io_register[22]),			// [0xA16D]
		LSW_ADDRESS_OF(io_register[23]),			// [0xA16E]
		MSW_ADDRESS_OF(io_register[23]),			// [0xA16F]
		LSW_ADDRESS_OF(io_register[24]),			// [0xA170]
		MSW_ADDRESS_OF(io_register[24]),			// [0xA171]
		LSW_ADDRESS_OF(io_register[25]),			// [0xA172]
		MSW_ADDRESS_OF(io_register[25]),			// [0xA173]
		LSW_ADDRESS_OF(io_register[26]),			// [0xA174]
		MSW_ADDRESS_OF(io_register[26]),			// [0xA175]
		LSW_ADDRESS_OF(io_register[27]),			// [0xA176]
		MSW_ADDRESS_OF(io_register[27]),			// [0xA177]
		LSW_ADDRESS_OF(io_register[28]),			// [0xA178]
		MSW_ADDRESS_OF(io_register[28]),			// [0xA179]
		LSW_ADDRESS_OF(io_register[29]),			// [0xA17A]
		MSW_ADDRESS_OF(io_register[29]),			// [0xA17B]
		LSW_ADDRESS_OF(io_register[30]),			// [0xA17C]
		MSW_ADDRESS_OF(io_register[30]),			// [0xA17D]
		LSW_ADDRESS_OF(io_register[31]),			// [0xA17E]
		MSW_ADDRESS_OF(io_register[31]),			// [0xA17F]
		LSW_ADDRESS_OF(io_register[32]),			// [0xA180]
		MSW_ADDRESS_OF(io_register[32]),			// [0xA181]
		LSW_ADDRESS_OF(io_register[33]),			// [0xA182]
		MSW_ADDRESS_OF(io_register[33]),			// [0xA183]
		LSW_ADDRESS_OF(io_register[34]),			// [0xA184]
		MSW_ADDRESS_OF(io_register[34]),			// [0xA185]
		LSW_ADDRESS_OF(io_register[35]),			// [0xA186]
		MSW_ADDRESS_OF(io_register[35]),			// [0xA187]
		LSW_ADDRESS_OF(io_register[36]),			// [0xA188]
		MSW_ADDRESS_OF(io_register[36]),			// [0xA189]
		LSW_ADDRESS_OF(io_register[37]),			// [0xA18A]
		MSW_ADDRESS_OF(io_register[37]),			// [0xA18B]
		LSW_ADDRESS_OF(io_register[38]),			// [0xA18C]
		MSW_ADDRESS_OF(io_register[38]),			// [0xA18D]
		LSW_ADDRESS_OF(io_register[39]),			// [0xA18E]
		MSW_ADDRESS_OF(io_register[39]),			// [0xA18F]
		LSW_ADDRESS_OF(io_register[40]),			// [0xA190]
		MSW_ADDRESS_OF(io_register[40]),			// [0xA191]
		LSW_ADDRESS_OF(io_register[41]),			// [0xA192]
		MSW_ADDRESS_OF(io_register[41]),			// [0xA193]
		LSW_ADDRESS_OF(io_register[42]),			// [0xA194]
		MSW_ADDRESS_OF(io_register[42]),			// [0xA195]
		LSW_ADDRESS_OF(io_register[43]),			// [0xA196]
		MSW_ADDRESS_OF(io_register[43]),			// [0xA197]
		LSW_ADDRESS_OF(io_register[44]),			// [0xA198]
		MSW_ADDRESS_OF(io_register[44]),			// [0xA199]
		LSW_ADDRESS_OF(io_register[45]),			// [0xA19A]
		MSW_ADDRESS_OF(io_register[45]),			// [0xA19B]
		LSW_ADDRESS_OF(io_register[46]),			// [0xA19C]
		MSW_ADDRESS_OF(io_register[46]),			// [0xA19D]
		LSW_ADDRESS_OF(io_register[47]),			// [0xA19E]
		MSW_ADDRESS_OF(io_register[47]),			// [0xA19F]
		LSW_ADDRESS_OF(io_register[48]),			// [0xA1A0]
		MSW_ADDRESS_OF(io_register[48]),			// [0xA1A1]
		LSW_ADDRESS_OF(io_register[49]),			// [0xA1A2]
		MSW_ADDRESS_OF(io_register[49]),			// [0xA1A3]
		LSW_ADDRESS_OF(io_register[50]),			// [0xA1A4]
		MSW_ADDRESS_OF(io_register[50]),			// [0xA1A5]
		LSW_ADDRESS_OF(io_register[51]),			// [0xA1A6]
		MSW_ADDRESS_OF(io_register[51]),			// [0xA1A7]
		LSW_ADDRESS_OF(io_register[52]),			// [0xA1A8]
		MSW_ADDRESS_OF(io_register[52]),			// [0xA1A9]
		LSW_ADDRESS_OF(io_register[53]),			// [0xA1AA]
		MSW_ADDRESS_OF(io_register[53]),			// [0xA1AB]
		LSW_ADDRESS_OF(io_register[54]),			// [0xA1AC]
		MSW_ADDRESS_OF(io_register[54]),			// [0xA1AD]
		LSW_ADDRESS_OF(io_register[55]),			// [0xA1AE]
		MSW_ADDRESS_OF(io_register[55]),			// [0xA1AF]
		LSW_ADDRESS_OF(io_register[56]),			// [0xA1B0]
		MSW_ADDRESS_OF(io_register[56]),			// [0xA1B1]
		LSW_ADDRESS_OF(io_register[57]),			// [0xA1B2]
		MSW_ADDRESS_OF(io_register[57]),			// [0xA1B3]
		LSW_ADDRESS_OF(io_register[58]),			// [0xA1B4]
		MSW_ADDRESS_OF(io_register[58]),			// [0xA1B5]
		LSW_ADDRESS_OF(io_register[59]),			// [0xA1B6]
		MSW_ADDRESS_OF(io_register[59]),			// [0xA1B7]
		LSW_ADDRESS_OF(io_register[60]),			// [0xA1B8]
		MSW_ADDRESS_OF(io_register[60]),			// [0xA1B9]
		LSW_ADDRESS_OF(io_register[61]),			// [0xA1BA]
		MSW_ADDRESS_OF(io_register[61]),			// [0xA1BB]
		LSW_ADDRESS_OF(io_register[62]),			// [0xA1BC]
		MSW_ADDRESS_OF(io_register[62]),			// [0xA1BD]
		LSW_ADDRESS_OF(io_register[63]),			// [0xA1BE]
		MSW_ADDRESS_OF(io_register[63]),			// [0xA1BF]
		LSW_ADDRESS_OF(ioregister_inputs_offset),	// [0xA1C0]
		LSW_ADDRESS_OF(ioregister_outputs_offset),	// [0xA1C1]
		LSW_ADDRESS_OF(sw_file_download),			// [0xA1C2]
		LSW_ADDRESS_OF(adc_current_ia_gain_f),		// [0xA1C3]
		MSW_ADDRESS_OF(adc_current_ia_gain_f),		// [0xA1C4]
		LSW_ADDRESS_OF(adc_current_ia_offset),		// [0xA1C5]
		LSW_ADDRESS_OF(adc_current_ib_gain_f),		// [0xA1C6]
		MSW_ADDRESS_OF(adc_current_ib_gain_f),		// [0xA1C7]
		LSW_ADDRESS_OF(adc_current_ib_offset),		// [0xA1C8]
		LSW_ADDRESS_OF(adc_current_ic_gain_f),		// [0xA1C9]
		MSW_ADDRESS_OF(adc_current_ic_gain_f),		// [0xA1CA]
		LSW_ADDRESS_OF(adc_current_ic_offset),		// [0xA1CB]
		LSW_ADDRESS_OF(adc_current_id_gain_f),		// [0xA1CC]
		MSW_ADDRESS_OF(adc_current_id_gain_f),		// [0xA1CD]
		LSW_ADDRESS_OF(adc_current_id_offset),		// [0xA1CE]
		LSW_ADDRESS_OF(adc_linear_hall_1_gain_f),	// [0xA1CF]
		MSW_ADDRESS_OF(adc_linear_hall_1_gain_f),	// [0xA1D0]
		LSW_ADDRESS_OF(adc_linear_hall_1_offset),	// [0xA1D1]
		LSW_ADDRESS_OF(adc_linear_hall_2_gain_f),	// [0xA1D2]
		MSW_ADDRESS_OF(adc_linear_hall_2_gain_f),	// [0xA1D3]
		LSW_ADDRESS_OF(adc_linear_hall_2_offset),	// [0xA1D4]
		LSW_ADDRESS_OF(adc_linear_hall_3_gain_f),	// [0xA1D5]
		MSW_ADDRESS_OF(adc_linear_hall_3_gain_f),	// [0xA1D6]
		LSW_ADDRESS_OF(adc_linear_hall_3_offset),	// [0xA1D7]
		LSW_ADDRESS_OF(adc_encoder_sin_gain_f),		// [0xA1D8]
		MSW_ADDRESS_OF(adc_encoder_sin_gain_f),		// [0xA1D9]
		LSW_ADDRESS_OF(adc_encoder_sin_offset),		// [0xA1DA]
		LSW_ADDRESS_OF(adc_encoder_cos_gain_f),		// [0xA1DB]
		MSW_ADDRESS_OF(adc_encoder_cos_gain_f),		// [0xA1DC]
		LSW_ADDRESS_OF(adc_encoder_cos_offset),		// [0xA1DD]
		LSW_ADDRESS_OF(adc_reference_gain_f),		// [0xA1DE]
		MSW_ADDRESS_OF(adc_reference_gain_f),		// [0xA1DF]
		LSW_ADDRESS_OF(adc_reference_offset),		// [0xA1E0]
		LSW_ADDRESS_OF(adc_feedback_gain_f),		// [0xA1E1]
		MSW_ADDRESS_OF(adc_feedback_gain_f),		// [0xA1E2]
		LSW_ADDRESS_OF(adc_feedback_offset),		// [0xA1E3]
		LSW_ADDRESS_OF(adc_v_log_gain_f),			// [0xA1E4]
		MSW_ADDRESS_OF(adc_v_log_gain_f),			// [0xA1E5]
		LSW_ADDRESS_OF(adc_v_log_offset),			// [0xA1E6]
		LSW_ADDRESS_OF(adc_v_mot_gain_f),			// [0xA1E7]
		MSW_ADDRESS_OF(adc_v_mot_gain_f),			// [0xA1E8]
		LSW_ADDRESS_OF(adc_v_mot_offset),			// [0xA1E9]
		LSW_ADDRESS_OF(adc_t_drive_gain_f),			// [0xA1EA]
		MSW_ADDRESS_OF(adc_t_drive_gain_f),			// [0xA1EB]
		LSW_ADDRESS_OF(adc_t_drive_offset),			// [0xA1EC]
		LSW_ADDRESS_OF(adc_t_mot_gain_f),			// [0xA1ED]
		MSW_ADDRESS_OF(adc_t_mot_gain_f),			// [0xA1EE]
		LSW_ADDRESS_OF(adc_t_mot_offset),			// [0xA1EF]
		LSW_ADDRESS_OF(adc_sto_gain_f),				// [0xA1F0]
		MSW_ADDRESS_OF(adc_sto_gain_f),				// [0xA1F1]
		LSW_ADDRESS_OF(adc_sto_offset),				// [0xA1F2]
		LSW_ADDRESS_OF(adc_current_ia_satmax),		// [0xA1F3]
		LSW_ADDRESS_OF(adc_current_ia_satmin),		// [0xA1F4]
		LSW_ADDRESS_OF(adc_current_ib_satmax),		// [0xA1F5]
		LSW_ADDRESS_OF(adc_current_ib_satmin),		// [0xA1F6]
		LSW_ADDRESS_OF(adc_current_ic_satmax),		// [0xA1F7]
		LSW_ADDRESS_OF(adc_current_ic_satmin),		// [0xA1F8]
		LSW_ADDRESS_OF(adc_current_id_satmax),		// [0xA1F9]
		LSW_ADDRESS_OF(adc_current_id_satmin),		// [0xA1FA]
		LSW_ADDRESS_OF(adc_linear_hall_1_satmax),	// [0xA1FB]
		LSW_ADDRESS_OF(adc_linear_hall_1_satmin),	// [0xA1FC]
		LSW_ADDRESS_OF(adc_linear_hall_2_satmax),	// [0xA1FD]
		LSW_ADDRESS_OF(adc_linear_hall_2_satmin),	// [0xA1FE]
		LSW_ADDRESS_OF(adc_linear_hall_3_satmax),	// [0xA1FF]
		LSW_ADDRESS_OF(adc_linear_hall_3_satmin),	// [0xA200]
		LSW_ADDRESS_OF(adc_encoder_sin_satmax),		// [0xA201]
		LSW_ADDRESS_OF(adc_encoder_sin_satmin),		// [0xA202]
		LSW_ADDRESS_OF(adc_encoder_cos_satmax),		// [0xA203]
		LSW_ADDRESS_OF(adc_encoder_cos_satmin),		// [0xA204]
		LSW_ADDRESS_OF(adc_reference_satmax),		// [0xA205]
		LSW_ADDRESS_OF(adc_reference_satmin),		// [0xA206]
		LSW_ADDRESS_OF(adc_feedback_satmax),		// [0xA207]
		LSW_ADDRESS_OF(adc_feedback_satmin),		// [0xA208]
		LSW_ADDRESS_OF(adc_v_log_satmax),			// [0xA209]
		LSW_ADDRESS_OF(adc_v_log_satmin),			// [0xA20A]
		LSW_ADDRESS_OF(adc_v_mot_satmax),			// [0xA20B]
		LSW_ADDRESS_OF(adc_v_mot_satmin),			// [0xA20C]
		LSW_ADDRESS_OF(adc_t_drive_satmax),			// [0xA20D]
		LSW_ADDRESS_OF(adc_t_drive_satmin),			// [0xA20E]
		LSW_ADDRESS_OF(adc_t_mot_satmax),			// [0xA20F]
		LSW_ADDRESS_OF(adc_t_mot_satmin),			// [0xA210]
		LSW_ADDRESS_OF(adc_sto_satmax),				// [0xA211]
		LSW_ADDRESS_OF(adc_sto_satmin),				// [0xA212]
		LSW_ADDRESS_OF(adc_used_shunts),			// [0xA213]
		LSW_ADDRESS_OF(alpha_sincos),				// [0xA214]
		LSW_ADDRESS_OF(linear_hall_1_filtered),		// [0xA215]
		LSW_ADDRESS_OF(linear_hall_2_filtered),		// [0xA216]
		LSW_ADDRESS_OF(linear_hall_3_filtered),		// [0xA217]
		LSW_ADDRESS_OF(linear_hall_2_min),			// [0xA218]
		LSW_ADDRESS_OF(linear_hall_3_max),			// [0xA219]
		LSW_ADDRESS_OF(linear_hall_3_amplitude),	// [0xA21A]
		LSW_ADDRESS_OF(linear_hall_1_coeff),		// [0xA21B]
		LSW_ADDRESS_OF(linear_hall_2_coeff),		// [0xA21C]
		LSW_ADDRESS_OF(offset_lh1),					// [0xA21D]
		LSW_ADDRESS_OF(offset_lh2),					// [0xA21E]
		LSW_ADDRESS_OF(offset_lh3),					// [0xA21F]
		LSW_ADDRESS_OF(lin_hall_amplitude_copy),	// [0xA220]
		LSW_ADDRESS_OF(adc_linear_hall_1),			// [0xA221]
		LSW_ADDRESS_OF(adc_linear_hall_2),			// [0xA222]
		LSW_ADDRESS_OF(linear_hall_sine),			// [0xA223]
		LSW_ADDRESS_OF(linear_hall_cosine),			// [0xA224]
		LSW_ADDRESS_OF(c_acc_decrease),				// [0xA225]
		LSW_ADDRESS_OF(c_spd_decrease),				// [0xA226]
		LSW_ADDRESS_OF(speed_ffwd_output),			// [0xA227]
		MSW_ADDRESS_OF(speed_ffwd_output),			// [0xA228]
		LSW_ADDRESS_OF(debug_1),					// [0xA229]
		LSW_ADDRESS_OF(debug_2),					// [0xA22A]
		LSW_ADDRESS_OF(debug_3),					// [0xA22B]
		LSW_ADDRESS_OF(debug_4),					// [0xA22C]
		LSW_ADDRESS_OF(debug_5),					// [0xA22D]
		LSW_ADDRESS_OF(debug_6),					// [0xA22E]
		LSW_ADDRESS_OF(debug_7),					// [0xA22F]
		LSW_ADDRESS_OF(debug_8),					// [0xA230]
		LSW_ADDRESS_OF(debug_9),					// [0xA231]
		LSW_ADDRESS_OF(acceleration_ffwd_output),	// [0xA232]
		LSW_ADDRESS_OF(kp_crt_f),					// [0xA233]
		MSW_ADDRESS_OF(kp_crt_f),					// [0xA234]
		LSW_ADDRESS_OF(ki_crt_f),					// [0xA235]
		MSW_ADDRESS_OF(ki_crt_f),					// [0xA236]
		LSW_ADDRESS_OF(kp_spd_f),					// [0xA237]
		MSW_ADDRESS_OF(kp_spd_f),					// [0xA238]
		LSW_ADDRESS_OF(ki_spd_f),					// [0xA239]
		MSW_ADDRESS_OF(ki_spd_f),					// [0xA23A]
		LSW_ADDRESS_OF(kp_pos_f),					// [0xA23B]
		MSW_ADDRESS_OF(kp_pos_f),					// [0xA23C]
		LSW_ADDRESS_OF(ki_pos_f),					// [0xA23D]
		MSW_ADDRESS_OF(ki_pos_f),					// [0xA23E]
		LSW_ADDRESS_OF(kd_pos_f),					// [0xA23F]
		MSW_ADDRESS_OF(kd_pos_f),					// [0xA240]
		LSW_ADDRESS_OF(kdf_pos_f),					// [0xA241]
		MSW_ADDRESS_OF(kdf_pos_f),					// [0xA242]
		LSW_ADDRESS_OF(kff_spd_f),					// [0xA243]
		MSW_ADDRESS_OF(kff_spd_f),					// [0xA244]
		LSW_ADDRESS_OF(kff_acc_f),					// [0xA245]
		MSW_ADDRESS_OF(kff_acc_f),					// [0xA246]
		LSW_ADDRESS_OF(kff_load_f),					// [0xA247]
		MSW_ADDRESS_OF(kff_load_f),					// [0xA248]
		LSW_ADDRESS_OF(kp_tht_f),					// [0xA249]
		MSW_ADDRESS_OF(kp_tht_f),					// [0xA24A]
		LSW_ADDRESS_OF(ki_tht_f),					// [0xA24B]
		MSW_ADDRESS_OF(ki_tht_f),					// [0xA24C]
		LSW_ADDRESS_OF(sat_out_crtq_f),				// [0xA24D]
		MSW_ADDRESS_OF(sat_out_crtq_f),				// [0xA24E]
		LSW_ADDRESS_OF(sat_out_crtd_f),				// [0xA24F]
		MSW_ADDRESS_OF(sat_out_crtd_f),				// [0xA250]
		LSW_ADDRESS_OF(sat_out_spd_f),				// [0xA251]
		MSW_ADDRESS_OF(sat_out_spd_f),				// [0xA252]
		LSW_ADDRESS_OF(sat_int_spd_f),				// [0xA253]
		MSW_ADDRESS_OF(sat_int_spd_f),				// [0xA254]
		LSW_ADDRESS_OF(sat_out_pos_f),				// [0xA255]
		MSW_ADDRESS_OF(sat_out_pos_f),				// [0xA256]
		LSW_ADDRESS_OF(sat_int_pos_f),				// [0xA257]
		MSW_ADDRESS_OF(sat_int_pos_f),				// [0xA258]
		LSW_ADDRESS_OF(motor_delta_theta_position),	// [0xA259]
		MSW_ADDRESS_OF(motor_delta_theta_position),	// [0xA25A]
		LSW_ADDRESS_OF(linear_hall_amplitude),		// [0xA25B]
		MSW_ADDRESS_OF(linear_hall_amplitude),		// [0xA25C]
		LSW_ADDRESS_OF(hall_filter_coef),			// [0xA25D]
		LSW_ADDRESS_OF(dma_failsafe_time_window),	// [0xA25E]
		LSW_ADDRESS_OF(adc_sto_level),				// [0xA25F]
		LSW_ADDRESS_OF(boot0_version),				// [0xA260]
		MSW_ADDRESS_OF(boot0_version),				// [0xA261]
		LSW_ADDRESS_OF(boot1_version),				// [0xA262]
		MSW_ADDRESS_OF(boot1_version),				// [0xA263]
		LSW_ADDRESS_OF(asr3),						// [0xA264]
		LSW_ADDRESS_OF(write_active),				// [0xA265]
		LSW_ADDRESS_OF(phy_address),				// [0xA266]
		LSW_ADDRESS_OF(phy_reg_address),			// [0xA267]
		LSW_ADDRESS_OF(phy_command),				// [0xA268]
		LSW_ADDRESS_OF(phy_data),					// [0xA269]
		LSW_ADDRESS_OF(command_error),				// [0xA26A]
		LSW_ADDRESS_OF(read_register),				// [0xA26B]
		LSW_ADDRESS_OF(register_offset),			// [0xA26C]
		LSW_ADDRESS_OF(register_value),				// [0xA26D]
		MSW_ADDRESS_OF(register_value),				// [0xA26E]
		LSW_ADDRESS_OF(feed_constant.divisor),		// [0xA26F]
		MSW_ADDRESS_OF(feed_constant.divisor),		// [0xA270]
		LSW_ADDRESS_OF(gear_ratio.numerator),		// [0xA271]
		MSW_ADDRESS_OF(gear_ratio.numerator),		// [0xA272]
		LSW_ADDRESS_OF(gear_ratio.divisor),			// [0xA273]
		MSW_ADDRESS_OF(gear_ratio.divisor),			// [0xA274]
		LSW_ADDRESS_OF(si_unit_position),			// [0xA275]
		MSW_ADDRESS_OF(si_unit_position),			// [0xA276]
		LSW_ADDRESS_OF(si_unit_velocity),			// [0xA277]
		MSW_ADDRESS_OF(si_unit_velocity),			// [0xA278]
		LSW_ADDRESS_OF(si_unit_acceleration),		// [0xA279]
		MSW_ADDRESS_OF(si_unit_acceleration),		// [0xA27A]
		LSW_ADDRESS_OF(si_unit_jerk),				// [0xA27B]
		MSW_ADDRESS_OF(si_unit_jerk),				// [0xA27C]
		LSW_ADDRESS_OF(velocity_encoder.numerator),	// [0xA27D]
		MSW_ADDRESS_OF(velocity_encoder.numerator),	// [0xA27E]
		LSW_ADDRESS_OF(velocity_encoder.divisor),	// [0xA27F]
		MSW_ADDRESS_OF(velocity_encoder.divisor),	// [0xA280]
		LSW_ADDRESS_OF(acceleration_scaling.numerator),	// [0xA281]
		MSW_ADDRESS_OF(acceleration_scaling.numerator),	// [0xA282]
		LSW_ADDRESS_OF(acceleration_scaling.divisor),// [0xA283]
		MSW_ADDRESS_OF(acceleration_scaling.divisor),// [0xA284]
		LSW_ADDRESS_OF(jerk_factor.numerator),		// [0xA285]
		MSW_ADDRESS_OF(jerk_factor.numerator),		// [0xA286]
		LSW_ADDRESS_OF(jerk_factor.divisor),		// [0xA287]
		MSW_ADDRESS_OF(jerk_factor.divisor),		// [0xA288]
		LSW_ADDRESS_OF(jerk_scaling.numerator),		// [0xA289]
		MSW_ADDRESS_OF(jerk_scaling.numerator),		// [0xA28A]
		LSW_ADDRESS_OF(jerk_scaling.divisor),		// [0xA28B]
		MSW_ADDRESS_OF(jerk_scaling.divisor),		// [0xA28C]
		LSW_ADDRESS_OF(config_buffer),				// [0xA28D]
		LSW_ADDRESS_OF(pt_time),					// [0xA28E]
		LSW_ADDRESS_OF(dummy_object),				// [0xA28F]
		LSW_ADDRESS_OF(overposition_trig_output),	// [0xA290]
		LSW_ADDRESS_OF(aux_capture_configuration),	// [0xA291]
		LSW_ADDRESS_OF(aux_capture_pos_edge),		// [0xA292]
		MSW_ADDRESS_OF(aux_capture_pos_edge),		// [0xA293]
		LSW_ADDRESS_OF(aux_capture_neg_edge),		// [0xA294]
		MSW_ADDRESS_OF(aux_capture_neg_edge),		// [0xA295]
		LSW_ADDRESS_OF(a_mac_address[0]),			// [0xA296]
		LSW_ADDRESS_OF(a_mac_address[2]),			// [0xA297]
		LSW_ADDRESS_OF(a_mac_address[4]),			// [0xA298]
		LSW_ADDRESS_OF(a_ip_address),				// [0xA299]
		MSW_ADDRESS_OF(a_ip_address),				// [0xA29A]
		LSW_ADDRESS_OF(a_sub_net_mask),				// [0xA29B]
		MSW_ADDRESS_OF(a_sub_net_mask),				// [0xA29C]
		LSW_ADDRESS_OF(a_default_gateway),			// [0xA29D]
		MSW_ADDRESS_OF(a_default_gateway),			// [0xA29E]
		LSW_ADDRESS_OF(quickstop_option_code),		// [0xA29F]
		LSW_ADDRESS_OF(shutdown_option_code),		// [0xA2A0]
		LSW_ADDRESS_OF(disable_op_option_code),		// [0xA2A1]
		LSW_ADDRESS_OF(halt_op_oc),					// [0xA2A2]
		LSW_ADDRESS_OF(velocity_treshold),			// [0xA2A3]
		LSW_ADDRESS_OF(target_torque),				// [0xA2A4]
		LSW_ADDRESS_OF(interpolation_data_buffer.first),	// [0xA2A5]
		MSW_ADDRESS_OF(interpolation_data_buffer.first),	// [0xA2A6]
		LSW_ADDRESS_OF(interpolation_data_buffer.second),	// [0xA2A7]
		MSW_ADDRESS_OF(interpolation_data_buffer.second),	// [0xA2A8]
		LSW_ADDRESS_OF(power_stage_command),		// [0xA2A9]
		LSW_ADDRESS_OF(power_stage_register_address),// [0xA2AA]
		LSW_ADDRESS_OF(power_stage_register_data),	// [0xA2AB]
		LSW_ADDRESS_OF(power_stage_received_data),	// [0xA2AC]
		LSW_ADDRESS_OF(power_stage_pdpint_data),	// [0xA2AD]
		MSW_ADDRESS_OF(power_stage_pdpint_data),	// [0xA2AE]
		LSW_ADDRESS_OF(xml_access_from_tml),		// [0xA2AF]
		LSW_ADDRESS_OF(biss_crc_fdbk1_fdbk2),		// [0xA2B0]
		LSW_ADDRESS_OF(autorun_active),				// [0xA2B1]
		LSW_ADDRESS_OF(gpio_read_command),			// [0xA2B2]
		LSW_ADDRESS_OF(port0_input),				// [0xA2B3]
		LSW_ADDRESS_OF(port1_input),				// [0xA2B4]
		LSW_ADDRESS_OF(port2_input),				// [0xA2B5]
		LSW_ADDRESS_OF(port3_input),				// [0xA2B6]
		LSW_ADDRESS_OF(port4_input),				// [0xA2B7]
		LSW_ADDRESS_OF(port5_input),				// [0xA2B8]
		LSW_ADDRESS_OF(port6_input),				// [0xA2B9]
		LSW_ADDRESS_OF(port7_input),				// [0xA2BA]
		LSW_ADDRESS_OF(port8_input),				// [0xA2BB]
		LSW_ADDRESS_OF(port9_input),				// [0xA2BC]
		LSW_ADDRESS_OF(port14_input),				// [0xA2BD]
		LSW_ADDRESS_OF(port15_input),				// [0xA2BE]
		LSW_ADDRESS_OF(gpio_write_command),				// [0xA2BF]
		LSW_ADDRESS_OF(gpio_port_defined),			// [0xA2C0]
		LSW_ADDRESS_OF(gpio_pin_defined),			// [0xA2C1]
		LSW_ADDRESS_OF(gpio_state),					// [0xA2C2]
		LSW_ADDRESS_OF(tml_priority),				// [0xA2C3]
		LSW_ADDRESS_OF(e2rom_store_start_address),	// [0xA2C4]
		LSW_ADDRESS_OF(transaction_jitter_compensation),				// [0xA2C5]
		LSW_ADDRESS_OF(biss_driver_fdbk2.number_of_rx_transactions),	// [0xA2C6]
		LSW_ADDRESS_OF(leading_null_words),			// [0xA2C7]
		LSW_ADDRESS_OF(biss_dma_rx_fdbk2[0]),		// [0xA2C8]
		MSW_ADDRESS_OF(biss_dma_rx_fdbk2[0]),		// [0xA2C9]
		LSW_ADDRESS_OF(biss_dma_rx_fdbk2[4]),		// [0xA2CA]
		MSW_ADDRESS_OF(biss_dma_rx_fdbk2[4]),		// [0xA2CB]
		LSW_ADDRESS_OF(biss_dma_rx_fdbk2[8]),		// [0xA2CC]
		MSW_ADDRESS_OF(biss_dma_rx_fdbk2[8]),		// [0xA2CD]
		LSW_ADDRESS_OF(biss_dma_rx_fdbk2[12]),		// [0xA2CE]
		MSW_ADDRESS_OF(biss_dma_rx_fdbk2[12]),		// [0xA2CF]		
		LSW_ADDRESS_OF(first_ack_clocks),			// [0xA2D0]
		LSW_ADDRESS_OF(adc_10reference_gain_f),		// [0xA2D1]
		MSW_ADDRESS_OF(adc_10reference_gain_f),		// [0xA2D2]
		LSW_ADDRESS_OF(adc_10feedback_gain_f),		// [0xA2D3]
		MSW_ADDRESS_OF(adc_10feedback_gain_f),		// [0xA2D4]
		LSW_ADDRESS_OF(device_name[0]),				// [0xA2D5]
		MSW_ADDRESS_OF(device_name[0]),				// [0xA2D6]
		LSW_ADDRESS_OF(device_name[1]),				// [0xA2D7]
		MSW_ADDRESS_OF(device_name[1]),				// [0xA2D8]
		LSW_ADDRESS_OF(device_name[2]),				// [0xA2D9]
		MSW_ADDRESS_OF(device_name[2]),				// [0xA2DA]
		LSW_ADDRESS_OF(device_name[3]),				// [0xA2DB]
		MSW_ADDRESS_OF(device_name[3]),				// [0xA2DC]
		LSW_ADDRESS_OF(sync_filter_min),			// [0xA2DD]
		LSW_ADDRESS_OF(sync_filter_max),			// [0xA2DE]
		LSW_ADDRESS_OF(ram_value),					// [0xA2DF]
		MSW_ADDRESS_OF(ram_value),					// [0xA2E0]
		LSW_ADDRESS_OF(cpu_reset_reason),   		// [0xA2E1]
		LSW_ADDRESS_OF(id_ipart_f),					// [0xA2E2]
		MSW_ADDRESS_OF(id_ipart_f),					// [0xA2E3]
		LSW_ADDRESS_OF(iq_ipart_f),					// [0xA2E4]
		MSW_ADDRESS_OF(iq_ipart_f),					// [0xA2E5]
		LSW_ADDRESS_OF(speed_ipart_f),				// [0xA2E6]
		MSW_ADDRESS_OF(speed_ipart_f),				// [0xA2E7]
		LSW_ADDRESS_OF(position_ipart_f),			// [0xA2E8]
		MSW_ADDRESS_OF(position_ipart_f),			// [0xA2E9]
		LSW_ADDRESS_OF(position_dpart_f),			// [0xA2EA]
		MSW_ADDRESS_OF(position_dpart_f),			// [0xA2EB]
		LSW_ADDRESS_OF(sh_t_ai_dec),				// [0xA2EC]
		LSW_ADDRESS_OF(kff_acc_dec),				// [0xA2ED]
		LSW_ADDRESS_OF(start_mode_command),			// [0xA2EE]
		LSW_ADDRESS_OF(adv_start_retries),			// [0xA2EF]
		LSW_ADDRESS_OF(max_enc_margin),				// [0xA2F0]
		MSW_ADDRESS_OF(max_enc_margin),				// [0xA2F1]
		LSW_ADDRESS_OF(real_min_err),				// [0xA2F2]
		MSW_ADDRESS_OF(real_min_err),				// [0xA2F3]
		LSW_ADDRESS_OF(real_t_si),					// [0xA2F4]
		MSW_ADDRESS_OF(real_t_si),					// [0xA2F5]
		LSW_ADDRESS_OF(real_spd),					// [0xA2F6]
		MSW_ADDRESS_OF(real_spd),					// [0xA2F7]
		LSW_ADDRESS_OF(velocity_bandwidth),			// [0xA2F8]
		LSW_ADDRESS_OF(time_on_reference),			// [0xA2F9]
		LSW_ADDRESS_OF(motor_current),				// [0xA2FA]
		LSW_ADDRESS_OF(error_code),					// [0xA2FB]
		LSW_ADDRESS_OF(real_min_pos_range),			// [0xA2FC]
		MSW_ADDRESS_OF(real_min_pos_range),			// [0xA2FD]
		LSW_ADDRESS_OF(real_max_pos_range),			// [0xA2FE]
		MSW_ADDRESS_OF(real_max_pos_range),			// [0xA2FF]
		LSW_ADDRESS_OF(real_sw_negative_limit),		// [0xA300]
		MSW_ADDRESS_OF(real_sw_negative_limit),		// [0xA301]
		LSW_ADDRESS_OF(real_sw_positive_limit),		// [0xA302]
		MSW_ADDRESS_OF(real_sw_positive_limit),		// [0xA303]
		LSW_ADDRESS_OF(real_c_acc),					// [0xA304]
		MSW_ADDRESS_OF(real_c_acc),					// [0xA305]
		LSW_ADDRESS_OF(real_pos_err),				// [0xA306]
		MSW_ADDRESS_OF(real_pos_err),				// [0xA307]
		LSW_ADDRESS_OF(real_speed_err_prot),		// [0xA308]
		MSW_ADDRESS_OF(real_speed_err_prot),		// [0xA309]
		LSW_ADDRESS_OF(real_pvt_pos0),				// [0xA30A]
		MSW_ADDRESS_OF(real_pvt_pos0),				// [0xA30B]
		LSW_ADDRESS_OF(saturation_current),			// [0xA30C]
		LSW_ADDRESS_OF(activate_csp_max_speed),		// [0xA30D]
		LSW_ADDRESS_OF(sap_value),					// [0xA30E]
		MSW_ADDRESS_OF(sap_value),					// [0xA30F]
		LSW_ADDRESS_OF(auxiliary_settings_register),// [0xA310]
		LSW_ADDRESS_OF(digin_status_low),			// [0xA311]
		LSW_ADDRESS_OF(digin_status_high),			// [0xA312]
		LSW_ADDRESS_OF(output_config_value),		// [0xA313]
		LSW_ADDRESS_OF(output_config_pins),			// [0xA314]
		LSW_ADDRESS_OF(number_of_steps),			// [0xA315]
		LSW_ADDRESS_OF(number_of_microsteps),		// [0xA316]
		LSW_ADDRESS_OF(brake_status),				// [0xA317]
		LSW_ADDRESS_OF(encoder_resolution),			// [0xA318]
		MSW_ADDRESS_OF(encoder_resolution),			// [0xA319]
		LSW_ADDRESS_OF(aux_capture_status),			// [0xA31A]
		LSW_ADDRESS_OF(auxiliary_settings_register2),	// [0xA31B]
		LSW_ADDRESS_OF(auxiliary_settings_register3),	// [0xA31C]
		LSW_ADDRESS_OF(ram_size),					// [0xA31D]
		LSW_ADDRESS_OF(p_internal_ram_value),		// [0xA31E]
		MSW_ADDRESS_OF(p_internal_ram_value),		// [0xA31F]
		LSW_ADDRESS_OF(ram_value),					// [0xA320]
		MSW_ADDRESS_OF(ram_value),					// [0xA321]
		LSW_ADDRESS_OF(ram_write_vaule),			// [0xA322]
		MSW_ADDRESS_OF(ram_write_vaule),			// [0xA323]
		LSW_ADDRESS_OF(ram_write_request),			// [0xA324]
		LSW_ADDRESS_OF(esm_float_support),			// [0xA325]
		LSW_ADDRESS_OF(tml_int13_configuration),	// [0xA326]
		LSW_ADDRESS_OF(current_ia_st),				// [0xA327]
		LSW_ADDRESS_OF(current_ib_st),				// [0xA328]
		LSW_ADDRESS_OF(current_ic_st),				// [0xA329]
		LSW_ADDRESS_OF(current_id_st),				// [0xA32A]
		LSW_ADDRESS_OF(stepper_current_ia),			// [0xA32B]
		LSW_ADDRESS_OF(stepper_current_ib),			// [0xA32C]
		LSW_ADDRESS_OF(phy_drv.type),				// [0xA32D]
		LSW_ADDRESS_OF(phy_drv.error_register),		// [0xA32E]
		LSW_ADDRESS_OF(v_log_raw),					// [0xA32F]
		LSW_ADDRESS_OF(v_mot_raw),					// [0xA330]
		LSW_ADDRESS_OF(t_drive_raw),				// [0xA331]
		LSW_ADDRESS_OF(t_mot_raw),					// [0xA332]
		LSW_ADDRESS_OF(adc_sto_level_raw),			// [0xA333]
		LSW_ADDRESS_OF(dsp_debug_active),			// [0xA334]
		LSW_ADDRESS_OF(debug_error_register),		// [0xA335]
		LSW_ADDRESS_OF(debug_operation),			// [0xA336]
		LSW_ADDRESS_OF(debug_data_size),			// [0xA327]
		LSW_ADDRESS_OF(debug_address),				// [0xA338]
		MSW_ADDRESS_OF(debug_address),				// [0xA339]
		LSW_ADDRESS_OF(debug_data),					// [0xA33A]
		MSW_ADDRESS_OF(debug_data),					// [0xA33B]
		LSW_ADDRESS_OF(debug_set_mask),				// [0xA33C]
		MSW_ADDRESS_OF(debug_set_mask),				// [0xA33D]
		LSW_ADDRESS_OF(debug_reset_mask),			// [0xA33E]
		MSW_ADDRESS_OF(debug_reset_mask),			// [0xA33F]
		LSW_ADDRESS_OF(u_q_ref_freeze),				// [0xA340]
		LSW_ADDRESS_OF(u_q_ref_freeze_lim),			// [0xA341]
		LSW_ADDRESS_OF(new_freeze_control),			// [0xA342]
		LSW_ADDRESS_OF(err_max_fc),					// [0xA343]
		LSW_ADDRESS_OF(u_d_ref_freeze),				// [0xA344]
		LSW_ADDRESS_OF(logger_delayed_start),		// [0xA345]
		LSW_ADDRESS_OF(t_si_brut),					// [0xA346]
		MSW_ADDRESS_OF(t_si_brut),					// [0xA347]
		LSW_ADDRESS_OF(t_ai_brut),					// [0xA348]
		MSW_ADDRESS_OF(t_ai_brut),					// [0xA349]
		LSW_ADDRESS_OF(t_ai_no_filter),				// [0xA34A]
		MSW_ADDRESS_OF(t_ai_no_filter),				// [0xA34B]
		LSW_ADDRESS_OF(a1_tspd),					// [0xA34C]
		MSW_ADDRESS_OF(a1_tspd),					// [0xA34D]
		LSW_ADDRESS_OF(b0_tspd),					// [0xA34E]
		MSW_ADDRESS_OF(b0_tspd),					// [0xA34F]
		LSW_ADDRESS_OF(a1_tacc),					// [0xA350]
		MSW_ADDRESS_OF(a1_tacc),					// [0xA351]
		LSW_ADDRESS_OF(b0_tacc),					// [0xA352]
		MSW_ADDRESS_OF(b0_tacc),					// [0xA353]
		LSW_ADDRESS_OF(tacc_filter_option),			// [0xA354]
		LSW_ADDRESS_OF(wait_tspd_0),				// [0xA355]
		LSW_ADDRESS_OF(tacc_threshold_pos),			// [0xA356]
		MSW_ADDRESS_OF(tacc_threshold_pos),			// [0xA357]
		LSW_ADDRESS_OF(tacc_threshold_neg),			// [0xA358]
		MSW_ADDRESS_OF(tacc_threshold_neg),			// [0xA359]
		LSW_ADDRESS_OF(logger_from_axis_off),		// [0xA35A]
		LSW_ADDRESS_OF(null_padding_variable),		// [0xA35B]		XXX: free spot
		LSW_ADDRESS_OF(max_current_torque),			// [0xA35C]
		MSW_ADDRESS_OF(max_current_torque),			// [0xA35D]
		LSW_ADDRESS_OF(rate_current),				// [0xA35E]
		MSW_ADDRESS_OF(rate_current),				// [0xA35F]
		LSW_ADDRESS_OF(torque_slope),				// [0xA360]
		MSW_ADDRESS_OF(torque_slope),				// [0xA361]
		LSW_ADDRESS_OF(time_lim_halls),				// [0xA362]
		MSW_ADDRESS_OF(time_lim_halls),				// [0xA363]
		LSW_ADDRESS_OF(change_algh_threshold),		// [0xA364]
		MSW_ADDRESS_OF(change_algh_threshold),		// [0xA365]
		LSW_ADDRESS_OF(pos_hall),					// [0xA366]
		LSW_ADDRESS_OF(encoder_filtering_fdbk1),	// [0xA367]
		LSW_ADDRESS_OF(encoder_filtering_fdbk2),	// [0xA368]
		LSW_ADDRESS_OF(cst_with_speed_limit),		// [0xA369]
		LSW_ADDRESS_OF(max_motor_speed),			// [0xA36A]
		MSW_ADDRESS_OF(max_motor_speed),			// [0xA36B]
		LSW_ADDRESS_OF(ia_i2t_integral),			// [0xA36C]
		MSW_ADDRESS_OF(ia_i2t_integral),			// [0xA36D]
		LSW_ADDRESS_OF(ib_i2t_integral),			// [0xA36E]
		MSW_ADDRESS_OF(ib_i2t_integral),			// [0xA36F]
		LSW_ADDRESS_OF(ic_i2t_integral),			// [0xA370]
		MSW_ADDRESS_OF(ic_i2t_integral),			// [0xA371]
		LSW_ADDRESS_OF(ia_i2t_integral_drive),		// [0xA372]
		MSW_ADDRESS_OF(ia_i2t_integral_drive),		// [0xA373]
		LSW_ADDRESS_OF(ib_i2t_integral_drive),		// [0xA374]
		MSW_ADDRESS_OF(ib_i2t_integral_drive),		// [0xA375]
		LSW_ADDRESS_OF(ic_i2t_integral_drive),		// [0xA376]
		MSW_ADDRESS_OF(ic_i2t_integral_drive),		// [0xA377]
		LSW_ADDRESS_OF(i2t_trigger_cause),			// [0xA378]
		LSW_ADDRESS_OF(i_i2tprot_drive_phase),		// [0xA379]
		LSW_ADDRESS_OF(sf_i2t_drive_phase),			// [0xA37A]
		LSW_ADDRESS_OF(i_i2t_prot_phase),			// [0xA37B]
		LSW_ADDRESS_OF(sf_i2t_phase),				// [0xA37C]
		LSW_ADDRESS_OF(ia2_filtered),				// [0xA37D]
		LSW_ADDRESS_OF(ib2_filtered),				// [0xA37E]
		LSW_ADDRESS_OF(ic2_filtered),				// [0xA37F]
		LSW_ADDRESS_OF(var_bq_filtered),			// [0xA380]
		MSW_ADDRESS_OF(var_bq_filtered),			// [0xA381]
		LSW_ADDRESS_OF(bq_var_address),				// [0xA382]
		LSW_ADDRESS_OF(bq_var_type),				// [0xA383]
		LSW_ADDRESS_OF(var_bq_a1),					// [0xA384]
		MSW_ADDRESS_OF(var_bq_a1),					// [0xA385]
		LSW_ADDRESS_OF(var_bq_b0),					// [0xA386]
		MSW_ADDRESS_OF(var_bq_b0),					// [0xA387]
		LSW_ADDRESS_OF(can_motor_speed),			// [0xA388]
		MSW_ADDRESS_OF(can_motor_speed),			// [0xA389]
		LSW_ADDRESS_OF(can_load_speed),				// [0xA38A]
		MSW_ADDRESS_OF(can_load_speed),				// [0xA38B]
		LSW_ADDRESS_OF(ecat_rev_no),				// [0xA38C]
		MSW_ADDRESS_OF(ecat_rev_no),				// [0xA38D]
		LSW_ADDRESS_OF(ecat_prod_code),				// [0xA38E]
		MSW_ADDRESS_OF(ecat_prod_code),				// [0xA38F]
		LSW_ADDRESS_OF(biss_option_reading),		// [0xA390]
		LSW_ADDRESS_OF(remove_ack),					// [0xA391]
		LSW_ADDRESS_OF(start_byte),					// [0xA392]
		LSW_ADDRESS_OF(endat_treshold_clock_cycles),// [0xA393]
		LSW_ADDRESS_OF(endat_additional_clock),		// [0xA394]
		LSW_ADDRESS_OF(endat_additional_option),	// [0xA395]
		LSW_ADDRESS_OF(null_padding_variable),		// [0xA396]			// RESERVED
		LSW_ADDRESS_OF(kp_th),						// [0xA397]
		LSW_ADDRESS_OF(ki_th),						// [0xA398]
		LSW_ADDRESS_OF(sft_ki_th),					// [0xA399]
		LSW_ADDRESS_OF(sft_kp_th),					// [0xA39A]
		LSW_ADDRESS_OF(komega_th),					// [0xA39B]
		LSW_ADDRESS_OF(theta_offset),				// [0xA39C]
		LSW_ADDRESS_OF(sat_theta),					// [0xA39D]
		LSW_ADDRESS_OF(max_theta_sat),				// [0xA39E]
		LSW_ADDRESS_OF(theta_c),					// [0xA39F]
		LSW_ADDRESS_OF(theta_fdbk),					// [0xA3A0]
		LSW_ADDRESS_OF(en_theta_sat),				// [0xA3A1]
		LSW_ADDRESS_OF(err_pos),					// [0xA3A2]
		LSW_ADDRESS_OF(i_d_cmd),					// [0xA3A3]
		LSW_ADDRESS_OF(is_integral_enabled_q),		// [0xA3A4]
		LSW_ADDRESS_OF(is_integral_enabled_d),		// [0xA3A5]	
		LSW_ADDRESS_OF(theta_c_long),				// [0xA3A6]
		MSW_ADDRESS_OF(theta_c_long),				// [0xA3A7]
		LSW_ADDRESS_OF(theta_cp),					// [0xA3A8]
		MSW_ADDRESS_OF(theta_cp),					// [0xA3A9]
		LSW_ADDRESS_OF(theta_ci),					// [0xA3AA]
		MSW_ADDRESS_OF(theta_ci),					// [0xA3AB]
		LSW_ADDRESS_OF(actual_position_faster),		// [0xA3AC]
		MSW_ADDRESS_OF(actual_position_faster),		// [0xA3AD]
		LSW_ADDRESS_OF(t_pi_1),						// [0xA3AE]
		MSW_ADDRESS_OF(t_pi_1),						// [0xA3AF]
		LSW_ADDRESS_OF(target_position_faster),		// [0xA3B0]
		MSW_ADDRESS_OF(target_position_faster),		// [0xA3B1]
		LSW_ADDRESS_OF(u_b_ref_long),				// [0xA3B2]
		MSW_ADDRESS_OF(u_b_ref_long),				// [0xA3B3]
		LSW_ADDRESS_OF(u_a_ref_long),				// [0xA3B4]
		MSW_ADDRESS_OF(u_a_ref_long),				// [0xA3B5]
		LSW_ADDRESS_OF(u_q_ref_long),				// [0xA3B6]
		MSW_ADDRESS_OF(u_q_ref_long),				// [0xA3B7]
		LSW_ADDRESS_OF(u_d_ref_long),				// [0xA3B8]
		MSW_ADDRESS_OF(u_d_ref_long),				// [0xA3B9]
		LSW_ADDRESS_OF(l_KPI),						// [0xA3BA]
		MSW_ADDRESS_OF(l_KPI),						// [0xA3BB]
		LSW_ADDRESS_OF(l_KII),						// [0xA3BC]
		MSW_ADDRESS_OF(l_KII),						// [0xA3BD]
		LSW_ADDRESS_OF(qicrtq_p),					// [0xA3BE]
		MSW_ADDRESS_OF(qicrtq_p),					// [0xA3BF]
		LSW_ADDRESS_OF(qicrtq_i),					// [0xA3C0]
		MSW_ADDRESS_OF(qicrtq_i),					// [0xA3C1]
		LSW_ADDRESS_OF(qicrtd_p),					// [0xA3C2]
		MSW_ADDRESS_OF(qicrtd_p),					// [0xA3C3]
		LSW_ADDRESS_OF(qicrtd_i),					// [0xA3C4]	
		MSW_ADDRESS_OF(qicrtd_i),					// [0xA3C5]
		LSW_ADDRESS_OF(spd_fast),					// [0xA3C6]
		LSW_ADDRESS_OF(motor_current_copen),		// [0xA3C7]
		LSW_ADDRESS_OF(asr4),						// [0xA3C8]
		MSW_ADDRESS_OF(asr4),						// [0xA3C9]
		LSW_ADDRESS_OF(motor_delta_theta_position),	// [0xA3CA]
		MSW_ADDRESS_OF(motor_delta_theta_position),	// [0xA3CB]
		LSW_ADDRESS_OF(null_padding_variable),		// [0xA3CC]			//XXX: RESERVED
		LSW_ADDRESS_OF(null_padding_variable),		// [0xA3CD]			//XXX: RESERVED
		LSW_ADDRESS_OF(null_padding_variable),		// [0xA3CE]			//XXX: RESERVED
		LSW_ADDRESS_OF(null_padding_variable),		// [0xA3CF]			//XXX: RESERVED
		LSW_ADDRESS_OF(internal_t_drive),			// [0xA3D0]
		LSW_ADDRESS_OF(read_internal_temp),			// [0xA3D1]
		LSW_ADDRESS_OF(der2_mask),					// [0xA3D2]
		LSW_ADDRESS_OF(current_scale_amplification),// [0xA3D3]
		LSW_ADDRESS_OF(tonerr_sol_pid),				// [0xA3D4]
		LSW_ADDRESS_OF(errprot_sol_pid),			// [0xA3D5]
		MSW_ADDRESS_OF(errprot_sol_pid),			// [0xA3D6]	
		LSW_ADDRESS_OF(sol_dtheta_inc),				// [0xA3D7]
		MSW_ADDRESS_OF(sol_dtheta_inc),				// [0xA3D8]
		LSW_ADDRESS_OF(active_control_mode),		// [0xA3D9]
		LSW_ADDRESS_OF(sol_pid_active),				// [0xA3DA]
		LSW_ADDRESS_OF(null_padding_variable),		// [0xA3DB]		XXX free spot)
		LSW_ADDRESS_OF(exotic_position_offset_long),// [0xA3DC]
		MSW_ADDRESS_OF(exotic_position_offset_long),// [0xA3DD]
		LSW_ADDRESS_OF(fault_reaction_option_code_pdpint),			// [0xA3DE]
		LSW_ADDRESS_OF(fault_reaction_option_code_ctrl_err),		// [0xA3DF]
		LSW_ADDRESS_OF(fault_reaction_option_code_comm),			// [0xA3E0]
		LSW_ADDRESS_OF(fault_reaction_option_code_overcrt),			// [0xA3E1]
		LSW_ADDRESS_OF(fault_reaction_option_code_i2t),				// [0xA3E2]
		LSW_ADDRESS_OF(fault_reaction_option_code_i2t_drv),			// [0xA3E3]
		LSW_ADDRESS_OF(fault_reaction_option_motor_temp),			// [0xA3E4]
		LSW_ADDRESS_OF(fault_reaction_option_drive_temp),			// [0xA3E5]
		LSW_ADDRESS_OF(fault_reaction_option_overvoltage),			// [0xA3E6]
		LSW_ADDRESS_OF(fault_reaction_option_undervoltage),			// [0xA3E7]
		LSW_ADDRESS_OF(fault_reaction_option_code_ena),				// [0xA3E8]
		LSW_ADDRESS_OF(adc_current_ia_highscale_offset),			// [0xA3E9]
		LSW_ADDRESS_OF(adc_current_ib_highscale_offset),			// [0xA3EA]
		LSW_ADDRESS_OF(adc_current_ic_highscale_offset),			// [0xA3EB]
		LSW_ADDRESS_OF(adc_current_id_highscale_offset),			// [0xA3EC]
		LSW_ADDRESS_OF(adc_current_ia_lowscale_offset),				// [0xA3ED]
		LSW_ADDRESS_OF(adc_current_ib_lowscale_offset),				// [0xA3EE]
		LSW_ADDRESS_OF(adc_current_ic_lowscale_offset),				// [0xA3EF]
		LSW_ADDRESS_OF(adc_current_id_lowscale_offset),				// [0xA3F0]
		LSW_ADDRESS_OF(external_chopping_res_cfg),					// [0xA3F1]
		LSW_ADDRESS_OF(absolute_position_fdbk1),					// [0xA3F2]
		MSW_ADDRESS_OF(absolute_position_fdbk1),					// [0xA3F3]
		LSW_ADDRESS_OF(max_spd_dualuse),							// [0xA3F4]
		LSW_ADDRESS_OF(hall_max_spd_dualuse),						// [0xA3F5]
		LSW_ADDRESS_OF(fault_override_option_code),					// [0xA3F6]
		LSW_ADDRESS_OF(phy_drv.revision_number),					// [0xA3F7]
		LSW_ADDRESS_OF(absolute_feedback1_data_buffer_LSB),			// [0xA3F8]
		MSW_ADDRESS_OF(absolute_feedback1_data_buffer_LSB),			// [0xA3F9]
		LSW_ADDRESS_OF(absolute_feedback1_data_buffer_MSB),			// [0xA3FA]
		MSW_ADDRESS_OF(absolute_feedback1_data_buffer_MSB),			// [0xA3FB]
		LSW_ADDRESS_OF(absolute_feedback2_data_buffer_LSB),			// [0xA3FC]
		MSW_ADDRESS_OF(absolute_feedback2_data_buffer_LSB),			// [0xA3FD]
		LSW_ADDRESS_OF(absolute_feedback2_data_buffer_MSB),			// [0xA3FE]
		MSW_ADDRESS_OF(absolute_feedback2_data_buffer_MSB),			// [0xA3FF]
		LSW_ADDRESS_OF(feedback1_leading_zeroes),					// [0xA400]
		LSW_ADDRESS_OF(feedback2_leading_zeroes),					// [0xA401]
		LSW_ADDRESS_OF(feedback1_trailing_bits_shift),				// [0xA402]
		LSW_ADDRESS_OF(feedback2_trailing_bits_shift),				// [0xA403]
		LSW_ADDRESS_OF(feedback1_computed_crc),						// [0xA404]
		LSW_ADDRESS_OF(feedback1_receive_crc),						// [0xA405]
		LSW_ADDRESS_OF(feedback2_computed_crc),						// [0xA406]
		LSW_ADDRESS_OF(feedback2_receive_crc),						// [0xA407]
};


/*******************************************************************/
/*************************** DEBUG VARIABLES ***********************/
int16_t debug_1;
int16_t debug_2;
int16_t debug_3;
int16_t debug_4;
int16_t debug_5;
int16_t debug_6;
int16_t debug_7;
int16_t debug_8;
int16_t debug_9;

/*************************************************************************
* Static variables
*************************************************************************/



/*************************************************************************
* Local function prototypes
*************************************************************************/



/*************************************************************************
* Public functions bodies
*************************************************************************/



/*************************************************************************
* Private functions bodies
*************************************************************************/



/* End of file */

`;
